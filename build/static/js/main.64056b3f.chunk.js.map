{"version":3,"sources":["pages/AboutPage.js","components/account/AccountNav.js","utils/fontAwesome.js","utils/moviesAPI.js","utils/tokenServices.js","utils/userAPI.js","utils/userServices.js","components/movie-displays/GenreList.js","components/BrowseFilters.js","components/BrowseMovieList.js","components/movie-displays/ChatWindow.js","components/FeedbackToast.js","components/login-signup/GoogleLogin.js","components/login-signup/Login.js","components/movie-displays/TrailerModal.js","components/movie-displays/MovieCard.js","components/movie-displays/MovieFeed.js","components/movie-displays/MovieFeedItem.js","components/movie-displays/MovieList.js","components/Navbar.js","components/login-signup/OAuth.js","components/movie-displays/SearchBar.js","components/login-signup/Signup.js","components/account/UserCheckboxList.js","components/account/UserPreferences.js","components/account/Watchlist.js","pages/BrowsePage.js","pages/FindMoviePage.js","pages/HomePage.js","pages/NotFoundPage.js","pages/UserDashboardPage.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","react_default","a","createElement","className","src","muted","autoPlay","loop","alt","AccountNav","_ref","user","fullName","NavLink","to","exact","library","add","faUser","faHome","faSearch","faColumns","faAddressCard","faSignInAlt","faUserPlus","faComments","faEnvelope","faAngleDown","faPlayCircle","faStar","faCheck","faPlus","REACT_APP_SVR_API","process","moviesAPI","getRecs","dataObj","axios","post","concat","headers","Content-Type","getProviders","type","arguments","length","undefined","get","getGenres","getSingleMovie","id","getMovies","genreId","getSearchResults","searchInputValue","params","title","loadNextPage","page","currentGenreFilter","currentSearchQuery","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenServices","setToken","setItem","removeToken","getUserFromToken","REACT_APP_SVR_USERS","userAPI","signup","email","password","pw","login","creds","addToWatchlist","userId","movieId","getPreferences","updatePreferences","newPrefs","patch","getUser","_callee","regenerator_default","wrap","_context","prev","next","Swal","fire","position","text","showConfirmButton","timer","sent","stop","_callee2","response","_context2","data","_callee3","_context3","_callee4","_context4","_id","then","userServices","logout","addToUserWatchlist","GenreList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","genres","_this2","genreResp","setState","_this$props","style","activeGenre","handleSendGenre","activeColor","backgroundColor","inactiveColor","key","onClick","map","genre","technical_name","translation","React","Component","defaultProps","BrowseFilters","handleSearchSubmit","event","preventDefault","handleChange","target","value","toggleShowGenres","prevState","showGenres","_this$state","onSubmit","onChange","placeholder","GenreList_GenreList","display","BrowseMovieList","movies","hasNextPage","toggleModal","loadMoreMovies","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","height","movie","images","poster","ChatWindow","skipQuestion","endChat","greetingQuestion","asyncToGenerator","mark","abrupt","botui","message","bot","content","delay","delays","initial","nextQ","moodQuestion","_ref2","genreIds","action","button","Comedy","Western","Crime","Drama","Thriller","Horror","Romance","Fantasy","History","Documentary","moodRes","objectSpread","_x","apply","ageQuestion","ansOptions","ageRes","certification","eraQuestion","eraRes","min_year","max_year","console","error","animatedQuestion","_ref5","_callee5","_context5","animRes","array","toConsumableArray","push","Animation","_x2","foreignQuestion","_callee6","_context6","forRes","foreign","indieQuestion","_callee7","_context7","indieRes","indie","ratingsQuestion","_callee9","_context9","_ref9","_callee8","ratingsRes","_context8","rtQuestion","imdbQuestion","rotten_tomatoes","imdb","_x3","_callee10","_context10","rtRes","_callee11","_context11","imdbRes","resultsMessage","getMovieResults","loading","endChatFunc","toggleChat","resetMovieResults","setTimeout","lib_default","ref","cmp","FeedbackToast","showAlert","hasShown","showCloseButton","confirmButtonText","confirmButtonAriaLabel","width","results","window","open","render","GoogleLogin","href","viewBox","fill","fillRule","d","Login","field","e","defineProperty","handleSubmit","handleLogin","catch","err","Link","components_login_signup_GoogleLogin","TrailerModal","trailerList","toggleTrailer","role","tabIndex","url","frameBorder","allow","allowFullScreen","MovieCard","handleAddToWatchlist","selectedTrailerList","trailerVisible","overview","ratings","metacritic","offers","buy","rent","stream","release","runtime","credits","cast","crew","backdrops","posters","genreProps","jw_url","jw_image_url","certifications","genre_ids","release_year","modRatings","genresArray","cert","forEach","genreName","find","name","internet_movie_database","slicedToArray","videos","_this$props2","directorList","backdropLink","posterLink","backdropNum","Math","floor","random","filter","member","job","backdrop_url","posterNum","poster_url","videoPlayIcon","react_fontawesome_index_es","icon","backgroundImage","components_movie_displays_TrailerModal","MovieCard_RatingsView","join","MovieCard_StreamsView","StreamsView","strmSrc","sizedIcon","provider","icon_url","replace","imgLink","streamLink","hd","sd","fourk","clear_name","rel","RatingsView","rtData","imdbData","rate","MovieFeed","MovieFeedItem_MovieFeedItem","MovieFeedItem","randomizeBackdrop","randBD","toggleExpanded","isExpanded","backgroundPositionX","MovieFeedItem_RatingsView","MovieFeedItem_StreamsView","padding","Navbar","menuOpen","isOpen","handleLogout","BurgerMenu","right","onStateChange","handleStateChange","closeMenu","Fragment","SearchBar","toggleHover","hover","intervalId","hoverStyle","showGenreFilter","moviesByGenreId","Signup","handleSignup","pwConfirm","formValid","match","_this$state2","isFormInvalid","UserCheckboxList","options","handleReset","handleSelectAll","onReset","option","checked","htmlFor","UserPreferences","handleSavePrefs","SweetAlert","handlePrefChange","prefSection","handlePrefReset","defaults","off","on","convertStateToDisplay","displayList","stateSection","keys","iDkey","nameMaps","G","PG","PG-13","R","NC-17","none","providers","minRating","maxRating","rottenTomatoes","minYear","maxYear","all","spread","provResp","prefResp","display_priority","preferences","_this3","genreList","certList","provList","relSliderVals","min","max","imdbSliderVals","rtSliderVals","metaSliderVals","account_UserCheckboxList","js_default","minValue","maxValue","step","round","formatLabel","Watchlist","showWatchedMovies","toggleWatchedMovies","bind","assertThisInitialized","image","BrowsePage","scrollTo","nextPageNum","genreKey","handleLoadMoreMovies","res","selectedMovie","isModalVisible","movieResp","BrowseFilters_BrowseFilters","components_movie_displays_MovieCard","BrowseMovieList_BrowseMovieList","FindMoviePage","talkedToLloyd","getGenreData","reduce","acc","curr","mountChat","componentDidMount","components_movie_displays_ChatWindow","MovieFeed_MovieFeed","background","HomePage","NotFoundPage","color","textAlign","textShadow","userDashboardPage","account_AccountNav","Route","path","component","require","config","App","isAuthenticated","location","history","query","queryString","search","components_Navbar","components_FeedbackToast","Switch","Redirect","components_login_signup_Login","assign","components_login_signup_Signup","_ref3","pages_UserDashboardPage","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64056b3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/css-pages/AboutPage.css';\r\n\r\nconst AboutPage = () => (\r\n  <div className=\"about-page\">\r\n    <header>\r\n      <div className=\"overlay\" />\r\n      <video\r\n        src=\"/images/backgrounds/about-me-videooverlay.mp4\"\r\n        muted\r\n        autoPlay\r\n        loop\r\n      />\r\n      <div className=\"mission\">\r\n        <h1>Our Mission</h1>\r\n        <p>\r\n          Our mission is to transform how consumers choose which movies to\r\n          watch. Our technology intelligently curates a unique personal\r\n          experience based on personality, viewing habits, and diverse interests\r\n          to help ensure that every person loves the next movie more than the\r\n          last.\r\n        </p>\r\n      </div>\r\n    </header>\r\n    <div className=\"info\">\r\n      <div className=\"info-panel\">\r\n        <img\r\n          src=\"/images/shared-pics/warning-sign.png\"\r\n          alt=\"warning\"\r\n          className=\"about-icon\"\r\n        />\r\n        <div>\r\n          <h3>The Problem</h3>\r\n          <p>\r\n            Over 500,000 movies available. It&apos;s hard to find a movie to\r\n            watch with so many options across mutiple platforms.\r\n            <br />\r\n            <br />\r\n            - 4,010 movies on Netflix 2018\r\n            <br />\r\n            - 18,405 movies on Amazon Prime 2016\r\n            <br />- Over 2,500 movies on Hulu 2018\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"info-panel\">\r\n        <img\r\n          src=\"/images/shared-pics/solution.png\"\r\n          alt=\"solution\"\r\n          className=\"about-icon\"\r\n        />\r\n        <div>\r\n          <h3>Solution</h3>\r\n          <p>\r\n            YaMovie offers a way to recieve personally curated movies all in one\r\n            place and provide info on where to watch them.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"info-panel\">\r\n        <img\r\n          src=\"/images/shared-pics/book.png\"\r\n          alt=\"solution\"\r\n          className=\"about-icon\"\r\n        />\r\n        <div>\r\n          <h3>Story</h3>\r\n          <p>\r\n            Established in 2019 as part of the first Los Angeles cohort at\r\n            TalentPath. YaMovie was created by a team of software engineers who\r\n            are passionate about movies.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"avatar-section\">\r\n      <h2 className=\"avatar-header\">Meet The Team</h2>\r\n      <div className=\"avatar-list\">\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/ivy.png\"\r\n              alt=\"Ivy Lim\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Ivy</h3>\r\n          <h5 className=\"avatar-role\">Project Manager / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">Favorite Movies: Star Wars</p>\r\n          <p className=\"avatar-show\">Favorite Show: Game of Thrones</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\r\n        </div>\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/sam.png\"\r\n              alt=\"Sam Saks-Fithian\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Sam</h3>\r\n          <h5 className=\"avatar-role\">GitHub Manager / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">Favorite Movies: MCU</p>\r\n          <p className=\"avatar-show\">Favorite Show: The Good Place</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Action Comedy</p>\r\n        </div>\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/kevin.png\"\r\n              alt=\"Kevin Baktiar\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Kevin</h3>\r\n          <h5 className=\"avatar-role\">Designer / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">Favorite Movie: The Matrix</p>\r\n          <p className=\"avatar-show\">Favorite Show: New Girl</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\r\n        </div>\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/hans.png\"\r\n              alt=\"Hans Hanken\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Hans</h3>\r\n          <h5 className=\"avatar-role\">Flex / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">Favorite Movies: The Lord of the Rings</p>\r\n          <p className=\"avatar-show\">Favorite Show: Brooklyn Nine Nine</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Adventure</p>\r\n        </div>\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/will.png\"\r\n              alt=\"Will Dale\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Will</h3>\r\n          <h5 className=\"avatar-role\">&lsquo;HR&rsquo; / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">Favorite Movie: The Producers</p>\r\n          <p className=\"avatar-show\">Favorite Show: The Wire</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Historical Drama</p>\r\n        </div>\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar-item\">\r\n            <img\r\n              src=\"/images/team/glen.png\"\r\n              alt=\"Glen Paul Florendo\"\r\n              className=\"avatar-image\"\r\n            />\r\n          </div>\r\n          <h3 className=\"avatar-name\">Glen</h3>\r\n          <h5 className=\"avatar-role\">Back-End Lead / Software Engineer</h5>\r\n          <p className=\"avatar-movie\">\r\n            Favorite Movie: Spider-Man: Into the Spider-Verse\r\n          </p>\r\n          <p className=\"avatar-show\">Favorite Show: The Office</p>\r\n          <p className=\"avatar-genre\"> Favorite Genre: Action</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AccountNav = ({ user }) => (\r\n  <aside className=\"account-nav\">\r\n    <div className=\"user-name\">{user.fullName}</div>\r\n    <NavLink className=\"nav-link\" to=\"/account\" exact>\r\n      Preferences\r\n    </NavLink>\r\n    <NavLink className=\"nav-link\" to=\"/account/watchlist\">\r\n      Watchlist\r\n    </NavLink>\r\n    {/* <NavLink className=\"nav-link\" to=\"/account/settings\">\r\n      Settings\r\n    </NavLink> */}\r\n  </aside>\r\n);\r\n\r\nAccountNav.propTypes = {\r\n  user: PropTypes.shape(Object).isRequired,\r\n};\r\n\r\nexport default AccountNav;\r\n","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faUser,\r\n  faHome,\r\n  faSearch,\r\n  faColumns,\r\n  faAddressCard,\r\n  faSignInAlt,\r\n  faUserPlus,\r\n  faComments,\r\n  faEnvelope,\r\n  faAngleDown,\r\n  faPlayCircle,\r\n  faStar,\r\n  faCheck,\r\n  faPlus,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nlibrary.add(\r\n  faUser,\r\n  faHome,\r\n  faSearch,\r\n  faColumns,\r\n  faAddressCard,\r\n  faSignInAlt,\r\n  faUserPlus,\r\n  faComments,\r\n  faEnvelope,\r\n  faAngleDown,\r\n  faPlayCircle,\r\n  faStar,\r\n  faCheck,\r\n  faPlus,\r\n);\r\n\r\nexport { FontAwesomeIcon };\r\n","import axios from 'axios';\r\n\r\nconst { REACT_APP_SVR_API } = process.env;\r\n\r\n/**\r\n * Gets the list of recommended movies based on the input filter options data\r\n * @param {Object} dataObj an object containing all of the recommendation filter options\r\n * @returns An Axios promise with the recommendation data\r\n */\r\nfunction getRecs(dataObj) {\r\n  return axios.post(`${REACT_APP_SVR_API}/movies/recommend`, dataObj, {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the list of all provider objects\r\n * @param {String} [type] the type of provider (i.e. stream, rent, buy, free)\r\n * @returns An Axios promise with the provider data\r\n */\r\nfunction getProviders(type = '') {\r\n  if (type !== '') {\r\n    return axios.get(`${REACT_APP_SVR_API}/providers/${type}`);\r\n  }\r\n  return axios.get(`${REACT_APP_SVR_API}/providers`);\r\n}\r\n\r\n/**\r\n * Gets the list of all genre objects\r\n * @returns An Axios promise with the genre data\r\n */\r\nfunction getGenres() {\r\n  return axios.get(`${REACT_APP_SVR_API}/genres`);\r\n}\r\n\r\n/**\r\n * Gets the data for a movie\r\n * @param {String} [id]\r\n * @returns An Axios promise with the movie data\r\n */\r\nfunction getSingleMovie(id) {\r\n  return axios.get(`${REACT_APP_SVR_API}/movies/${id}`);\r\n}\r\n\r\n/**\r\n * Gets all the movies, optionally filtered by genreId\r\n * @param {String} [genreId]\r\n * @returns An Axios promise with the movie data\r\n */\r\nfunction getMovies(genreId = 'all') {\r\n  if (genreId !== 'all') {\r\n    return axios.get(`${REACT_APP_SVR_API}/movies/genre/${genreId}`);\r\n  }\r\n  return axios.get(`${REACT_APP_SVR_API}/movies/`);\r\n}\r\n\r\n/**\r\n * Gets the movie results filtered by the input search text\r\n * @param {String} searchInputValue the thing to search by\r\n * @returns an axios promise with the search results\r\n */\r\nfunction getSearchResults(searchInputValue) {\r\n  return axios.get(`${REACT_APP_SVR_API}/movies/search`, {\r\n    params: {\r\n      title: searchInputValue,\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the next page of movies, taking into account whether the movies are filtered\r\n * by a search or by a genre\r\n * @param {number} page\r\n * @param {String} currentGenreFilter the ObjectId for the genre the movies are filtered by\r\n * @param {String} currentSearchQuery the query if the movies are currently filtered by search\r\n * @returns an axios promise with the data for the next page\r\n */\r\nfunction loadNextPage(page, currentGenreFilter = 'all', currentSearchQuery = '') {\r\n  // if there is a genre filter\r\n  if (currentGenreFilter !== 'all') {\r\n    return axios.get(\r\n      `${REACT_APP_SVR_API}/movies/genre/${currentGenreFilter}/?page=${page}`,\r\n    );\r\n  }\r\n  // if there is a search query\r\n  if (currentSearchQuery !== '') {\r\n    return axios.get(`${REACT_APP_SVR_API}/movies/search`, {\r\n      params: { title: currentSearchQuery, page },\r\n    });\r\n  }\r\n  // otherwise, just normal movies\r\n  return axios.get(`${REACT_APP_SVR_API}/movies/?page=${page}`);\r\n}\r\n\r\nexport default {\r\n  getRecs,\r\n  getProviders,\r\n  getGenres,\r\n  getSingleMovie,\r\n  getMovies,\r\n  getSearchResults,\r\n  loadNextPage,\r\n};\r\n","/**\r\n * Set token to local storage\r\n * @param {string} token\r\n */\r\nfunction setToken(token) {\r\n  if (token) {\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n\r\n/**\r\n * check if there is a token in local storage\r\n * if there is a token, check to see if token is valid\r\n */\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if (token) {\r\n    // check if expired, remove if it is\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    // JWT's exp is expressed in seconds, not milliseconds, so convert Date.now()\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\n/**\r\n * parse token for user information\r\n * @returns {Object} or null\r\n */\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  // jwt parsing\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst { REACT_APP_SVR_USERS, REACT_APP_SVR_API } = process.env;\r\n\r\n/**\r\n * Axios call to database to signup user\r\n * @param {Object} user\r\n * @returns {string} token\r\n */\r\nfunction signup(user) {\r\n  return axios.post(\r\n    `${REACT_APP_SVR_USERS}/signup`,\r\n    { email: user.email, fullName: user.fullName, password: user.pw },\r\n    { headers: { 'Content-Type': 'application/json' } },\r\n  );\r\n}\r\n\r\n/**\r\n * Axios call to database to verify user login\r\n * @param {Object} creds\r\n *  * @returns {string} token\r\n */\r\nfunction login(creds) {\r\n  return axios.post(\r\n    `${REACT_APP_SVR_USERS}/login`,\r\n    { email: creds.email, pw: creds.pw },\r\n    { headers: { 'Content-Type': 'application/json' } },\r\n  );\r\n}\r\n\r\nfunction addToWatchlist(userId, movieId) {\r\n  // add to user watchlist\r\n  return axios.post(\r\n    `${REACT_APP_SVR_USERS}/watchlist`,\r\n    { userId, movieId },\r\n    { headers: { 'Content-Type': 'application/json' } },\r\n  );\r\n}\r\n\r\nfunction getPreferences(userId) {\r\n  return axios.get(`${REACT_APP_SVR_API}/preferences/${userId}`);\r\n}\r\n\r\nfunction updatePreferences(userId, newPrefs) {\r\n  return axios.patch(\r\n    `${REACT_APP_SVR_API}/preferences/${userId}`,\r\n    { newPrefs },\r\n    { headers: { 'Content-Type': 'application/json' } },\r\n  );\r\n}\r\n\r\nexport default {\r\n  signup,\r\n  login,\r\n  addToWatchlist,\r\n  getPreferences,\r\n  updatePreferences,\r\n};\r\n","import Swal from 'sweetalert2';\r\nimport tokenServices from './tokenServices';\r\nimport userAPI from './userAPI';\r\n\r\nfunction getUser() {\r\n  return tokenServices.getUserFromToken();\r\n}\r\n\r\nasync function logout() {\r\n  Swal.fire({\r\n    position: 'top-end',\r\n    type: 'success',\r\n    text: 'Sucessfully Logged Out!',\r\n    showConfirmButton: false,\r\n    timer: 1300,\r\n  });\r\n  const logout = await tokenServices.removeToken();\r\n}\r\n\r\n/**\r\n * checks users email and password\r\n * @param {Object} creds\r\n * @returns token\r\n */\r\nasync function login(creds) {\r\n  const response = await userAPI.login(creds);\r\n  const { token } = response.data;\r\n  tokenServices.setToken(token);\r\n}\r\n\r\n/**\r\n * creates new user\r\n * @param {Object} user\r\n * @returns token\r\n */\r\nasync function signup(user) {\r\n  const response = await userAPI.signup(user);\r\n  const { token } = response.data;\r\n  tokenServices.setToken(token);\r\n}\r\n/**\r\n * Find user and send UserId and movieId\r\n * @param {string} movieId\r\n */\r\nasync function addToUserWatchlist(movieId) {\r\n  const user = await getUser();\r\n  // if user exists\r\n  if (user) {\r\n    userAPI.addToWatchlist(user._id, movieId).then(() =>\r\n      Swal.fire({\r\n        position: 'top-end',\r\n        type: 'success',\r\n        text: 'Added to Watchlist',\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nexport default {\r\n  getUser,\r\n  logout,\r\n  login,\r\n  signup,\r\n  addToUserWatchlist,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { moviesAPI } from '../../utils';\r\nimport '../../css/movie-displays/GenreList.css';\r\n// Renders the genre list to the MovieList page. ==================\r\nexport default class GenreList extends React.Component {\r\n  static propTypes = {\r\n    style: PropTypes.shape({ display: PropTypes.string }),\r\n    handleSendGenre: PropTypes.func.isRequired,\r\n    activeGenre: PropTypes.string.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    style: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genres: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    moviesAPI.getGenres().then(genreResp =>\r\n      this.setState({\r\n        genres: genreResp.data,\r\n      }),\r\n    );\r\n  }\r\n\r\n  // ===============================================================\r\n\r\n  render() {\r\n    const { style, activeGenre, handleSendGenre } = this.props;\r\n    const { genres } = this.state;\r\n\r\n    const activeColor = { backgroundColor: '#88388c' };\r\n    const inactiveColor = { backgroundColor: 'rgba(226, 217, 217, 0.0)' };\r\n\r\n    return (\r\n      <div id=\"list-genres\" style={style}>\r\n        <button\r\n          className=\"single-genre\"\r\n          type=\"button\"\r\n          key=\"all\"\r\n          style={activeGenre === 'all' ? activeColor : inactiveColor}\r\n          onClick={() => handleSendGenre('all')}\r\n        >\r\n          All\r\n        </button>\r\n        {genres.map(genre => (\r\n          <button\r\n            className=\"single-genre\"\r\n            type=\"button\"\r\n            key={genre.technical_name}\r\n            style={activeGenre === genre._id ? activeColor : inactiveColor}\r\n            onClick={() => handleSendGenre(genre._id)}\r\n          >\r\n            {genre.translation}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GenreList from './movie-displays/GenreList';\r\n\r\nimport '../css/BrowseFilters.css';\r\n\r\nexport default class BrowseFilters extends Component {\r\n  static propTypes = {\r\n    handleSearchSubmit: PropTypes.func.isRequired,\r\n    handleSendGenre: PropTypes.func.isRequired,\r\n    currentGenreFilter: PropTypes.string.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showGenres: false,\r\n      searchInputValue: '',\r\n    };\r\n  }\r\n\r\n  // ===============================================================\r\n  // Handlers\r\n\r\n  /**\r\n   * Handles submission of a search query. Prevents page refresh, calls the BrowsePage\r\n   * submit function with the current search text, and then clears the text field.\r\n   * @param {Event} event the form submit event\r\n   */\r\n  handleSearchSubmit = event => {\r\n    event.preventDefault();\r\n    const { handleSearchSubmit } = this.props;\r\n    const { searchInputValue } = this.state;\r\n    handleSearchSubmit(searchInputValue);\r\n    this.setState({ searchInputValue: '' });\r\n  };\r\n\r\n  /**\r\n   * Handles the change of the input text\r\n   * @param {Event} event the form change event\r\n   */\r\n  handleChange = event => {\r\n    this.setState({ searchInputValue: event.target.value });\r\n  };\r\n\r\n  /**\r\n   * Toggles whether the genre selector is visible or not\r\n   */\r\n  toggleShowGenres = () => {\r\n    this.setState(prevState => ({ showGenres: !prevState.showGenres }));\r\n  };\r\n\r\n  // ===============================================================\r\n  // Render\r\n\r\n  render() {\r\n    const { handleSendGenre, currentGenreFilter } = this.props;\r\n    const { showGenres, searchInputValue } = this.state;\r\n\r\n    return (\r\n      <div id=\"mega-search-genres\">\r\n        <form id=\"browse-search\" onSubmit={this.handleSearchSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchInputValue}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search Movies\"\r\n          />\r\n        </form>\r\n        <button\r\n          type=\"button\"\r\n          id=\"display-genre-button\"\r\n          onClick={this.toggleShowGenres}\r\n        >\r\n          Display Genres\r\n        </button>\r\n        <GenreList\r\n          handleSendGenre={handleSendGenre}\r\n          activeGenre={currentGenreFilter}\r\n          style={{ display: showGenres ? 'flex' : 'none' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport '../css/BrowseMovieList.css';\r\n\r\nexport default class BrowseMovieList extends Component {\r\n  static propTypes = {\r\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    toggleModal: PropTypes.func.isRequired,\r\n    hasNextPage: PropTypes.bool.isRequired,\r\n    loadMoreMovies: PropTypes.func.isRequired,\r\n  };\r\n\r\n  // ===============================================================\r\n  // Render\r\n\r\n  render() {\r\n    const { movies, hasNextPage, toggleModal, loadMoreMovies } = this.props;\r\n\r\n    return (\r\n      <InfiniteScroll\r\n        id=\"yamovie-movie-list\"\r\n        pageStart={0}\r\n        loadMore={loadMoreMovies}\r\n        hasMore={hasNextPage}\r\n        loader={\r\n          <div className=\"loader\" key=\"loader\">\r\n            <img\r\n              style={{ height: 200 }}\r\n              src=\"./images/popcorn-loading.gif\"\r\n              alt=\"Loading ...\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <div id=\"list-all-movies\">\r\n          {movies.map(movie => (\r\n            <div id=\"yamovie-movie-item\" key={movie.title}>\r\n              {/* TODO: Wrap this in a button for accessability and to make ESlint happy */}\r\n              <img\r\n                src={movie.images.poster}\r\n                alt={movie.title}\r\n                className=\"img-fluid\"\r\n                onClick={() => toggleModal(movie)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Botui from 'botui-react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/movie-displays/ChatWindow.css';\r\n\r\nclass ChatWindow extends React.Component {\r\n  static propTypes = {\r\n    getMovieResults: PropTypes.func.isRequired,\r\n    resetMovieResults: PropTypes.func.isRequired,\r\n    toggleChat: PropTypes.func.isRequired,\r\n    genreIds: PropTypes.shape().isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataObj: {\r\n        certification: 'R',\r\n        min_year: 0,\r\n        max_year: 3000,\r\n        foreign: true,\r\n        indie: false,\r\n        imdb: 0,\r\n        rotten_tomatoes: 0,\r\n        genres: [''],\r\n      },\r\n      endChat: false,\r\n    };\r\n    this.delays = {\r\n      initial: 250,\r\n      response: 500,\r\n      nextQ: 1250,\r\n      ansOptions: 1750,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { genreIds } = this.props;\r\n    await this.greetingQuestion();\r\n    await this.moodQuestion(genreIds);\r\n    await this.ageQuestion();\r\n    await this.eraQuestion();\r\n    await this.animatedQuestion(genreIds);\r\n    await this.foreignQuestion();\r\n    await this.indieQuestion();\r\n    await this.ratingsQuestion();\r\n    this.endChatFunc();\r\n  }\r\n\r\n  /**\r\n   * Checks whether the chat is ended and if the BotUi still exists and\r\n   * other things to determine if a question should be skipped.\r\n   * @returns {boolean} True if question should be skipped, false otherwise\r\n   */\r\n  skipQuestion = () => {\r\n    const { endChat } = this.state;\r\n    if (endChat) {\r\n      return true;\r\n    }\r\n    // if (!this.botui) { return true; }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Shows the initial greeting message, the question for if the user wants recs,\r\n   * and then the answer option buttons\r\n   * @returns {Promise} When fulfilled, promise will contain true or false if they want recs\r\n   */\r\n  greetingQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'Hello! 👋 My name is Lloyd! 😁',\r\n      delay: this.delays.initial,\r\n    });\r\n    await this.botui.message.bot({\r\n      content:\r\n        \"I'm going to ask you a few questions so I can help you find a movie! 🎬\",\r\n      delay: this.delays.nextQ,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's mood, displays button response options, then sets the state\r\n   * and displays a response message when they have selected an option\r\n   */\r\n  moodQuestion = async genreIds => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'What kind of movie are you in the mood for?',\r\n      delay: this.delays.response,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: [genreIds.Comedy], text: 'Funny 😆' },\r\n          {\r\n            value: [genreIds['War & Military'], genreIds.Western],\r\n            text: 'Sad 😭',\r\n          },\r\n          {\r\n            value: [genreIds.Crime, genreIds['Mystery & Thriller']],\r\n            text: 'Mysterious 🤔',\r\n          },\r\n          {\r\n            value: [genreIds.Drama, genreIds['War & Military']],\r\n            text: 'Dramatic 😮',\r\n          },\r\n          { value: [genreIds.Thriller, genreIds.Crime], text: 'Thrilling 😲' },\r\n          { value: [genreIds.Horror], text: 'Scary 😱' },\r\n          {\r\n            value: [\r\n              genreIds['Action & Adventure'],\r\n              genreIds['Sport & Fitness'],\r\n            ],\r\n            text: 'Action Packed 🏃‍💥',\r\n          },\r\n          { value: [genreIds.Romance], text: 'Romantic 😍' },\r\n          {\r\n            value: [genreIds.Fantasy, genreIds['Science-Fiction']],\r\n            text: 'Fantastical 👽🧝‍',\r\n          },\r\n          {\r\n            value: [genreIds.History, genreIds.Documentary],\r\n            text: 'Informative 🌍',\r\n          },\r\n          { value: [genreIds['Kids & Family']], text: 'Heartwarming 👨‍👩‍👧‍👦' },\r\n          { value: [genreIds['Music & Musical']], text: 'Musical 🎶' },\r\n        ],\r\n        delay: this.delays.nextQ,\r\n      })\r\n      .then(moodRes => {\r\n        this.setState(prevState => ({\r\n          dataObj: { ...prevState.dataObj, genres: moodRes.value },\r\n        }));\r\n        this.botui.message.bot({\r\n          content: 'Awesome!',\r\n          delay: this.delays.response,\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's age, displays button response options, then sets the state\r\n   * and displays a response message when they have selected an option\r\n   */\r\n  ageQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'What is your age range?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: 'PG', text: '12 and Under' },\r\n          { value: 'PG-13', text: '13 - 17' },\r\n          { value: 'R', text: '18 +' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(ageRes => {\r\n        if (ageRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        } else {\r\n          this.setState(prevState => ({\r\n            dataObj: {\r\n              ...prevState.dataObj,\r\n              certification: ageRes.value,\r\n            },\r\n          }));\r\n          this.botui.message.bot({\r\n            content: 'Thanks!',\r\n            delay: this.delays.response,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's movie era preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  eraQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'Do you want to watch a classic or modern movie?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: 'classic', text: 'Classic (before 1980)' },\r\n          { value: 'in-between', text: 'In Between (1980-2010)' },\r\n          { value: 'modern', text: 'Modern (after 2010)' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(eraRes => {\r\n        switch (eraRes.value) {\r\n          case 'end':\r\n            this.setState({ endChat: true });\r\n            break;\r\n          case 'classic':\r\n            this.setState(prevState => ({\r\n              dataObj: {\r\n                ...prevState.dataObj,\r\n                min_year: 0,\r\n                max_year: 1980,\r\n              },\r\n            }));\r\n            break;\r\n          case 'in-between':\r\n            this.setState(prevState => ({\r\n              dataObj: {\r\n                ...prevState.dataObj,\r\n                min_year: 1980,\r\n                max_year: 2010,\r\n              },\r\n            }));\r\n            break;\r\n          case 'modern':\r\n            this.setState(prevState => ({\r\n              dataObj: {\r\n                ...prevState.dataObj,\r\n                min_year: 2010,\r\n                max_year: 3000,\r\n              },\r\n            }));\r\n            break;\r\n          default:\r\n            console.error('error');\r\n        }\r\n        this.botui.message.bot({\r\n          content: 'Me too!',\r\n          delay: this.delays.response,\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's animation preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  animatedQuestion = async genreIds => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'Do you like animated films?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        // TODO: Make this answer have more options that are more clear\r\n        action: [\r\n          { value: true, text: 'Yes 👍' },\r\n          { value: false, text: 'No 👎' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(animRes => {\r\n        if (animRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        }\r\n        if (animRes.value === true) {\r\n          const array = [...this.state.dataObj.genres];\r\n          array.push(genreIds.Animation);\r\n          this.setState(prevState => ({\r\n            dataObj: {\r\n              ...prevState.dataObj,\r\n              genres: array,\r\n            },\r\n          }));\r\n        }\r\n        this.botui.message.bot({\r\n          content: 'Cool!',\r\n          delay: this.delays.response,\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's foreign film preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  foreignQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'How about foreign films?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        // TODO: Make this answer have more options that are more clear\r\n        action: [\r\n          { value: true, text: 'Yes 👍' },\r\n          { value: false, text: 'No 👎' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(forRes => {\r\n        if (forRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        }\r\n        this.setState(prevState => ({\r\n          dataObj: {\r\n            ...prevState.dataObj,\r\n            foreign: forRes.value,\r\n          },\r\n        }));\r\n        this.botui.message.bot({\r\n          content: 'Great!',\r\n          delay: this.delays.response,\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's indie preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  indieQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'Do you like independent films?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        // TODO: Make this answer have more options that are more clear\r\n        action: [\r\n          { value: true, text: 'Yes 👍' },\r\n          { value: false, text: 'No 👎' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(indieRes => {\r\n        if (indieRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        }\r\n        this.setState(prevState => ({\r\n          dataObj: {\r\n            ...prevState.dataObj,\r\n            indie: indieRes.value,\r\n          },\r\n        }));\r\n        this.botui.message.bot({\r\n          // TODO: Move this response to after a different question\r\n          content: 'You have good taste!',\r\n          delay: this.delays.response,\r\n        });\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Asks about the user's ratings preference, displays button response options, then\r\n   * follows up based on their response. Calls the sub-functions to get actual rating info\r\n   * for each Rotten Tomatoes and IMDB ratings.\r\n   */\r\n  ratingsQuestion = async () => {\r\n    if (this.skipQuestion()) {\r\n      return;\r\n    }\r\n\r\n    this.botui.message.bot({\r\n      content: 'What ratings do you care about?',\r\n      delay: this.delays.nextQ,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: 'rotten-tomatoes', text: 'Rotten Tomatoes' },\r\n          { value: 'imdb', text: 'IMDB' },\r\n          { value: 'dont-care', text: 'I Dont Care' },\r\n          { value: 'both', text: 'Both' },\r\n        ],\r\n        delay: this.delays.ansOptions,\r\n      })\r\n      .then(async ratingsRes => {\r\n        if (\r\n          ratingsRes.value === 'both' ||\r\n          ratingsRes.value === 'rotten-tomatoes'\r\n        ) {\r\n          await this.rtQuestion();\r\n        }\r\n        if (ratingsRes.value === 'both' || ratingsRes.value === 'imdb') {\r\n          await this.imdbQuestion();\r\n        }\r\n        if (ratingsRes.value === 'dont-care') {\r\n          this.setState({ endChat: true });\r\n          this.setState(prevState => ({\r\n            dataObj: {\r\n              ...prevState.dataObj,\r\n              rotten_tomatoes: 0,\r\n              imdb: 0,\r\n            },\r\n          }));\r\n        }\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Sub-function for Rotten Tomatoes rating preferences --\r\n   * Asks about the user's RT threshold preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  rtQuestion = async () => {\r\n    this.botui.message.bot({\r\n      content: 'Minimum Rotten Tomatoes rating?',\r\n      delay: this.delays.response,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: 60, text: '60%' },\r\n          { value: 75, text: '75%' },\r\n          { value: 0, text: 'No Minimum' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.nextQ,\r\n      })\r\n      .then(rtRes => {\r\n        if (rtRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        }\r\n        this.setState(prevState => ({\r\n          dataObj: {\r\n            ...prevState.dataObj,\r\n            rotten_tomatoes: rtRes.value,\r\n          },\r\n        }));\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Sub-function for IMDB rating preferences --\r\n   * Asks about the user's IMDB threshold preference, displays button response options, then\r\n   * sets the state and displays a response message when they have selected an option\r\n   */\r\n  imdbQuestion = async () => {\r\n    this.botui.message.bot({\r\n      content: 'Minimum IMDB rating?',\r\n      delay: this.delays.response,\r\n    });\r\n    await this.botui.action\r\n      .button({\r\n        action: [\r\n          { value: 5, text: '5/10' },\r\n          { value: 7, text: '7/10' },\r\n          { value: 0, text: 'No Minimum' },\r\n          { value: 'end', text: 'Show YaMovie results! 🍿' },\r\n        ],\r\n        delay: this.delays.nextQ,\r\n      })\r\n      .then(imdbRes => {\r\n        if (imdbRes.value === 'end') {\r\n          this.setState({ endChat: true });\r\n        }\r\n        this.setState(prevState => ({\r\n          dataObj: {\r\n            ...prevState.dataObj,\r\n            imdb: imdbRes.value,\r\n          },\r\n        }));\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Displays the loading message that its getting results\r\n   */\r\n  resultsMessage = getMovieResults => {\r\n    if (!this.botui) {\r\n      return;\r\n    }\r\n\r\n    const { dataObj } = this.state;\r\n    this.botui.message\r\n      .bot({\r\n        loading: true,\r\n        content: 'Getting results now!',\r\n        delay: 5000,\r\n      })\r\n      .then(() => {\r\n        getMovieResults(dataObj);\r\n      });\r\n  };\r\n\r\n  async endChatFunc() {\r\n    const { getMovieResults, toggleChat, resetMovieResults } = this.props;\r\n    await resetMovieResults();\r\n    await this.resultsMessage(getMovieResults);\r\n    await setTimeout(() => {\r\n      toggleChat();\r\n    }, 6000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-window\">\r\n        {/* eslint-disable-next-line no-return-assign */}\r\n        <Botui ref={cmp => (this.botui = cmp)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass FeedbackToast extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      render: false,\r\n      hasShown: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ render: true });\r\n    }, 180000);\r\n  }\r\n\r\n  showAlert = () => {\r\n    const { hasShown } = this.state;\r\n    if (!hasShown) {\r\n      this.setState({ hasShown: true });\r\n      Swal.fire({\r\n        position: 'bottom-end',\r\n        title: '<strong> What do you think of our site? </strong>',\r\n        type: 'question',\r\n        showCloseButton: true,\r\n        showConfirmButton: true,\r\n        confirmButtonText: 'Give Feedback!',\r\n        confirmButtonAriaLabel: 'Give Feedback!',\r\n        width: 450,\r\n      }).then(results => {\r\n        if (results.value) {\r\n          window.open('https://forms.gle/xJoQ54DaX4omm74Z7', '_blank');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { render } = this.state;\r\n    //   const { show } = this.state;\r\n    //   const handleHide = () => this.setState({ show: false });\r\n    //   const handleShow = () => this.setState({ show: true });\r\n    return render && <div className=\"toast-alert\">{this.showAlert()}</div>;\r\n  }\r\n}\r\n\r\nexport default FeedbackToast;\r\n","import React from 'react';\r\nimport '../../css/login-signup/GoogleLogin.css';\r\n\r\nconst GoogleLogin = () => (\r\n  <a href={`${process.env.REACT_APP_SVR_AUTH}/google`} className=\"google-link\">\r\n    <span className=\"svgIcon t-popup-svg\">\r\n      <svg className=\"svgIcon-use\" width=\"25\" height=\"30\" viewBox=\"0 0 25 25\">\r\n        <g fill=\"none\" fillRule=\"evenodd\">\r\n          <path\r\n            d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\"\r\n            fill=\"#4285F4\"\r\n          />\r\n          <path\r\n            d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\"\r\n            fill=\"#34A853\"\r\n          />\r\n          <path\r\n            d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\"\r\n            fill=\"#FBBC05\"\r\n          />\r\n          <path\r\n            d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\"\r\n            fill=\"#EA4335\"\r\n          />\r\n        </g>\r\n      </svg>\r\n    </span>\r\n    <span className=\"button-label\">Login with Google</span>\r\n  </a>\r\n);\r\n\r\nexport default GoogleLogin;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Swal from 'sweetalert2';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleLogin from './GoogleLogin';\r\nimport userServices from '../../utils/userServices';\r\nimport '../../css/login-signup/Login.css';\r\n\r\nclass Login extends Component {\r\n  static propTypes = {\r\n    handleLogin: PropTypes.func.isRequired,\r\n    history: PropTypes.shape({\r\n      push: PropTypes.func,\r\n    }).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      pw: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (field, e) => {\r\n    this.setState({\r\n      [field]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { handleLogin } = this.props;\r\n    e.preventDefault();\r\n    userServices\r\n      .login(this.state)\r\n      .then(() => {\r\n        handleLogin();\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          type: 'success',\r\n          text: 'Successful Login',\r\n          showConfirmButton: false,\r\n          timer: 1300,\r\n        });\r\n      })\r\n      .catch(err =>\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          type: 'error',\r\n          text: 'Invalid Credentials!',\r\n          showConfirmButton: false,\r\n          timer: 1300,\r\n        }),\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { email, pw } = this.state;\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"login\">\r\n          <div className=\"form-container\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <img\r\n                className=\"popcorn-logo\"\r\n                src=\"/images/yamovie/popcornKernal.png\"\r\n                alt=\"YaMovie Popcorn\"\r\n              />\r\n              <header>Log In To YaMovie!</header>\r\n              <div className=\"input-container\">\r\n                <input\r\n                  className=\"login-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={e => this.handleChange('email', e)}\r\n                />\r\n                <input\r\n                  className=\"login-input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={pw}\r\n                  onChange={e => this.handleChange('pw', e)}\r\n                />\r\n              </div>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"login-submit\"\r\n                  type=\"button\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  {' '}\r\n                  Log In{' '}\r\n                </button>\r\n                <Link className=\"login-cancel\" to=\"/\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <GoogleLogin />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/movie-displays/TrailerModal.css';\r\n\r\nconst TrailerModal = ({ trailerList, toggleTrailer }) => {\r\n  if (!trailerList || trailerList.length < 1) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"trailer-container\"\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onClick={toggleTrailer}\r\n    >\r\n      <iframe\r\n        className=\"movie-trailer\"\r\n        title=\"trailer\"\r\n        src={`${trailerList[0].url}?autoplay=1`}\r\n        frameBorder=\"0\"\r\n        allow=\"autoplay\"\r\n        allowFullScreen\r\n      />\r\n      {/* <button className=\"close-trailer-button\" type=\"button\" onClick={toggleTrailer}>Close</button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nTrailerModal.propTypes = {\r\n  trailerList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleTrailer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TrailerModal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../css/movie-displays/MovieCard.css';\r\nimport { FontAwesomeIcon, userServices, tokenServices } from '../../utils';\r\nimport TrailerModal from './TrailerModal';\r\n\r\nclass MovieCard extends Component {\r\n  static propTypes = {\r\n    movie: PropTypes.shape({\r\n      genres: PropTypes.arrayOf(PropTypes.object),\r\n      overview: PropTypes.string,\r\n      ratings: PropTypes.shape({\r\n        internet_movie_database: PropTypes.object,\r\n        metacritic: PropTypes.object,\r\n        rotten_tomatoes: PropTypes.object,\r\n      }),\r\n      release_year: PropTypes.number,\r\n      runtime: PropTypes.number,\r\n      title: PropTypes.string,\r\n      credits: PropTypes.shape({\r\n        cast: PropTypes.arrayOf(PropTypes.object),\r\n        crew: PropTypes.arrayOf(PropTypes.object),\r\n      }),\r\n      images: PropTypes.shape({\r\n        backdrops: PropTypes.arrayOf(PropTypes.string),\r\n        poster: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n    toggleModal: PropTypes.func.isRequired,\r\n    // toggleTrailer: PropTypes.func.isRequired,\r\n  };\r\n\r\n  /**\r\n   * Creates a new movie card element using a movie data object\r\n   * @param {object} [movie] the movie data to use to fill this card\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      overview: '',\r\n      ratings: {\r\n        imdb: {},\r\n        metacritic: {},\r\n        rotten_tomatoes: {},\r\n      },\r\n      offers: { buy: [], rent: [], stream: [] },\r\n      release: 0,\r\n      runtime: 0,\r\n      title: '',\r\n      credits: { cast: [], crew: [] },\r\n      images: { backdrops: [], posters: [] },\r\n      loading: true,\r\n      trailerVisible: false,\r\n      selectedTrailerList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // TODO: clean up this code to fully transition from TMDB data to JW data\r\n    const { movie, genreProps } = this.props;\r\n    const {\r\n      jw_url,\r\n      jw_image_url,\r\n      certification,\r\n      certifications,\r\n      genre_ids,\r\n      genres,\r\n      overview,\r\n      ratings,\r\n      release_year,\r\n      runtime,\r\n      title,\r\n      credits,\r\n      images,\r\n      offers,\r\n    } = movie;\r\n\r\n    let modRatings = ratings;\r\n    let genresArray = [];\r\n    let cert = '';\r\n\r\n    if (jw_url) {\r\n      // data handling stuff for jw data\r\n      genresArray = genres.map(genre => genre.translation);\r\n      cert = certification;\r\n    } else {\r\n      // data handling stuff for tmdb data\r\n      if (genreProps) {\r\n        genre_ids.forEach(id => {\r\n          const genreName = genreProps.find(genre => genre._id === id).name;\r\n          if (genreName) {\r\n            genresArray.push(genreName);\r\n          }\r\n        });\r\n      }\r\n      if (ratings) {\r\n        modRatings = {\r\n          imdb: {\r\n            ...ratings.internet_movie_database,\r\n            url: `http://www.imdb.com/`,\r\n          },\r\n          metacritic: ratings.metacritic,\r\n          rotten_tomatoes: {\r\n            ...ratings.rotten_tomatoes,\r\n            url: 'http://www.rottentomatoes.com',\r\n          },\r\n        };\r\n      }\r\n      if (certifications) {\r\n        [cert] = certifications;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      jw_url: jw_url || '',\r\n      jw_image_url: jw_image_url || '',\r\n      certification: cert,\r\n      genres: genresArray,\r\n      release: release_year || 'No Year',\r\n      title,\r\n      runtime,\r\n      credits,\r\n      images,\r\n      overview,\r\n      offers,\r\n      ratings: modRatings,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleAddToWatchlist = movieId => {\r\n    // TODO: remove if already on watchlist and styling\r\n    userServices.addToUserWatchlist(movieId);\r\n  };\r\n\r\n  toggleTrailer = selectedTrailerList => {\r\n    const { trailerVisible } = this.state;\r\n    if (trailerVisible) {\r\n      this.setState({ trailerVisible: false, selectedTrailerList: [] });\r\n    } else {\r\n      this.setState({ trailerVisible: true, selectedTrailerList });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Renders the movie card in HTML on the page. Uses CSS grid to display information\r\n   * in three segments: trailer, descriptive info, and stream links.\r\n   */\r\n  render() {\r\n    const {\r\n      jw_url,\r\n      jw_image_url,\r\n      certification,\r\n      loading,\r\n      genres,\r\n      release,\r\n      title,\r\n      runtime,\r\n      credits,\r\n      images,\r\n      overview,\r\n      ratings,\r\n      offers,\r\n      videos,\r\n    } = this.state;\r\n    const { toggleModal, movie } = this.props;\r\n\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    let directorList = [];\r\n    let backdropLink = '';\r\n    let posterLink = '';\r\n    const backdropNum = Math.floor(Math.random() * images.backdrops.length);\r\n\r\n    if (jw_url !== '') {\r\n      // data from JW\r\n      backdropLink = images.backdrops[backdropNum];\r\n      posterLink = images.poster;\r\n      directorList = credits.crew\r\n        .filter(member => member.role === 'Director')\r\n        .map(member => member.name);\r\n    } else {\r\n      // data from tmdb\r\n      directorList = credits.crew.filter(member => member.job === 'Director');\r\n      backdropLink = images.backdrops[backdropNum].backdrop_url;\r\n      const posterNum = Math.floor(Math.random() * images.posters.length);\r\n      posterLink = images.posters[posterNum].poster_url;\r\n    }\r\n\r\n    //  Grabs the token thats assigned to the user\r\n    const user = tokenServices.getUserFromToken();\r\n\r\n    // Play trailer button\r\n    const videoPlayIcon =\r\n      videos && videos.length > 0 ? (\r\n        <span\r\n          className=\"trailer-icon\"\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onClick={() => this.toggleTrailer(videos)}\r\n        >\r\n          <FontAwesomeIcon icon=\"play-circle\" />\r\n          <p className=\"trailer-icon-text\">Play Trailer</p>\r\n        </span>\r\n      ) : (\r\n        ''\r\n      );\r\n\r\n    return (\r\n      <div className=\"movie-card\">\r\n        <div\r\n          className=\"backdrop\"\r\n          style={{\r\n            backgroundImage: `url(${backdropLink})`,\r\n          }}\r\n        />\r\n        <TrailerModal\r\n          trailerList={this.selectedTrailerList}\r\n          toggleTrailer={this.toggleTrailer}\r\n        />\r\n        <div className=\"info\">\r\n          <button type=\"button\" className=\"close-modal\" onClick={toggleModal}>\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n          </button>\r\n          <div className=\"heading\">\r\n            {videoPlayIcon}\r\n            {posterLink ? (\r\n              <img className=\"poster\" alt={title} src={posterLink} />\r\n            ) : (\r\n              ''\r\n            )}\r\n            <div id=\"line1\">\r\n              <h1>{title}</h1>\r\n              <p>({release})</p>\r\n              {/* TODO: make sure the style reflects if this is already on watchlist */}\r\n              {user && (\r\n                <div\r\n                  className=\"watchlist\"\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                  onClick={() => this.handleAddToWatchlist(movie._id)}\r\n                >\r\n                  <FontAwesomeIcon className=\"watchlist-star\" icon=\"star\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div id=\"line2\">\r\n              <span className=\"certification\">{certification}</span>\r\n              {runtime ? <span className=\"runtime\">{runtime} min</span> : ''}\r\n              <RatingsView ratings={ratings} />\r\n            </div>\r\n            <p className=\"genres\">{genres.join(', ')}</p>\r\n            <StreamsView offers={offers} jw_image_url={jw_image_url} />\r\n          </div>\r\n          <div className=\"description\">\r\n            <h4 className=\"directors\">\r\n              Director(s):{' '}\r\n              {directorList.length > 0\r\n                ? directorList.join(', ')\r\n                : 'No Director Data'}\r\n            </h4>\r\n            <p>{overview || 'No plot summary available'}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n\r\n// ============================================================\r\n// ============================================================\r\n// Sub-components\r\n\r\n// ============================================================\r\n// Stream Links\r\n\r\nconst StreamsView = ({ offers, jw_image_url }) => {\r\n  if (!offers) {\r\n    return (\r\n      <div id=\"streams\">\r\n        <h3>Watch Links for this title Coming Soon!</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /*\r\n  stream: [\r\n    {\r\n      provider: { clear_name: string, icon_url: string },\r\n      hd: { price: number, url: string }\r\n      sd: { price: number, url: string }\r\n      fourk: { price: number, url: string }\r\n    }\r\n  ]\r\n  */\r\n  // https://images.justwatch.com/icon/430993/s100/\r\n  // icon_url: /icon/430993/{profile}\r\n\r\n  return (\r\n    <div className=\"streams\">\r\n      {offers.stream.length > 0 ? (\r\n        offers.stream.map(strmSrc => {\r\n          const sizedIcon = strmSrc.provider.icon_url.replace(\r\n            '{profile}',\r\n            's100',\r\n          );\r\n          const imgLink = `${jw_image_url}${sizedIcon}`;\r\n\r\n          let streamLink = '';\r\n          if (strmSrc.hd) {\r\n            streamLink = strmSrc.hd.url;\r\n          } else if (strmSrc.sd) {\r\n            streamLink = strmSrc.sd.url;\r\n          } else if (strmSrc.fourk) {\r\n            streamLink = strmSrc.fourk.url;\r\n          }\r\n\r\n          return (\r\n            <span className=\"offer\" key={strmSrc.provider.clear_name}>\r\n              <a href={streamLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={imgLink} alt={strmSrc.provider.clear_name} />\r\n              </a>\r\n            </span>\r\n          );\r\n        })\r\n      ) : (\r\n        <h3>No free streams currently available for this title</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStreamsView.propTypes = {\r\n  jw_image_url: PropTypes.string.isRequired,\r\n  offers: PropTypes.shape({\r\n    buy: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        provider_id: PropTypes.number,\r\n        hd: PropTypes.object,\r\n        sd: PropTypes.object,\r\n        fourk: PropTypes.object,\r\n      }),\r\n    ),\r\n    rent: PropTypes.arrayOf(PropTypes.object),\r\n    stream: PropTypes.arrayOf(PropTypes.object),\r\n  }),\r\n};\r\n\r\nStreamsView.defaultProps = {\r\n  offers: null,\r\n};\r\n\r\n// ============================================================\r\n// Ratings\r\nconst RatingsView = ({ ratings }) => {\r\n  if (!ratings) {\r\n    return <div id=\"ratings\" />;\r\n  }\r\n  const rtData = ratings.rotten_tomatoes;\r\n  const imdbData = ratings.internet_movie_database || ratings.imdb;\r\n\r\n  return (\r\n    <div id=\"ratings\">\r\n      {rtData ? (\r\n        <li>\r\n          <a href={rtData.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img\r\n              src={`/images/movie-card/icon-rottentomatoes-${\r\n                rtData.value >= 60 ? 'fresh' : 'rotten'\r\n              }.png`}\r\n              alt=\"Rotten Tomatoes\"\r\n            />\r\n            {`${rtData.rate}`}\r\n          </a>\r\n        </li>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {imdbData ? (\r\n        <li>\r\n          <a href={imdbData.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src=\"/images/movie-card/icon-IMDb.png\" alt=\"IMDb\" />\r\n            {imdbData.rate}\r\n          </a>\r\n        </li>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* <li>\r\n      <img src=\"/images/icon-star.png\" alt=\"User Rating\" />\r\n      Users: 5/5\r\n    </li> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nRatingsView.propTypes = {\r\n  ratings: PropTypes.shape({\r\n    imdb: PropTypes.object,\r\n    metacritic: PropTypes.object,\r\n    rotten_tomatoes: PropTypes.object,\r\n  }).isRequired,\r\n};\r\n\r\n// ============================================================\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieFeedItem, TrailerModal } from '..';\r\n// import data from '../SeedMovies';\r\n\r\nexport default class MovieFeed extends Component {\r\n  static propTypes = {\r\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedTrailerList: [],\r\n      trailerVisible: false,\r\n    };\r\n  }\r\n\r\n  toggleTrailer = selectedTrailerList => {\r\n    const { trailerVisible } = this.state;\r\n    if (trailerVisible) {\r\n      this.setState({ trailerVisible: false, selectedTrailerList: [] });\r\n    } else {\r\n      this.setState({ trailerVisible: true, selectedTrailerList });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { movies } = this.props;\r\n    movies = movies || [];\r\n    const { selectedTrailerList } = this.state;\r\n    return (\r\n      <div className=\"movie-feed\">\r\n        <TrailerModal\r\n          trailerList={selectedTrailerList}\r\n          toggleTrailer={this.toggleTrailer}\r\n        />\r\n        {movies.map(movie => (\r\n          <MovieFeedItem\r\n            movie={movie}\r\n            toggleTrailer={this.toggleTrailer}\r\n            key={movie.title}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '../../utils/fontAwesome';\r\nimport '../../css/movie-displays/MovieFeedItem.css';\r\n\r\nexport default class MovieFeedItem extends Component {\r\n  static propTypes = {\r\n    movie: PropTypes.shape({\r\n      genres: PropTypes.arrayOf(PropTypes.object),\r\n      overview: PropTypes.string,\r\n      ratings: PropTypes.shape({\r\n        imdb: PropTypes.object,\r\n        metacritic: PropTypes.object,\r\n        rotten_tomatoes: PropTypes.object,\r\n      }),\r\n      release_year: PropTypes.number,\r\n      runtime: PropTypes.number,\r\n      title: PropTypes.string,\r\n      credits: PropTypes.shape({\r\n        cast: PropTypes.arrayOf(PropTypes.object),\r\n        crew: PropTypes.arrayOf(PropTypes.object),\r\n      }),\r\n      images: PropTypes.shape({\r\n        backdrops: PropTypes.arrayOf(PropTypes.string),\r\n        poster: PropTypes.string,\r\n      }),\r\n      videos: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n    toggleTrailer: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isExpanded: false,\r\n      backdropNum: 0,\r\n    };\r\n    this.randBD = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.randomizeBackdrop();\r\n  }\r\n\r\n  randomizeBackdrop = () => {\r\n    if (this.randBD) {\r\n      const { movie } = this.props;\r\n      const { images } = movie;\r\n      const backdropNum = Math.floor(Math.random() * images.backdrops.length);\r\n      this.setState({ backdropNum });\r\n    }\r\n  };\r\n\r\n  toggleExpanded = () => {\r\n    this.randomizeBackdrop();\r\n    this.setState(prevState => ({ isExpanded: !prevState.isExpanded }));\r\n  };\r\n\r\n  render() {\r\n    const { movie, toggleTrailer } = this.props;\r\n    const {\r\n      jw_image_url,\r\n      certification,\r\n      genres,\r\n      release_year,\r\n      title,\r\n      runtime,\r\n      credits,\r\n      images,\r\n      overview,\r\n      ratings,\r\n      offers,\r\n      videos,\r\n    } = movie;\r\n    const { isExpanded, backdropNum } = this.state;\r\n\r\n    const genresArray = genres.map(genre => genre.translation);\r\n    const directorList = credits.crew\r\n      .filter(member => member.role === 'Director')\r\n      .map(member => member.name);\r\n    const backdropLink =\r\n      images.backdrops && images.backdrops.length > 0\r\n        ? images.backdrops[backdropNum]\r\n        : '';\r\n    const videoPlayIcon =\r\n      videos && videos.length > 0 ? (\r\n        <span\r\n          className=\"trailer-icon\"\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onClick={() => toggleTrailer(videos)}\r\n        >\r\n          <FontAwesomeIcon icon=\"play-circle\" />\r\n          <p className=\"trailer-icon-text\">Play Trailer</p>\r\n        </span>\r\n      ) : (\r\n        ''\r\n      );\r\n\r\n    return (\r\n      <div\r\n        className=\"movie-feed-item\"\r\n        style={{\r\n          backgroundImage: `url(${backdropLink})`,\r\n          backgroundPositionX: isExpanded\r\n            ? 'var(--bg-shift-expanded)'\r\n            : 'var(--bg-shift)',\r\n        }}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className={`expand-indicator ${isExpanded ? 'close' : ''}`}\r\n          onClick={this.toggleExpanded}\r\n        >\r\n          <FontAwesomeIcon icon=\"angle-down\" />\r\n        </button>\r\n        <div className=\"top-container\">\r\n          <div className=\"poster-area\">\r\n            {videoPlayIcon}\r\n            <img\r\n              className=\"poster\"\r\n              alt={title}\r\n              src={\r\n                images.poster || './images/placeholders/placeholder-poster.png'\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <h2 className=\"title\">\r\n              {title}\r\n              <span className=\"year\"> ({release_year || 'No Year'})</span>\r\n            </h2>\r\n            <div className=\"cert-runtime-ratings\">\r\n              <span className=\"certification\">\r\n                {certification || 'No Data'}\r\n              </span>\r\n              <span className=\"runtime\">\r\n                {runtime ? `${runtime} min` : 'No Data'}\r\n              </span>\r\n              <RatingsView ratings={ratings} />\r\n            </div>\r\n            <p className=\"genres\">\r\n              {genresArray.length > 0\r\n                ? genresArray.join(', ')\r\n                : 'No Genre Data'}\r\n            </p>\r\n            <StreamsView offers={offers} jw_image_url={jw_image_url} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"bottom-container\"\r\n          style={isExpanded ? {} : { height: '0', padding: '0px 10px' }}\r\n        >\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"trailer-button\"\r\n            onClick={() => toggleTrailer(videos)}\r\n          >\r\n            Watch Trailer\r\n          </button> */}\r\n          <h4 className=\"directors\">\r\n            Director(s):{' '}\r\n            {directorList.length > 0\r\n              ? directorList.join(', ')\r\n              : 'No Director Data'}\r\n          </h4>\r\n          <p className=\"plot\">{overview || 'No plot summary available'}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ============================================================\r\n// Stream Links\r\n\r\nconst StreamsView = ({ offers, jw_image_url }) => {\r\n  // TODO: if more than 8 stream options, make offer height style smaller (currently 55%)\r\n\r\n  if (!offers) {\r\n    return (\r\n      <div className=\"streams\">\r\n        <h3>Watch Links for this title Coming Soon!</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"streams\">\r\n      {offers.stream.length > 0 ? (\r\n        offers.stream.map(strmSrc => {\r\n          const sizedIcon = strmSrc.provider.icon_url.replace(\r\n            '{profile}',\r\n            's100',\r\n          );\r\n          const imgLink = `${jw_image_url}${sizedIcon}`;\r\n\r\n          let streamLink = '';\r\n          if (strmSrc.hd) {\r\n            streamLink = strmSrc.hd.url;\r\n          } else if (strmSrc.sd) {\r\n            streamLink = strmSrc.sd.url;\r\n          } else if (strmSrc.fourk) {\r\n            streamLink = strmSrc.fourk.url;\r\n          }\r\n\r\n          return (\r\n            <span className=\"offer\" key={strmSrc.provider.clear_name}>\r\n              <a href={streamLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={imgLink} alt={strmSrc.provider.clear_name} />\r\n              </a>\r\n            </span>\r\n          );\r\n        })\r\n      ) : (\r\n        <h3>No free streams currently available for this title</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStreamsView.propTypes = {\r\n  jw_image_url: PropTypes.string.isRequired,\r\n  offers: PropTypes.shape({\r\n    buy: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        provider_id: PropTypes.number,\r\n        hd: PropTypes.object,\r\n        sd: PropTypes.object,\r\n        fourk: PropTypes.object,\r\n      }),\r\n    ),\r\n    rent: PropTypes.arrayOf(PropTypes.object),\r\n    stream: PropTypes.arrayOf(PropTypes.object),\r\n  }),\r\n};\r\n\r\nStreamsView.defaultProps = {\r\n  offers: null,\r\n};\r\n\r\n// ============================================================\r\n// Ratings\r\n\r\nconst RatingsView = ({ ratings }) => {\r\n  if (!ratings) {\r\n    return <div className=\"ratings\" />;\r\n  }\r\n  const rtData = ratings.rotten_tomatoes;\r\n  const imdbData = ratings.imdb;\r\n\r\n  return (\r\n    <div className=\"ratings\">\r\n      {rtData ? (\r\n        <a href={rtData.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img\r\n            src={`/images/movieCard/icon-rottentomatoes-${\r\n              rtData.value >= 60 ? 'fresh' : 'rotten'\r\n            }.png`}\r\n            alt=\"Rotten Tomatoes\"\r\n          />\r\n          {rtData.rate}\r\n        </a>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {imdbData ? (\r\n        <a href={imdbData.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img src=\"/images/movieCard/icon-IMDb.png\" alt=\"IMDb\" />\r\n          {imdbData.rate}\r\n        </a>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* <li>\r\n      <img src=\"/images/icon-star.png\" alt=\"User Rating\" />\r\n      Users: 5/5\r\n    </li> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nRatingsView.propTypes = {\r\n  ratings: PropTypes.shape({\r\n    imdb: PropTypes.object,\r\n    metacritic: PropTypes.object,\r\n    rotten_tomatoes: PropTypes.object,\r\n  }).isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { MovieCard, SearchBar } from '..';\nimport '../../css/movie-displays/MovieList.css';\n\nconst { REACT_APP_SVR_API } = process.env;\n\nclass MovieList extends Component {\n  /**\n   * Creates a movie list object and connects to the API\n   */\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      isModalVisible: false,\n      selectedMovie: {},\n      searchInputValue: '',\n      genres: [],\n      currentGenreFilter: 'all',\n      currentSearchQuery: '',\n      page: 1,\n      hasNextPage: true,\n      loading: false,\n    };\n\n    // window.addEventListener('scroll', event => this.scrollHandler(event));\n  }\n\n  // ===================== Extracts Get Requests ============================\n  // Makes each get request a function so they can be used with axios.all()\n\n  /**\n   * Gets all the movies, optionally filtered by genreId\n   * @param {String} [genreId]\n   * @returns An Axios promise with the movie data\n   */\n  getMovies = (genreId = 'all') => {\n    if (genreId !== 'all') {\n      return axios.get(`${REACT_APP_SVR_API}/movies/genre/${genreId}`);\n    }\n    return axios.get(`${REACT_APP_SVR_API}/movies/`);\n  };\n\n  /**\n   * Gets the data for a movie\n   * @param {String} [id]\n   * @returns An Axios promise with the movie data\n   */\n  getSingleMovie = id => axios.get(`${REACT_APP_SVR_API}/movies/${id}`);\n\n  /**\n   * Gets the list of all genre objects\n   * @returns An Axios promise with the genre data\n   */\n  getGenres = () => axios.get(`${REACT_APP_SVR_API}/genres/`);\n\n  // =================== Grabs Movie Data on Render =========================\n  // Sets the complete movie collection to state.\n\n  componentDidMount = () => {\n    const { showGenreFilter, results } = this.props;\n    if (showGenreFilter) {\n      axios.all([this.getGenres(), this.getMovies()]).then(\n        axios.spread((genreResp, movieResp) => {\n          this.setState({\n            genres: genreResp.data,\n            movies: movieResp.data.results,\n            page: movieResp.data.page,\n            hasNextPage: movieResp.data.hasNextPage,\n          });\n        }),\n      );\n    } else {\n      this.getGenres().then(genreResp =>\n        this.setState({\n          genres: genreResp.data,\n          movies: results,\n        }),\n      );\n    }\n  };\n\n  // ==================== Handles Filter Click ===============================\n  handleSendGenre = genreKey => {\n    this.getMovies(genreKey).then(response =>\n      // this.setState({ movies: response.data.results }),\n      // this.setState({ page: 1 }),\n      // this.setState({ currentGenreFilter: genreKey }),\n\n      this.setState({\n        movies: response.data.results,\n        currentGenreFilter: genreKey,\n        page: 2,\n        hasNextPage: true,\n        loading: false,\n      }),\n    );\n    window.scrollTo(0, 0);\n  };\n\n  toggleModal = selectedMovie => {\n    const { isModalVisible } = this.state;\n    if (isModalVisible) {\n      this.setState({ isModalVisible: false });\n    } else {\n      this.setState({ isModalVisible: true, selectedMovie });\n    }\n  };\n\n  // ==================== Handles Search Bar Input Change ==================\n  handleChange = event => {\n    this.setState({ searchInputValue: event.target.value });\n  };\n\n  // ==================== Handles Search Bar Input Submit ==================\n  // TODO: Factor this out into API call utils\n  handleSubmit = event => {\n    const { searchInputValue } = this.state;\n    window.scrollTo(0, 0);\n    event.preventDefault();\n    axios\n      .get(`${REACT_APP_SVR_API}/movies/search`, {\n        params: {\n          title: searchInputValue,\n        },\n      })\n      .then(response =>\n        this.setState({\n          movies: response.data.results,\n          page: 1,\n          searchInputValue: '',\n        }),\n      );\n  };\n\n  // ================== Function to load more movies on scroll ===============\n  loadMoreMovies = async () => {\n    const {\n      hasNextPage,\n      page,\n      movies,\n      loading,\n      currentGenreFilter,\n    } = this.state;\n    if (hasNextPage && !loading) {\n      if (currentGenreFilter === 'all') {\n        const res = await axios.get(\n          `${REACT_APP_SVR_API}/movies/?page=${page}`,\n        );\n        this.setState({\n          movies: movies.concat(res.data.results),\n          page: res.data.page + 1,\n          hasNextPage: res.data.hasNextPage,\n        });\n      } else {\n        const res = await axios.get(\n          `${REACT_APP_SVR_API}/movies/genre/${currentGenreFilter}/?page=${page}`,\n        );\n        this.setState({\n          movies: movies.concat(res.data.results),\n          page: res.data.page + 1,\n          hasNextPage: res.data.hasNextPage,\n        });\n      }\n    }\n  };\n\n  /**\n   * Renders the movie list in HTML on the page. Uses flexboxes to display\n   * the genre list, and to display a grid of MovieItems based on breakpoints.\n   */\n  render() {\n    const {\n      movies,\n      isModalVisible,\n      selectedMovie,\n      searchInputValue,\n      hasNextPage,\n      genres,\n    } = this.state;\n    const { showGenreFilter } = this.props;\n\n    let imagesForAllMovies = [];\n\n    if (movies[0] && movies[0].jw_url) {\n      imagesForAllMovies = movies.map(movie => movie.images.poster);\n    } else {\n      imagesForAllMovies = movies.map(\n        movie => movie.images.posters[0].poster_url,\n      );\n    }\n\n    return (\n      <div id=\"movie-page\">\n        {isModalVisible && (\n          <MovieCard\n            toggleModal={() => this.toggleModal}\n            isModalVisible={isModalVisible}\n            movie={selectedMovie}\n            genres={genres}\n            showGenreFilter={showGenreFilter}\n          />\n        )}\n        {showGenreFilter ? (\n          <SearchBar\n            onSubmit={this.handleSubmit}\n            onChange={this.handleChange}\n            genres={genres}\n            searchInputValue={searchInputValue}\n            handleSendGenre={this.handleSendGenre}\n            showGenreFilter={showGenreFilter}\n          />\n        ) : (\n          ''\n        )}\n        <div id=\"yamovie-movie-list\" className=\"container\">\n          {showGenreFilter ? (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.loadMoreMovies}\n              hasMore={hasNextPage}\n              loader={\n                <div className=\"loader\" key={0}>\n                  <img\n                    style={{ height: 200 }}\n                    src=\"./images/popcorn-loader/popcorn-loading.gif\"\n                    alt=\"Loading ...\"\n                  />\n                </div>\n              }\n            >\n              <div id=\"list-all-movies\">\n                {imagesForAllMovies.map((moviePosters, i) => (\n                  <div id=\"yamovie-movie-item\" key={movies[i].title}>\n                    {/* TODO: Wrap this in a button for accessability and to make ESlint happy */}\n                    <img\n                      src={moviePosters}\n                      alt={movies[i].title}\n                      className=\"img-fluid\"\n                      onClick={() => this.toggleModal(movies[i])}\n                    />\n                  </div>\n                ))}\n              </div>\n            </InfiniteScroll>\n          ) : (\n            <div id=\"list-all-movies\">\n              {imagesForAllMovies.map((moviePoster, i) => (\n                <div id=\"yamovie-movie-item\" key={movies[i].title}>\n                  {/* TODO: Wrap this in a button for accessability and to make ESlint happy */}\n                  <img\n                    src={moviePoster}\n                    alt={movies[i].title}\n                    className=\"img-fluid\"\n                    onClick={() => this.toggleModal(movies[i])}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { FontAwesomeIcon } from '../utils/fontAwesome';\r\nimport '../css/navbar-toast/BurgerMenu.css';\r\nimport '../css/navbar-toast/Navbar.css';\r\n\r\n/**\r\n * JSX used to render the navbar on the page. Uses flexboxes to display information and links.\r\n * @returns JSX to create HTML navbar\r\n */\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuOpen: false,\r\n    };\r\n  }\r\n\r\n  // This keeps your state in sync with the opening/closing of the menu\r\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n  handleStateChange(state) {\r\n    this.setState({ menuOpen: state.isOpen });\r\n  }\r\n\r\n  // This can be used to close the menu, e.g. when a user clicks a menu item\r\n  closeMenu() {\r\n    this.setState({ menuOpen: false });\r\n  }\r\n\r\n  // This can be used to toggle the menu, e.g. when using a custom icon\r\n  // Tip: You probably want to hide either/both default icons if using a custom icon\r\n  // See https://github.com/negomi/react-burger-menu#custom-icons\r\n  toggleMenu() {\r\n    const { menuOpen } = this.state;\r\n    this.setState({ menuOpen: !menuOpen });\r\n  }\r\n\r\n  render() {\r\n    const { menuOpen } = this.state;\r\n    const { user, handleLogout } = this.props;\r\n    return (\r\n      <div className=\"topnav\">\r\n        <div className=\"logo-container\">\r\n          <NavLink to=\"/\">\r\n            <img\r\n              src=\"/images/yamovie/logo-v3-white-whitepopcorn.png\"\r\n              alt=\"YaMovie\"\r\n              id=\"main-logo\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"mobile-nav\">\r\n          <Menu\r\n            right\r\n            isOpen={menuOpen}\r\n            onStateChange={state => this.handleStateChange(state)}\r\n          >\r\n            <NavLink onClick={() => this.closeMenu()} to=\"/\">\r\n              <FontAwesomeIcon icon=\"home\" /> Home\r\n            </NavLink>\r\n            <NavLink onClick={() => this.closeMenu()} to=\"/recommendations\">\r\n              <FontAwesomeIcon icon=\"search\" /> Find YaMovie\r\n            </NavLink>\r\n            <NavLink onClick={() => this.closeMenu()} to=\"/browse\">\r\n              <FontAwesomeIcon icon=\"columns\" /> Browse\r\n            </NavLink>\r\n            <NavLink onClick={() => this.closeMenu()} to=\"/about\">\r\n              <FontAwesomeIcon icon=\"address-card\" /> About\r\n            </NavLink>\r\n            {!user ? (\r\n              <div className=\"bm-div\">\r\n                <NavLink\r\n                  className=\"bm-item\"\r\n                  onClick={() => this.closeMenu()}\r\n                  to=\"/login\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"sign-in-alt\" /> Log In\r\n                </NavLink>\r\n                <NavLink\r\n                  className=\"bm-item\"\r\n                  onClick={() => this.closeMenu()}\r\n                  to=\"/signup\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-plus\" /> Sign Up\r\n                </NavLink>\r\n              </div>\r\n            ) : (\r\n              <div className=\"bm-div\">\r\n                <NavLink\r\n                  className=\"bm-item\"\r\n                  onClick={() => this.closeMenu()}\r\n                  to=\"/account\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"user\" /> Account\r\n                </NavLink>\r\n                <NavLink\r\n                  className=\"bm-item\"\r\n                  onClick={() => {\r\n                    handleLogout();\r\n                    this.closeMenu();\r\n                  }}\r\n                  to=\"/\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"sign-in-alt\" /> Log Out\r\n                </NavLink>\r\n              </div>\r\n            )}\r\n            <a\r\n              onClick={() => this.closeMenu()}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://forms.gle/xJoQ54DaX4omm74Z7\"\r\n            >\r\n              <FontAwesomeIcon icon=\"comments\" /> Feedback\r\n            </a>\r\n            <a\r\n              href=\"mailto:yamovie.tp@gmail.com?Subject=YaMovie%20Contact\"\r\n              onClick={() => this.closeMenu()}\r\n              target=\"_top\"\r\n            >\r\n              <FontAwesomeIcon icon=\"envelope\" /> Send Mail\r\n            </a>\r\n          </Menu>\r\n        </div>\r\n        <div className=\"desktop-nav\">\r\n          <NavLink to=\"/recommendations\" className=\"nav-item\">\r\n            Find YaMovie\r\n          </NavLink>\r\n          <NavLink to=\"/browse\" className=\"nav-item\">\r\n            Browse\r\n          </NavLink>\r\n          <NavLink to=\"/about\" className=\"nav-item\">\r\n            About\r\n          </NavLink>\r\n          {!user ? (\r\n            <>\r\n              <NavLink to=\"/signup\" className=\"nav-item\">\r\n                Sign Up\r\n              </NavLink>\r\n              <NavLink to=\"/login\" className=\"nav-item\">\r\n                Log In\r\n              </NavLink>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavLink to=\"/account\" className=\"nav-item\">\r\n                Account\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/\"\r\n                onClick={() => handleLogout()}\r\n                className=\"nav-item\"\r\n              >\r\n                Log Out\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = {\r\n  user: PropTypes.shape({\r\n    email: PropTypes.string,\r\n    fullName: PropTypes.string,\r\n  }),\r\n  handleLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  user: null,\r\n};\r\n","import React from 'react';\r\n\r\nconst OAuth = () => (\r\n  <div>\r\n    <a href={`${process.env.REACT_APP_SVR_AUTH}/google`} className=\"button\">\r\n      <div>\r\n        <span className=\"svgIcon t-popup-svg\">\r\n          <svg\r\n            className=\"svgIcon-use\"\r\n            width=\"25\"\r\n            height=\"37\"\r\n            viewBox=\"0 0 25 25\"\r\n          >\r\n            <g fill=\"none\" fillRule=\"evenodd\">\r\n              <path\r\n                d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\"\r\n                fill=\"#4285F4\"\r\n              />\r\n              <path\r\n                d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\"\r\n                fill=\"#34A853\"\r\n              />\r\n              <path\r\n                d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\"\r\n                fill=\"#FBBC05\"\r\n              />\r\n              <path\r\n                d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\"\r\n                fill=\"#EA4335\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </span>\r\n        <span className=\"button-label\">Sign in with Google</span>\r\n      </div>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default OAuth;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport GenreList from './GenreList';\n\nimport '../../css/movie-displays/SearchBar.css';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    searchInputValue: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        short_name: PropTypes.string,\n        technical_name: PropTypes.string,\n        translation: PropTypes.string,\n      }),\n    ).isRequired,\n    showGenreFilter: PropTypes.bool.isRequired,\n    handleSendGenre: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    searchInputValue: '',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hover: false,\n      intervalId: 0,\n    };\n  }\n\n  toggleHover = () => {\n    const { hover } = this.state;\n    this.setState({\n      hover: !hover,\n    });\n  };\n\n  render() {\n    const {\n      onSubmit,\n      onChange,\n      genres,\n      searchInputValue,\n      showGenreFilter,\n      handleSendGenre,\n    } = this.props;\n\n    // On hover function to display genre list through mega menu\n    let hoverStyle;\n    const { hover } = this.state;\n    if (hover) {\n      hoverStyle = { display: 'flex' };\n    } else {\n      hoverStyle = { display: 'none' };\n    }\n\n    return (\n      <div id=\"mega-search-genres\">\n        <form id=\"browse-search\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            value={searchInputValue}\n            onChange={onChange}\n            placeholder=\"Search Movies\"\n          />\n        </form>\n        <button\n          type=\"button\"\n          id=\"display-genre-button\"\n          onClick={this.toggleHover}\n        >\n          Display Genres\n        </button>\n        {showGenreFilter ? (\n          <GenreList\n            genres={genres}\n            style={hoverStyle}\n            toggleHover={this.toggleHover}\n            moviesByGenreId={handleSendGenre}\n          />\n        ) : (\n          ' '\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport userServices from '../../utils/userServices';\r\nimport GoogleLogin from './GoogleLogin';\r\nimport Swal from 'sweetalert2';\r\nimport '../../css/login-signup/Signup.css';\r\n\r\nclass Signup extends Component {\r\n  static propTypes = {\r\n    history: PropTypes.shape({\r\n      push: PropTypes.func,\r\n    }).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      fullName: '',\r\n      pw: '',\r\n      pwConfirm: '',\r\n    };\r\n  }\r\n\r\n  handleChange = (field, e) => {\r\n    this.setState({\r\n      [field]: e.target.value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * submit user information to signup\r\n   * if successful redirect to homepage\r\n   */\r\n  handleSubmit = e => {\r\n    const { handleSignup } = this.props;\r\n    e.preventDefault();\r\n    userServices\r\n      .signup(this.state)\r\n      .then(() => {\r\n        handleSignup();\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          type: 'success',\r\n          text: 'Signup Successful!',\r\n          showConfirmButton: false,\r\n          timer: 1300,\r\n        });\r\n      })\r\n      .catch(err =>\r\n        Swal.fire({\r\n          position: 'top-end',\r\n          type: 'error',\r\n          text: 'User Already Exists!',\r\n          showConfirmButton: false,\r\n          timer: 1300,\r\n        }),\r\n      );\r\n  };\r\n\r\n  isFormInvalid(e) {\r\n    const { email, fullName, pw, pwConfirm } = this.state;\r\n    let emailValid;\r\n    let passwordValid;\r\n    let formValid = false;\r\n    if (fullName && email && pw === pwConfirm) {\r\n      // regex\r\n      emailValid = email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n      emailValid\r\n        ? checkPw(e)\r\n        : Swal.fire({\r\n            position: 'top-end',\r\n            type: 'error',\r\n            text: 'Invalid Email!',\r\n            showConfirmButton: false,\r\n            timer: 1300,\r\n          });\r\n\r\n      function checkPw(e) {\r\n        passwordValid = pw.length >= 6;\r\n        passwordValid\r\n          ? (formValid = true)\r\n          : Swal.fire({\r\n              position: 'top-end',\r\n              type: 'error',\r\n              text: 'Password is too short!',\r\n              showConfirmButton: false,\r\n              timer: 1300,\r\n            });\r\n      }\r\n\r\n      if (formValid) this.handleSubmit(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { email, fullName, pw, pwConfirm } = this.state;\r\n    return (\r\n      <div className=\"signup-page\">\r\n        <div className=\"signup\">\r\n          <div className=\"form-container\">\r\n            <form onSubmit={e => this.isFormInvalid(e)}>\r\n              <img\r\n                className=\"popcorn-logo\"\r\n                src=\"/images/yamovie/popcornKernal.png\"\r\n                alt=\"Broken\"\r\n              />\r\n              <header>Signup with YaMovie!</header>\r\n              <div className=\"input-container\">\r\n                <input\r\n                  className=\"signup-input\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  name=\"email\"\r\n                  onChange={e => this.handleChange('email', e)}\r\n                />\r\n                <input\r\n                  className=\"signup-input\"\r\n                  type=\"name\"\r\n                  placeholder=\"First and Last Name\"\r\n                  value={fullName}\r\n                  name=\"fullName\"\r\n                  onChange={e => this.handleChange('fullName', e)}\r\n                />\r\n                <input\r\n                  className=\"signup-input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={pw}\r\n                  name=\"pw\"\r\n                  onChange={e => this.handleChange('pw', e)}\r\n                />\r\n                <input\r\n                  className=\"signup-input\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password Confirmation\"\r\n                  value={pwConfirm}\r\n                  name=\"pwConfirm\"\r\n                  onChange={e => this.handleChange('pwConfirm', e)}\r\n                />\r\n              </div>\r\n              <p className=\"pw-requirements\">\r\n                {' '}\r\n                * password must be at least 6 characters\r\n              </p>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"signup-submit\"\r\n                  type=\"button\"\r\n                  onClick={e => this.isFormInvalid(e)}\r\n                >\r\n                  {' '}\r\n                  Signup{' '}\r\n                </button>\r\n                <Link className=\"signup-cancel\" to=\"/\">\r\n                  Cancel\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <GoogleLogin />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignup.propTypes = {\r\n  handleSignup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '../../utils';\r\nimport '../../css/UserCheckboxList.css';\r\n\r\nconst UserCheckboxList = ({\r\n  options,\r\n  type,\r\n  handleChange,\r\n  handleReset,\r\n  handleSelectAll,\r\n}) => {\r\n  return (\r\n    <form\r\n      className=\"checkbox-form\"\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        handleSelectAll(type);\r\n      }}\r\n      onReset={() => {\r\n        handleReset(type);\r\n      }}\r\n    >\r\n      <div className=\"checkboxes\">\r\n        {options.map(option => (\r\n          <span className=\"single-option\" key={option.name}>\r\n            <button\r\n              className={`checkbox ${option.checked ? 'checked' : ''}`}\r\n              type=\"button\"\r\n              id={option.name}\r\n              name={option.name}\r\n              onClick={() => handleChange(type, option.id)}\r\n            />\r\n            <label className=\"option-label\" htmlFor={option.name}>\r\n              {option.name}\r\n            </label>\r\n            <label className=\"check-tick\" htmlFor={option.name}>\r\n              <FontAwesomeIcon icon=\"check\" />\r\n            </label>\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <input type=\"submit\" className=\"select-all\" value=\"Select All\" />\r\n        <input type=\"reset\" className=\"reset\" value=\"Select None\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nUserCheckboxList.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      checked: PropTypes.bool.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleSelectAll: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UserCheckboxList;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport InputRange from 'react-input-range';\r\nimport SweetAlert from 'sweetalert2';\r\nimport UserCheckboxList from './UserCheckboxList';\r\nimport { moviesAPI, tokenServices, userAPI } from '../../utils';\r\nimport '../../css/UserPreferences.css';\r\n\r\nexport default class UserPreferences extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.user = tokenServices.getUserFromToken();\r\n\r\n    this.nameMaps = {\r\n      certifications: {\r\n        G: 'G',\r\n        PG: 'PG',\r\n        'PG-13': 'PG-13',\r\n        R: 'R',\r\n        'NC-17': 'NC-17',\r\n      },\r\n      genres: { none: 'No Genres' },\r\n      providers: { none: 'No Providers' },\r\n    };\r\n\r\n    this.defaults = {\r\n      off: {\r\n        certifications: {\r\n          G: false,\r\n          PG: false,\r\n          'PG-13': false,\r\n          R: false,\r\n          'NC-17': false,\r\n        },\r\n        genres: {},\r\n        providers: {},\r\n      },\r\n      on: {\r\n        certifications: {\r\n          G: true,\r\n          PG: true,\r\n          'PG-13': true,\r\n          R: true,\r\n          'NC-17': true,\r\n        },\r\n        genres: {},\r\n        providers: {},\r\n      },\r\n    };\r\n\r\n    this.state = {\r\n      userId: '',\r\n      certifications: {\r\n        G: false,\r\n        PG: false,\r\n        'PG-13': false,\r\n        R: false,\r\n        'NC-17': false,\r\n      },\r\n      genres: { none: false },\r\n      providers: { none: false },\r\n      ratings: {\r\n        imdb: {\r\n          minRating: 4.5,\r\n          maxRating: 10,\r\n        },\r\n        rottenTomatoes: {\r\n          minRating: 50,\r\n          maxRating: 100,\r\n        },\r\n        metacritic: {\r\n          minRating: 0,\r\n          maxRating: 100,\r\n        },\r\n      },\r\n      release: {\r\n        minYear: 1940,\r\n        maxYear: 2020,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .all([\r\n        moviesAPI.getGenres(),\r\n        moviesAPI.getProviders('flatrate'),\r\n        userAPI.getPreferences(this.user._id),\r\n      ])\r\n      .then(\r\n        axios.spread((genreResp, provResp, prefResp) => {\r\n          genreResp.data.forEach(genre => {\r\n            this.defaults.off.genres[genre._id] = false;\r\n            this.defaults.on.genres[genre._id] = true;\r\n            this.nameMaps.genres[genre._id] = genre.translation;\r\n          });\r\n          provResp.data.forEach(provider => {\r\n            if (provider.display_priority <= 20) {\r\n              this.defaults.off.providers[provider._id] = false;\r\n              this.defaults.on.providers[provider._id] = true;\r\n              this.nameMaps.providers[provider._id] = provider.clear_name;\r\n            }\r\n          });\r\n          this.setState({\r\n            genres: this.defaults.off.genres,\r\n            providers: this.defaults.off.providers,\r\n            ...prefResp.data.preferences,\r\n            userId: this.user._id,\r\n          });\r\n        }),\r\n      );\r\n  }\r\n\r\n  // ===============================================================\r\n  // Handlers\r\n\r\n  /**\r\n   * Makes an API request to send the current state and set it as the preferences object\r\n   * in the database corresponding to the current user.\r\n   */\r\n  handleSavePrefs = () => {\r\n    userAPI.updatePreferences(this.user._id, this.state).then(() => {\r\n      SweetAlert.fire({\r\n        position: 'top',\r\n        type: 'success',\r\n        text: 'Preferences Successfully Saved!',\r\n        showConfirmButton: false,\r\n        timer: 900,\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Targets the specified key in the specified section and toggles its value\r\n   * @param {String} prefSection the name of the key/section in state that is being targeted\r\n   * @param {String} key the name of the particular element being toggled on/off\r\n   */\r\n  handlePrefChange = (prefSection, key) => {\r\n    this.setState(prevState => ({\r\n      [prefSection]: {\r\n        ...prevState[prefSection],\r\n        [key]: !prevState[prefSection][key],\r\n      },\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Drops the data in state for the targeted section and sets it to be the default off\r\n   * values (mapping each id to false)\r\n   * @param {String} prefSection the name of the key in state that is being targeted\r\n   */\r\n  handlePrefReset = prefSection => {\r\n    this.setState({ [prefSection]: this.defaults.off[prefSection] });\r\n  };\r\n\r\n  /**\r\n   * Drops the data in state for the targeted section and sets it to be the default on\r\n   * values (mapping each id to true)\r\n   * @param {String} prefSection the name of the key in state that is being targeted\r\n   */\r\n  handleSelectAll = prefSection => {\r\n    this.setState({ [prefSection]: this.defaults.on[prefSection] });\r\n  };\r\n\r\n  /**\r\n   * Converts the ObjectId: Bool mapping format as it is in state to the object format\r\n   * with a name, id, and checked value needed for the checkbox display.\r\n   * @param {String} prefSection the name of the key in state that is being targeted\r\n   * @returns {Array<Object>} the list of objects to be displayed\r\n   */\r\n  convertStateToDisplay = prefSection => {\r\n    const displayList = [];\r\n    const { [prefSection]: stateSection } = this.state;\r\n    Object.keys(stateSection).forEach(iDkey => {\r\n      displayList.push({\r\n        id: iDkey,\r\n        name: this.nameMaps[prefSection][iDkey],\r\n        checked: stateSection[iDkey],\r\n      });\r\n    });\r\n    return displayList;\r\n  };\r\n\r\n  // ===============================================================\r\n  // Render\r\n\r\n  render() {\r\n    const genreList = this.convertStateToDisplay('genres');\r\n    const certList = this.convertStateToDisplay('certifications');\r\n    const provList = this.convertStateToDisplay('providers');\r\n\r\n    const { release, ratings } = this.state;\r\n    const relSliderVals = { min: release.minYear, max: release.maxYear };\r\n    const imdbSliderVals = {\r\n      min: ratings.imdb.minRating,\r\n      max: ratings.imdb.maxRating,\r\n    };\r\n    const rtSliderVals = {\r\n      min: ratings.rottenTomatoes.minRating,\r\n      max: ratings.rottenTomatoes.maxRating,\r\n    };\r\n    const metaSliderVals = {\r\n      min: ratings.metacritic.minRating,\r\n      max: ratings.metacritic.maxRating,\r\n    };\r\n    // TODO: make sure values can't be more than the min or max for the sliders\r\n    // TODO: programmatically set the min and max year range values\r\n\r\n    return (\r\n      <div className=\"account-pane preferences-pane\">\r\n        <h1>\r\n          Preferences\r\n          <button type=\"button\" className=\"save\" onClick={this.handleSavePrefs}>\r\n            Save\r\n          </button>\r\n        </h1>\r\n        <h4>Select what streaming services you have:</h4>\r\n        <UserCheckboxList\r\n          options={provList}\r\n          type=\"providers\"\r\n          handleChange={this.handlePrefChange}\r\n          handleReset={this.handlePrefReset}\r\n          handleSelectAll={this.handleSelectAll}\r\n        />\r\n        <h4>Select what genres you like:</h4>\r\n        <UserCheckboxList\r\n          options={genreList}\r\n          type=\"genres\"\r\n          handleChange={this.handlePrefChange}\r\n          handleReset={this.handlePrefReset}\r\n          handleSelectAll={this.handleSelectAll}\r\n        />\r\n        <h4>Select what MPAA ratings you want:</h4>\r\n        <UserCheckboxList\r\n          options={certList}\r\n          type=\"certifications\"\r\n          handleChange={this.handlePrefChange}\r\n          handleReset={this.handlePrefReset}\r\n          handleSelectAll={this.handleSelectAll}\r\n        />\r\n        <h4>Select what range of movie release years you like:</h4>\r\n        <InputRange\r\n          minValue={1920}\r\n          maxValue={2020}\r\n          value={relSliderVals}\r\n          onChange={value =>\r\n            this.setState({\r\n              release: { minYear: value.min, maxYear: value.max },\r\n            })\r\n          }\r\n        />\r\n        <h4>Select what range of IMDB ratings you care about:</h4>\r\n        <InputRange\r\n          minValue={0}\r\n          maxValue={10}\r\n          step={0.1}\r\n          value={imdbSliderVals}\r\n          onChange={value =>\r\n            this.setState(prevState => ({\r\n              ratings: {\r\n                ...prevState.ratings,\r\n                imdb: {\r\n                  minRating: Math.round(10 * value.min) / 10,\r\n                  maxRating: Math.round(10 * value.max) / 10,\r\n                },\r\n              },\r\n            }))\r\n          }\r\n        />\r\n        <h4>Select what range of Rotten Tomatoes ratings you care about:</h4>\r\n        <InputRange\r\n          minValue={0}\r\n          maxValue={100}\r\n          formatLabel={value => `${value}%`}\r\n          value={rtSliderVals}\r\n          onChange={value =>\r\n            this.setState(prevState => ({\r\n              ratings: {\r\n                ...prevState.ratings,\r\n                rottenTomatoes: { minRating: value.min, maxRating: value.max },\r\n              },\r\n            }))\r\n          }\r\n        />\r\n        <h4>Select what range of Metacritic ratings you care about:</h4>\r\n        <InputRange\r\n          minValue={0}\r\n          maxValue={100}\r\n          value={metaSliderVals}\r\n          onChange={value =>\r\n            this.setState(prevState => ({\r\n              ratings: {\r\n                ...prevState.ratings,\r\n                metacritic: { minRating: value.min, maxRating: value.max },\r\n              },\r\n            }))\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/prefer-stateless-function */\r\nimport React from 'react';\r\nimport '../../css/movie-displays/Watchlist.css';\r\n\r\nclass Watchlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showWatchedMovies: false,\r\n    };\r\n\r\n    this.toggleWatchedMovies = this.toggleWatchedMovies.bind(this);\r\n  }\r\n\r\n  toggleWatchedMovies(event) {\r\n    if (event.target.id === 'watched-btn') {\r\n      this.setState({ showWatchedMovies: true });\r\n    } else {\r\n      this.setState({ showWatchedMovies: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { showWatchedMovies } = this.state;\r\n    const movies = [\r\n      {\r\n        title: 'The Mule',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\r\n      },\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'The Mule',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\r\n      },\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'The Mule',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\r\n      },\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n    ];\r\n\r\n    const watchedMovies = [\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n\r\n      {\r\n        title: 'The Mule',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\r\n      },\r\n      {\r\n        title: 'Bumblebee',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\r\n      },\r\n      {\r\n        title: 'Avengers - Infinity War',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n      {\r\n        title: 'Spider Man - Into the spider-verse',\r\n        image:\r\n          'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"account-page\">\r\n        <div className=\"watchlist-filter\">\r\n          <button\r\n            className=\"white watchlist-filter-btn\"\r\n            type=\"button\"\r\n            id=\"watchlist-btn\"\r\n            onClick={this.toggleWatchedMovies}\r\n          >\r\n            Watchlist\r\n          </button>\r\n          <button\r\n            className=\"white watchlist-filter-btn\"\r\n            type=\"button\"\r\n            id=\"watched-btn\"\r\n            onClick={this.toggleWatchedMovies}\r\n          >\r\n            Watched\r\n          </button>\r\n        </div>\r\n        {\r\n          <div className=\"watchlist-wrapper\">\r\n            {showWatchedMovies\r\n              ? watchedMovies.map(movie => (\r\n                  <div className=\"watchlist-movie\">\r\n                    <img src={movie.image} className=\"img-fluid\" alt=\"movie\" />\r\n                    <div className=\"watchlist-buttons\">\r\n                      <button type=\"button\" className=\"watchlist-btn\">\r\n                        - Remove\r\n                      </button>\r\n                      <button type=\"button\" className=\"watchlist-btn\">\r\n                        + Watched\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              : movies.map(movie => (\r\n                  <div className=\"watchlist-movie\">\r\n                    <img src={movie.image} className=\"img-fluid\" alt=\"movie\" />\r\n                    <div className=\"watchlist-buttons\">\r\n                      <button type=\"button\" className=\"watchlist-btn\">\r\n                        - Remove\r\n                      </button>\r\n                      <button type=\"button\" className=\"watchlist-btn\">\r\n                        + Watched\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Watchlist;\r\n","import React, { Component } from 'react';\r\nimport { BrowseMovieList, BrowseFilters, MovieCard } from '../components';\r\nimport { moviesAPI } from '../utils';\r\nimport '../css/css-pages/BrowsePage.css';\r\n\r\nexport default class BrowsePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isModalVisible: false,\r\n      selectedMovie: {},\r\n      loading: false,\r\n      movies: [],\r\n      nextPageNum: 1,\r\n      hasNextPage: true,\r\n      currentGenreFilter: 'all',\r\n      currentSearchQuery: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    moviesAPI.getMovies().then(movieResp => {\r\n      this.setState({\r\n        movies: movieResp.data.results,\r\n        nextPageNum: movieResp.data.page,\r\n        hasNextPage: movieResp.data.hasNextPage,\r\n      });\r\n    });\r\n  }\r\n\r\n  // ===============================================================\r\n  // Handlers\r\n\r\n  /**\r\n   * Handles SearchBar submission, making an API call and changing the displayed movies\r\n   * @param {string} searchInputValue the value searched for\r\n   */\r\n  handleSearchSubmit = searchInputValue => {\r\n    window.scrollTo(0, 0);\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      currentSearchQuery: searchInputValue,\r\n      currentGenreFilter: 'all',\r\n    });\r\n    moviesAPI.getSearchResults(searchInputValue).then(response =>\r\n      this.setState({\r\n        movies: response.data.results,\r\n        nextPageNum: 2,\r\n        hasNextPage: response.data.hasNextPage,\r\n        loading: false,\r\n      }),\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Handles Genre filter submission, making an API call and changing the displayed movies\r\n   * @param {string} genreKey the ObjectId of the genre to be filtered by\r\n   */\r\n  handleSendGenre = genreKey => {\r\n    window.scrollTo(0, 0);\r\n    this.setState({ movies: [], loading: true, currentGenreFilter: genreKey });\r\n    moviesAPI.getMovies(genreKey).then(response =>\r\n      this.setState({\r\n        movies: response.data.results,\r\n        nextPageNum: 2,\r\n        hasNextPage: true,\r\n        loading: false,\r\n      }),\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Loads the next page of results. Takes into account whether the current displayed\r\n   * movies are filtered by genre or a search query.\r\n   */\r\n  handleLoadMoreMovies = () => {\r\n    const {\r\n      hasNextPage,\r\n      nextPageNum,\r\n      movies,\r\n      loading,\r\n      currentGenreFilter,\r\n      currentSearchQuery,\r\n    } = this.state;\r\n    if (hasNextPage && !loading) {\r\n      moviesAPI\r\n        .loadNextPage(nextPageNum, currentGenreFilter, currentSearchQuery)\r\n        .then(res => {\r\n          this.setState({\r\n            movies: movies.concat(res.data.results),\r\n            nextPageNum: res.data.page + 1,\r\n            hasNextPage: res.data.hasNextPage,\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggles the MovieCard modal on or off.\r\n   * @param {Object} selectedMovie the object containing the data for the movie to be displayed\r\n   */\r\n  toggleModal = selectedMovie => {\r\n    const { isModalVisible } = this.state;\r\n    if (isModalVisible) {\r\n      this.setState({ isModalVisible: false });\r\n    } else {\r\n      this.setState({ isModalVisible: true, selectedMovie });\r\n    }\r\n  };\r\n\r\n  // ===============================================================\r\n  // Render\r\n\r\n  render() {\r\n    const {\r\n      movies,\r\n      isModalVisible,\r\n      selectedMovie,\r\n      hasNextPage,\r\n      currentGenreFilter,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"browse-page\">\r\n        <BrowseFilters\r\n          handleSearchSubmit={this.handleSearchSubmit}\r\n          handleSendGenre={this.handleSendGenre}\r\n          currentGenreFilter={currentGenreFilter}\r\n        />\r\n        {isModalVisible && (\r\n          <MovieCard movie={selectedMovie} toggleModal={this.toggleModal} />\r\n        )}\r\n        <BrowseMovieList\r\n          movies={movies}\r\n          toggleModal={this.toggleModal}\r\n          loadMoreMovies={this.handleLoadMoreMovies}\r\n          hasNextPage={hasNextPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport MovieFeed from '../components/movie-displays/MovieFeed';\r\nimport { ChatWindow } from '../components';\r\nimport { FontAwesomeIcon, moviesAPI } from '../utils';\r\nimport '../css/css-pages/FindMoviePage.css';\r\n\r\nclass FindMoviePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      genreIds: {},\r\n      results: [{}],\r\n      talkedToLloyd: false,\r\n      mountChat: false,\r\n      isExpanded: true,\r\n    };\r\n  }\r\n\r\n  getMovieResults = dataObj => {\r\n    moviesAPI\r\n      .getRecs(dataObj)\r\n      .then(response => {\r\n        this.setState({\r\n          results: response.data.results,\r\n          talkedToLloyd: true,\r\n        });\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  getGenreData = () => {\r\n    moviesAPI\r\n      .getGenres()\r\n      .then(response => {\r\n        const genreIds = response.data.reduce((acc, curr) => {\r\n          acc[curr.translation] = curr._id;\r\n          return acc;\r\n        }, {});\r\n        this.setState({\r\n          genreIds,\r\n          mountChat: true,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  resetMovieResults = () => {\r\n    this.setState({ talkedToLloyd: false });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getGenreData();\r\n  };\r\n\r\n  toggleExpanded = () => {\r\n    this.setState(prevState => ({ isExpanded: !prevState.isExpanded }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      talkedToLloyd,\r\n      genreIds,\r\n      results,\r\n      mountChat,\r\n      isExpanded,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"full-container\">\r\n          <button\r\n            type=\"button\"\r\n            className={`expand-indicator ${isExpanded ? 'close' : ''}`}\r\n            onClick={this.toggleExpanded}\r\n          >\r\n            <FontAwesomeIcon icon=\"angle-down\" />\r\n          </button>\r\n          <div\r\n            className=\"top-chat-container\"\r\n            style={isExpanded ? { height: '0' } : {}}\r\n          >\r\n            <img className=\"lloyd-icon\" src=\"/images/lloyd.png\" alt=\"Lloyd\" />\r\n            <h1 className=\"lloyd-title\">Lloyd Chat</h1>\r\n          </div>\r\n          <div\r\n            className=\"bottom-chat-container\"\r\n            style={isExpanded ? {} : { height: '0px' }}\r\n          >\r\n            {mountChat && isExpanded ? (\r\n              <ChatWindow\r\n                toggleChat={this.toggleExpanded}\r\n                getMovieResults={this.getMovieResults}\r\n                resetMovieResults={this.resetMovieResults}\r\n                genreIds={genreIds}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n        {talkedToLloyd && results.length > 0 ? (\r\n          <MovieFeed movies={results} />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {!talkedToLloyd ? '' : ''} {/* Why is this here...? */}\r\n        {results.length === 0 ? (\r\n          <div>\r\n            <h1 className=\"findMovieh1\">\r\n              Lloyd could not find anything that matched your preferences.\r\n            </h1>\r\n            <br />\r\n            <h3 className=\"findMovieh3\">\r\n              Ask him again with different criteria so he can find YaMovie or\r\n              come back later because our database is always expanding!\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FindMoviePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/css-pages/HomePage.css';\r\n\r\nconst background = {\r\n  backgroundImage: \"url('/images/backgrounds/landing-bg-v1.jpg')\",\r\n};\r\n\r\nconst HomePage = () => (\r\n  <div className=\"landing-body\">\r\n    <section id=\"link-container\" style={background}>\r\n      <div id=\"landing-quote\">\r\n        <h3>We find your movie,</h3>\r\n        <h3>You bring the popcorn!</h3>\r\n      </div>\r\n      <div id=\"link-info\">\r\n        <Link to=\"/recommendations\">Find YaMovie!</Link>\r\n      </div>\r\n    </section>\r\n\r\n    <article id=\"overview\">\r\n      <img src=\"/images/yamovie/logo-v3.png\" alt=\"YaMovie!\" />\r\n      <span id=\"movie-summary\">\r\n        Our technology intelligently takes your unique personality, viewing\r\n        habits, and diverse interests to curate the right movies for you!\r\n      </span>\r\n    </article>\r\n\r\n    <section id=\"info-container\">\r\n      <div className=\"info-card\">\r\n        <img src=\"/images/shared-pics/browsing-white.png\" alt=\"Browse\" />\r\n        <h2>Browse</h2>\r\n        <p>\r\n          Go through our collection of thousands of movies with up-to-date\r\n          information, including critic ratings and links to streaming sources.\r\n        </p>\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <img src=\"/images/lloyd/lloyd-white.png\" alt=\"Chatbot\" />\r\n        <h2>Chatbot</h2>\r\n        <p>\r\n          On our site, you will meet Lloyd our chatbot! He will ask you a set of\r\n          personalized questions to help you pinpoint the movie you are craving.\r\n        </p>\r\n      </div>\r\n      <div className=\"info-card\">\r\n        <img src=\"/images/shared-pics/account-white.png\" alt=\"Benefits\" />\r\n        <h2>Account Benefits</h2>\r\n        <p>\r\n          By signing up with YaMovie, we can save what you enjoy so it will be\r\n          easier for you and more accurate for us to curate movies for you in\r\n          the future!\r\n        </p>\r\n      </div>\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1\r\n      style={{\r\n        color: 'var(--offwhite)',\r\n        textAlign: 'center',\r\n        textShadow: '1px 2px 1px var(--red)',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      404: Page Not Found\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","// TODO: Remove this later\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, { Component } from 'react';\r\nimport '../css/main.css';\r\nimport '../css/css-pages/UserDashboardPage.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router-dom';\r\nimport { AccountNav, UserPreferences, Watchlist } from '../components';\r\n\r\nclass userDashboardPage extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape(Object).isRequired,\r\n    user: PropTypes.shape(Object).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { match, user } = this.props;\r\n    return (\r\n      <div className=\"dashboard-page\">\r\n        <AccountNav user={user} />\r\n\r\n        <Route exact path={`${match.url}`} component={UserPreferences} />\r\n        <Route path={`${match.url}/watchlist`} component={Watchlist} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userDashboardPage;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport {\r\n  HomePage,\r\n  BrowsePage,\r\n  AboutPage,\r\n  FindMoviePage,\r\n  NotFoundPage,\r\n  UserDashboardPage,\r\n} from './pages';\r\nimport { FeedbackToast, Login, Signup, Navbar } from './components';\r\nimport userServices from './utils/userServices';\r\nimport './css/main.css';\r\n\r\nrequire('dotenv').config();\r\n\r\n// import Watchlist from './components/Watchlist';\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    location: PropTypes.shape(Object).isRequired,\r\n    history: PropTypes.shape(Object).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isAuthenticated: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * get token and set to local storage\r\n   */\r\n  componentWillMount() {\r\n    const { location, history } = this.props;\r\n    const query = queryString.parse(location.search);\r\n    if (query.token) {\r\n      window.localStorage.setItem('token', query.token);\r\n      history.push('/');\r\n      this.setState({ isAuthenticated: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get user data from database\r\n   */\r\n  componentDidMount() {\r\n    const user = userServices.getUser();\r\n    if (user) {\r\n      this.setState({ isAuthenticated: true, user });\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    userServices.logout();\r\n    this.setState({ isAuthenticated: false, user: null });\r\n  };\r\n\r\n  handleLogin = () => {\r\n    this.setState({ isAuthenticated: true, user: userServices.getUser() });\r\n  };\r\n\r\n  handleSignup = () => {\r\n    this.setState({ isAuthenticated: true, user: userServices.getUser() });\r\n  };\r\n\r\n  render() {\r\n    const { user, isAuthenticated } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar user={user} handleLogout={this.handleLogout} />\r\n        <FeedbackToast />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route path=\"/browse\" component={BrowsePage} />\r\n          <Route path=\"/about\" component={AboutPage} />\r\n          <Route path=\"/recommendations\" component={FindMoviePage} />\r\n          <Route\r\n            path=\"/login\"\r\n            render={({ props }) =>\r\n              isAuthenticated ? (\r\n                <Redirect to=\"/account\" />\r\n              ) : (\r\n                <Login {...props} handleLogin={this.handleLogin} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/signup\"\r\n            render={({ props }) =>\r\n              isAuthenticated ? (\r\n                <Redirect to=\"/account\" />\r\n              ) : (\r\n                <Signup {...props} handleSignup={this.handleSignup} />\r\n              )\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/account\"\r\n            render={({ match, props }) =>\r\n              isAuthenticated ? (\r\n                <UserDashboardPage {...props} match={match} user={user} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Router><Route component={App} /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}