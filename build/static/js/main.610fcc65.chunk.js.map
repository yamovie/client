{"version":3,"sources":["pages/AboutPage.js","components/ChatWindow.js","components/GenreList.js","components/GoogleLogin.js","components/LloydChat.js","utils/tokenServices.js","utils/userAPI.js","utils/userServices.js","components/Login.js","components/MovieCard.js","components/MovieList.js","utils/fontAwesome.js","components/Navbar.js","components/OAuth.js","components/Signup.js","components/SearchBar.js","pages/BrowsePage.js","pages/FindMoviePage.js","pages/HomePage.js","pages/NotFoundPage.js","components/AccountNav.js","components/ToggleSwitch.js","components/UserPreferences.js","pages/UserDashboardPage.js","components/Watchlist.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","react_default","a","createElement","className","src","muted","autoPlay","loop","alt","ChatWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","greetingQuestion","botui","message","bot","content","delay","delays","initial","nextQ","action","button","value","text","ansOptions","moodQuestion","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","response","then","moodRes","setState","mood","stop","ageQuestion","_callee2","_context2","ageRes","age","eraQuestion","_callee3","_context3","eraRes","era","animatedQuestion","_callee4","_context4","animRes","animated","foreignQuestion","_callee5","_context5","forRes","foreign","indieQuestion","_callee6","_context6","indieRes","indie","ratingsQuestion","_callee8","_context8","_ref8","_callee7","ratingsRes","_context7","rtQuestion","imdbQuestion","_x","apply","arguments","_callee9","_context9","rtRes","ratingsValue","rottenTomatoes","_callee10","_context10","imdbRes","imdb","resultsMessage","loading","state","ratings","_this2","_ref11","_callee11","res","_context11","_x2","_this3","lib_default","ref","cmp","React","Component","GenreList","handleSelectionReset","bind","assertThisInitialized","handlePreferencesChange","e","reset","handleFormChange","preventDefault","target","_this$props","moviesByGenreKey","genres","style","checkboxesVisible","showCertifications","selectedGenres","selectedCertifications","onSubmit","id","map","certification","i","key","type","name","defaultChecked","includes","onChange","genre","_id","onClick","defaultProps","GoogleLogin","href","width","height","viewBox","fill","fillRule","d","LloydChat","toggleChatWindow","prevState","isChatVisible","componentDidMount","localStorage","alreadyVisited","setTimeout","components_ChatWindow","toggleChat","getToken","token","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","getUserFromToken","user","tokenServices","setToken","setItem","removeToken","BASE_URL","concat","process","userAPI","signup","axios","post","email","fullName","password","pw","headers","Headers","Content-Type","login","creds","sent","data","userServices","getUser","logout","Login","handleChange","field","defineProperty","handleSubmit","handleLogin","history","push","catch","err","_this$state","placeholder","Link","to","components_GoogleLogin","MovieCard","overview","metacritic","rotten_tomatoes","release","runtime","title","credits","cast","crew","images","backdrops","posters","movie","genre_ids","release_year","external_ids","genresArray","forEach","genreName","find","modRatings","objectSpread","internet_movie_database","url","imdb_id","toggleModal","directorList","filter","member","job","directors","length","reduce","dirs","backdropNum","Math","floor","random","backdrop","posterNum","poster","backdrop_url","poster_url","MovieCard_RatingsView","join","MovieCard_StreamsView","StreamsView","_ref","RatingsView","_ref2","rel","rate","serverLink","MovieList","getMovies","genreId","undefined","get","getSingleMovie","getGenres","showGenreFilter","all","spread","genreResp","movieResp","movies","results","handleSendGenre","genreKey","isModalVisible","selectedMovie","console","error","toggleHover","hover","event","searchInputValue","log","params","imagesForAllMovies","p","components_MovieCard","SearchBar_SearchBar","opacity","moviePosters","library","add","faUser","faHome","faSearch","faColumns","faAddressCard","faSignInAlt","faUserPlus","Navbar","menuOpen","isOpen","handleLogout","NavLink","BurgerMenu","right","onStateChange","handleStateChange","closeMenu","react_fontawesome_index_es","icon","Signup","handleSignup","pwConfirm","_this$state2","SearchBar","hoverStyle","display","components_GenreList","moviesByGenreId","BrowsePage","components_MovieList","FindMoviePage","color","textAlign","textShadow","padding","components_LloydChat","background","backgroundImage","HomePage","NotFoundPage","AccountNav","ToggleSwitch","labelName","selectedValue","Fragment","checked","YearDropdown","selectedMinYear","selectedMaxYear","listOfYears","year","getFullYear","reverse","selected","UserPreferences","pageIsLoading","prefUpdatesQueued","preferences","rottenRating","imdbRating","certifications","streamingServices","hulu","netflix","minRating","minYear","maxYear","userId","updatedPreferences","patch","passedProps","formInput","splice","_this$state3","_this$state3$preferen","_this$state3$preferen2","_this$state3$preferen3","components_ToggleSwitch","UserPreferences_YearDropdown","htmlFor","min","max","defaultValue","step","userDashboardPage","match","components_AccountNav","Route","exact","path","render","components_UserPreferences","assign","require","config","App","location","query","queryString","search","window","components_Navbar","Switch","component","components_Login","components_Signup","pages_UserDashboardPage","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.610fcc65.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/AboutPage.css';\n\nconst AboutPage = () => (\n  <div className=\"about-page\">\n    <header>\n      <div className=\"overlay\" />\n      <video src=\"/images/about-me-videooverlay.mp4\" muted autoPlay loop />\n      <div className=\"mission\">\n        <h1>Our Mission</h1>\n        <p>\n          Our mission is to transform how consumers choose which movies to watch. Our\n          technology intelligently curates a unique personal experience based on\n          personality, viewing habits, and diverse interests to help ensure that every\n          person loves the next movie more than the last.\n        </p>\n      </div>\n    </header>\n    <div className=\"info\">\n      <div className=\"info-panel\">\n        <img src=\"/images/warning-sign.png\" alt=\"warning\" className=\"about-icon\" />\n        <div>\n          <h3>The Problem</h3>\n          <p>\n            Over 500,000 movies available. It&apos;s hard to find a movie to watch with so\n            many options across mutiple platforms.\n            <br />\n            <br />\n            - 4,010 movies on Netflix 2018\n            <br />\n            - 18,405 movies on Amazon Prime 2016\n            <br />- Over 2,500 movies on Hulu 2018\n          </p>\n        </div>\n      </div>\n      <div className=\"info-panel\">\n        <img src=\"/images/solution.png\" alt=\"solution\" className=\"about-icon\" />\n        <div>\n          <h3>Solution</h3>\n          <p>\n            YaMovie offers a way to recieve personally curated movies all in one place and\n            provide info on where to watch them.\n          </p>\n        </div>\n      </div>\n      <div className=\"info-panel\">\n        <img src=\"/images/book.png\" alt=\"solution\" className=\"about-icon\" />\n        <div>\n          <h3>Story</h3>\n          <p>\n            Established in 2019 as part of the first Los Angeles cohort at TalentPath.\n            YaMovie was created by a team of software engineers who are passionate about\n            movies.\n          </p>\n        </div>\n      </div>\n    </div>\n    <div className=\"avatar-section\">\n      <h2 className=\"avatar-header\">Meet The Team</h2>\n      <div className=\"avatar-list\">\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img src=\"/images/ivy.png\" alt=\"Ivy Lim\" className=\"avatar-image\" />\n          </div>\n          <h3 className=\"avatar-name\">Ivy</h3>\n          <h5 className=\"avatar-role\">Project Manager / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movies: Star Wars</p>\n          <p className=\"avatar-show\">Favorite Show: Game of Thrones</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img src=\"/images/sam.png\" alt=\"Sam Saks-Fithian\" className=\"avatar-image\" />\n          </div>\n          <h3 className=\"avatar-name\">Sam</h3>\n          <h5 className=\"avatar-role\">GitHub Manager / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movies: MCU</p>\n          <p className=\"avatar-show\">Favorite Show: The Good Place</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Action Comedy</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img src=\"/images/kevin.png\" alt=\"Kevin Baktiar\" className=\"avatar-image\" />\n          </div>\n          <h3 className=\"avatar-name\">Kevin</h3>\n          <h5 className=\"avatar-role\">Designer / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: The Matrix</p>\n          <p className=\"avatar-show\">Favorite Show: New Girl</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img src=\"/images/hans.png\" alt=\"Hans Hanken\" className=\"avatar-image\" />\n          </div>\n          <h3 className=\"avatar-name\">Hans</h3>\n          <h5 className=\"avatar-role\">Flex / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movies: The Lord of the Rings</p>\n          <p className=\"avatar-show\">Favorite Show: Brooklyn Nine Nine</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Adventure</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img src=\"/images/will.png\" alt=\"Will Dale\" className=\"avatar-image\" />\n          </div>\n          <h3 className=\"avatar-name\">Will</h3>\n          <h5 className=\"avatar-role\">&lsquo;HR&rsquo; / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: The Producers</p>\n          <p className=\"avatar-show\">Favorite Show: The Wire</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Historical Drama</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/glen.png\"\n              alt=\"Glen Paul Florendo\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Glen</h3>\n          <h5 className=\"avatar-role\">Back-End Lead / Software Engineer</h5>\n          <p className=\"avatar-movie\">\n            Favorite Movie: Spider-Man: Into the Spider-Verse\n          </p>\n          <p className=\"avatar-show\">Favorite Show: The Office</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Action</p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","// TODO: Remove this disable once Will's changes are merged in so the state is actually used\n/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Botui from 'botui-react';\nimport '../css/ChatWindow.css';\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mood: 'funny',\n      age: '12under',\n      era: 'modern',\n      ratings: 'dont-care',\n      ratingsValue: {\n        rottenTomatoes: 0,\n        imdb: 0,\n      },\n      animated: true,\n      foreign: true,\n      indie: true,\n    };\n    this.delays = {\n      initial: 250,\n      response: 500,\n      nextQ: 1250,\n      ansOptions: 1750,\n    };\n  }\n\n  componentDidMount() {\n    this.greetingQuestion().then(async res => {\n      if (res.value) {\n        await this.moodQuestion();\n        await this.ageQuestion();\n        await this.eraQuestion();\n        await this.animatedQuestion();\n        await this.foreignQuestion();\n        await this.indieQuestion();\n        await this.ratingsQuestion();\n        this.resultsMessage();\n      } else {\n        this.botui.message.bot({\n          content: 'Okay, goodbye! 👋',\n          delay: this.delays.response,\n        });\n      }\n    });\n  }\n\n  /**\n   * Shows the initial greeting message, the question for if the user wants recs,\n   * and then the answer option buttons\n   * @returns {Promise} When fulfilled, promise will contain true or false if they want recs\n   */\n  greetingQuestion = () => {\n    this.botui.message.bot({\n      content: 'Hello! 👋 My name is Lloyd! 😁',\n      delay: this.delays.initial,\n    });\n    this.botui.message.bot({\n      content: 'Do you need help finding a movie? 🎬',\n      delay: this.delays.nextQ,\n    });\n    return this.botui.action.button({\n      action: [{ value: true, text: 'Yes' }, { value: false, text: 'No' }],\n      delay: this.delays.ansOptions,\n    });\n  };\n\n  /**\n   * Asks about the user's mood, displays button response options, then sets the state\n   * and displays a response message when they have selected an option\n   */\n  moodQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Okay! What kind of movie are you in the mood for?',\n      delay: this.delays.response,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: 'funny', text: 'Funny 😆' },\n          { value: 'sad', text: 'Sad 😭' },\n          { value: 'dramatic', text: 'Dramatic 😮' },\n          { value: 'scary', text: 'Scary 😱' },\n          { value: 'action-packed', text: 'Action Packed 🏃‍' },\n          { value: 'romantic', text: 'Romantic 💘' },\n          { value: 'silly', text: 'Silly 🤡' },\n        ],\n        delay: this.delays.nextQ,\n      })\n      .then(moodRes => {\n        this.setState({ mood: moodRes.value });\n        this.botui.message.bot({\n          content: 'Awesome!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's age, displays button response options, then sets the state\n   * and displays a response message when they have selected an option\n   */\n  ageQuestion = async () => {\n    this.botui.message.bot({\n      content: 'What is your age range?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: '12under', text: '12 and Under' },\n          { value: '13to17', text: '13 - 17' },\n          { value: '18to29', text: '18 - 29' },\n          { value: '30to40', text: '30 - 40' },\n          { value: '41to54', text: '41 - 54' },\n          { value: '55plus', text: '55+' },\n        ],\n        delay: this.delays.ansOptions,\n      })\n      .then(ageRes => {\n        this.setState({ age: ageRes.value });\n        this.botui.message.bot({\n          content: 'Thanks!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's movie era preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  eraQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Do you want to watch a classic or modern movie?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: 'classic', text: 'Classic' },\n          { value: 'modern', text: 'Modern' },\n          { value: 'in-between', text: 'In Between' },\n        ],\n        delay: this.delays.ansOptions,\n      })\n      .then(eraRes => {\n        this.setState({ era: eraRes.value });\n        this.botui.message.bot({\n          content: 'Me too!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's animation preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  animatedQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Do you like animated films?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [{ value: true, text: 'Yes 👍' }, { value: false, text: 'No 👎' }],\n        delay: this.delays.ansOptions,\n      })\n      .then(animRes => {\n        this.setState({ animated: animRes.value });\n        this.botui.message.bot({\n          content: 'Cool!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's foreign film preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  foreignQuestion = async () => {\n    this.botui.message.bot({\n      content: 'How about foreign films?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [{ value: true, text: 'Yes 👍' }, { value: false, text: 'No 👎' }],\n        delay: this.delays.ansOptions,\n      })\n      .then(forRes => {\n        this.setState({ foreign: forRes.value });\n        this.botui.message.bot({\n          content: 'Great!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's indie preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  indieQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Do you like independent films?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [{ value: true, text: 'Yes 👍' }, { value: false, text: 'No 👎' }],\n        delay: this.delays.ansOptions,\n      })\n      .then(indieRes => {\n        this.setState({ indie: indieRes.value });\n        this.botui.message.bot({\n          // TODO: Move this response to after a different question\n          content: 'You have good taste!',\n          delay: this.delays.response,\n        });\n      });\n  };\n\n  /**\n   * Asks about the user's ratings preference, displays button response options, then\n   * follows up based on their response. Calls the sub-functions to get actual rating info\n   * for each Rotten Tomatoes and IMDB ratings.\n   */\n  ratingsQuestion = async () => {\n    this.botui.message.bot({\n      content: 'What ratings do you care about?',\n      delay: this.delays.nextQ,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: 'rotten-tomatoes', text: 'Rotten Tomatoes' },\n          { value: 'imdb', text: 'IMDB' },\n          { value: 'dont-care', text: 'I Dont Care' },\n          { value: 'both', text: 'Both' },\n        ],\n        delay: this.delays.ansOptions,\n      })\n      .then(async ratingsRes => {\n        if (ratingsRes.value === 'both' || ratingsRes.value === 'rotten-tomatoes') {\n          await this.rtQuestion();\n        }\n        if (ratingsRes.value === 'both' || ratingsRes.value === 'imdb') {\n          await this.imdbQuestion();\n        }\n      });\n  };\n\n  /**\n   * Sub-function for Rotten Tomatoes rating preferences --\n   * Asks about the user's RT threshold preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  rtQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Minimum Rotten Tomatoes rating?',\n      delay: this.delays.response,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: 60, text: '60%' },\n          { value: 75, text: '75%' },\n          { value: 0, text: 'No Minimum' },\n        ],\n        delay: this.delays.nextQ,\n      })\n      .then(rtRes => {\n        this.setState({ ratingsValue: { rottenTomatoes: rtRes.value } });\n      });\n  };\n\n  /**\n   * Sub-function for IMDB rating preferences --\n   * Asks about the user's IMDB threshold preference, displays button response options, then\n   * sets the state and displays a response message when they have selected an option\n   */\n  imdbQuestion = async () => {\n    this.botui.message.bot({\n      content: 'Minimum IMDB rating?',\n      delay: this.delays.response,\n    });\n    await this.botui.action\n      .button({\n        action: [\n          { value: 5, text: '5/10' },\n          { value: 7, text: '7/10' },\n          { value: 0, text: 'No Minimum' },\n        ],\n        delay: this.delays.nextQ,\n      })\n      .then(imdbRes => {\n        this.setState({ ratingsValue: { imdb: imdbRes.value } });\n      });\n  };\n\n  /**\n   * Displays the loading message that its getting results\n   */\n  resultsMessage = () => {\n    this.botui.message.bot({\n      loading: true,\n      content: 'Getting results now!',\n      delay: this.delays.response,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"chat-window\">\n        {/* eslint-disable-next-line no-return-assign */}        \n        <Botui ref={cmp => (this.botui = cmp)} />   \n      </div>\n    );\n  }\n}\n\nexport default ChatWindow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/GenreList.css';\nimport axios from 'axios';\n\nclass GenreList extends React.Component {\n  static propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n    moviesByGenreKey: PropTypes.func.isRequired,\n    checkboxesVisible: PropTypes.bool,\n    style: PropTypes.shape({\n      display: PropTypes.string,\n    }),\n    selectedGenres: [],\n\n  };\n\n  static defaultProps = {\n    style: 'style',\n    checkboxesVisible: false,\n    selectedGenres: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleSelectionReset = this.handleSelectionReset.bind(this);\n    this.handlePreferencesChange = this.handlePreferencesChange.bind(this);\n  }\n\n  handlePreferencesChange(e, reset) {\n    this.props.handleFormChange(e, reset);\n  }\n\n  // =================== Unticks all checked genreboxes ==============\n\n  handleSelectionReset(e) {\n    e.preventDefault();\n    e.target.reset();\n    this.handlePreferencesChange(e, true);\n  }\n\n  // ================== Renders the genre list ==================\n\n  render() {\n    const {\n      moviesByGenreKey,\n      genres,\n      style,\n      checkboxesVisible,\n      showCertifications,\n      handlePreferencesChange,\n      selectedGenres,\n      selectedCertifications,\n    } = this.props;\n    const certifications = ['PG', 'PG-13', 'R', 'G', 'NC-17'];\n\n    if (showCertifications) {\n      return (\n        <div>\n          <form onSubmit={this.handleSelectionReset} id='certificationsForm'>\n            <div id=\"list-genres\">\n              {certifications.map((certification, i) => (\n                <label className=\"single-genre checkmark-container\" key={i}>\n                  <input type=\"checkbox\" name=\"certification\" defaultChecked={selectedCertifications.includes(certification)} value={certification} onChange={this.handlePreferencesChange} />\n                  <span className=\"checkmark\" />\n                  <span className=\"single-genre\">{certification}</span>\n                </label>\n              ))}\n            </div>\n            <button className=\"reset-button\" type=\"submit\">reset</button>\n          </form>\n        </div>\n      );\n    }\n    if (checkboxesVisible) {\n      return (\n        <div>\n          <form onSubmit={this.handleSelectionReset} id='genrePreferencesForm'>\n            <div id=\"list-genres\">\n              {genres.map(genre => (\n                <label className=\"single-genre checkmark-container\" key={genre._id}>\n                  <input type=\"checkbox\" name=\"genre\" value={genre._id} defaultChecked={selectedGenres.includes(genre._id)} onChange={this.handlePreferencesChange} />\n                  <span className=\"checkmark\" />\n                  <span className=\"single-genre\">{genre.name}</span>\n                </label>\n              ))}\n            </div>\n            <button className=\"reset-button\" type=\"submit\">reset</button>\n          </form>\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"list-genres\" style={style}>\n        <button\n          className=\"single-genre\"\n          type=\"button\"\n          onClick={() => moviesByGenreKey('all')}\n        >\n          All\n        </button>\n        {genres.map(genre => (\n          <button\n            className=\"single-genre\"\n            type=\"button\"\n            key={genre.name}\n            onClick={() => moviesByGenreKey(genre._id)}\n          >\n            {genre.name}\n          </button>\n          \n        ))}\n      </div>\n    );\n\n    \n  }\n}\n\nGenreList.propTypes = {\n  genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n  moviesByGenreId: PropTypes.func.isRequired,\n  style: PropTypes.shape({\n    display: PropTypes.string,\n  }),\n};\n\nGenreList.defaultProps = {\n  style: 'style',\n};\n\nexport default GenreList;\n","import React from 'react';\nimport '../css/GoogleLogin.css';\n\nconst AUTH_SERVER_LINK = 'https://yamovie-server.herokuapp.com/auth/google';\n\nconst GoogleLogin = () => (\n  <a href={AUTH_SERVER_LINK} className=\"google-link\">\n    <span className=\"svgIcon t-popup-svg\">\n      <svg className=\"svgIcon-use\" width=\"25\" height=\"30\" viewBox=\"0 0 25 25\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\"\n            fill=\"#4285F4\"\n          />\n          <path\n            d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\"\n            fill=\"#34A853\"\n          />\n          <path\n            d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\"\n            fill=\"#FBBC05\"\n          />\n          <path\n            d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\"\n            fill=\"#EA4335\"\n          />\n        </g>\n      </svg>\n    </span>\n    <span className=\"button-label\">Login with Google</span>\n  </a>\n);\n\nexport default GoogleLogin;\n","import React, { Component } from 'react';\nimport { ChatWindow } from '.';\nimport '../css/LloydChat.css';\n\nclass LloydChat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isChatVisible: false,\n    };\n  }\n\n  toggleChatWindow = () => {\n    this.setState(prevState => ({ isChatVisible: !prevState.isChatVisible }));\n  };\n\n  componentDidMount = () => {\n    const visited = localStorage.alreadyVisited;\n    if (visited) {\n      this.setState({ isChatVisible: false });\n    } else {\n      localStorage.alreadyVisited = true;\n      setTimeout(() => {\n        this.setState({ isChatVisible: true });\n      }, 30000);\n    }\n  };\n\n  render() {\n    const { isChatVisible } = this.state;\n    return (\n      <div id=\"lloyd-outline\">\n        <button id=\"lloyd-button-wrapper\" type=\"button\" onClick={this.toggleChatWindow}>\n          <img src=\"/images/Lloyd.png\" alt=\"Talk to Lloyd!\" id=\"chatbot-btn\" />\n        </button>\n        {isChatVisible && (\n        <div>  \n          <ChatWindow toggleChat={this.toggleChatWindow} isChatVisible={isChatVisible} />\n          <button type=\"button\" className=\"close-chat\" onClick={this.toggleChatWindow}>\n            &times;\n          </button>\n          </div>\n        )}\n      </div>\n       \n    );\n  }\n}\n\nexport default LloydChat;\n","/**\n * Set token to local storage\n * @param {string} token \n */\nfunction setToken(token) {\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\n/**\n * check if there is a token in local storage\n * if there is a token, check to see if token is valid\n */\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert Date.now()\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\n/**\n * parse token for user information\n * @returns {Object} or null\n */\nexport function getUserFromToken() {\n  const token = getToken();\n  // jwt parsing\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};\n","import axios from 'axios';\n\nconst BASE_URL = `${process.env.REACT_APP_BASE_URL}users/`;\n/**\n * Axios call to database to signup user\n * @param {Object} user\n * @returns {string} token\n */\nfunction signup(user) {\n  return axios.post(\n    `${BASE_URL}signup`,\n    { email: user.email, fullName: user.fullName, password: user.pw },\n    { headers: new Headers({ 'Content-Type': 'application/json' }) },\n  );\n}\n\n/**\n * Axios call to database to verify user login\n * @param {Object} creds\n *  * @returns {string} token\n */\nfunction login(creds) {\n  return axios.post(\n    `${BASE_URL}login`,\n    { email: creds.email, pw: creds.pw },\n    { headers: new Headers({ 'Content-Type': 'application/json' }) },\n  );\n}\n\nexport default {\n  signup,\n  login,\n};\n","import tokenServices from './tokenServices';\nimport userAPI from './userAPI';\n\nfunction getUser() {\n  return tokenServices.getUserFromToken();\n}\n\nfunction logout() {\n  tokenServices.removeToken();\n}\n\n/**\n * checks users email and password\n * @param {Object} creds \n * @returns token\n */\nasync function login(creds) {\n  const response = await userAPI.login(creds);\n  const { token } = response.data;\n  tokenServices.setToken(token);\n}\n\n/**\n * creates new user\n * @param {Object} user \n * @returns token\n */\nasync function signup(user) {\n  const response = await userAPI.signup(user);\n  const { token } = response.data;\n  tokenServices.setToken(token);\n}\n\nexport default {\n  getUser,\n  logout,\n  login,\n  signup,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { GoogleLogin } from '.';\nimport userServices from '../utils/userServices';\nimport '../css/Login.css';\n\nclass Login extends Component {\n  static propTypes = {\n    handleLogin: PropTypes.func.isRequired,\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      pw: '',\n      message: '',\n    };\n  }\n\n  handleChange = (field, e) => {\n    this.setState({\n      [field]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { handleLogin, history } = this.props;\n    e.preventDefault();\n    userServices\n      .login(this.state)\n      .then(() => {\n        handleLogin();\n        history.push('/');\n      })\n      .catch(err => this.setState({ message: `${err}: Invalid Credentials!` }));\n  };\n\n  render() {\n    const { email, pw, message } = this.state;\n    return (\n      <div className=\"login-page\">\n        <div className=\"login\">\n          <div className=\"form-container\">\n            <form onSubmit={this.handleSubmit}>\n              <img\n                className=\"popcorn-logo\"\n                src=\"/images/popcornKernal.png\"\n                alt=\"YaMovie Popcorn\"\n              />\n              <header>Log In To YaMovie!</header>\n              <div className=\"input-container\">\n                <input\n                  className=\"login-input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={e => this.handleChange('email', e)}\n                />\n                <input\n                  className=\"login-input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={pw}\n                  onChange={e => this.handleChange('pw', e)}\n                />\n              </div>\n              <div className=\"button-container\">\n                <button\n                  className=\"login-submit\"\n                  type=\"button\"\n                  onClick={this.handleSubmit}\n                >\n                  {' '}\n                  Log In{' '}\n                </button>\n                <Link className=\"login-cancel\" to=\"/\">\n                  Cancel\n                </Link>\n              </div>\n            </form>\n          </div>\n          {message && <span>{message}</span>}\n          <GoogleLogin />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/MovieCard.css';\n\nclass MovieCard extends Component {\n  static propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.object).isRequired,\n    movie: PropTypes.shape({\n      genre_ids: PropTypes.array,\n      overview: PropTypes.string,\n      ratings: PropTypes.shape({\n        internet_movie_database: PropTypes.object,\n        metacritic: PropTypes.object,\n        rotten_tomatoes: PropTypes.object,\n      }),\n      release_year: PropTypes.number,\n      runtime: PropTypes.number,\n      title: PropTypes.string,\n      credits: PropTypes.shape({\n        cast: PropTypes.arrayOf(PropTypes.object),\n        crew: PropTypes.arrayOf(PropTypes.object),\n      }),\n      images: PropTypes.shape({\n        backdrops: PropTypes.arrayOf(PropTypes.object),\n        posters: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }).isRequired,\n    toggleModal: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Creates a new movie card element using a movie data object\n   * @param {object} [movie] the movie data to use to fill this card\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      overview: '',\n      ratings: {\n        imdb: {},\n        metacritic: {},\n        rotten_tomatoes: {},\n      },\n      release: 0,\n      runtime: 0,\n      title: '',\n      credits: { cast: [], crew: [] },\n      images: { backdrops: [], posters: [] },\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { movie, genres } = this.props;\n    const {\n      genre_ids,\n      overview,\n      ratings,\n      release_year,\n      runtime,\n      title,\n      credits,\n      images,\n      external_ids,\n    } = movie;\n\n    const genresArray = [];\n    genre_ids.forEach(id => {\n      const genreName = genres.find(genre => genre._id === id).name;\n      if (genreName) {\n        genresArray.push(genreName);\n      }\n    });\n\n    // prettier-ignore\n    const modRatings = ratings\n      ? {\n        imdb: {\n          ...ratings.internet_movie_database,\n          url: `http://www.imdb.com/title/${external_ids.imdb_id}`,\n        },\n        metacritic: ratings.metacritic,\n        rotten_tomatoes: ratings.rotten_tomatoes,\n      }\n      : {};\n\n    this.setState({\n      genres: genresArray,\n      release: release_year || 'No Year',\n      title,\n      runtime,\n      credits,\n      images,\n      overview,\n      ratings: modRatings,\n      loading: false,\n    });\n  }\n\n  /**\n   * Renders the movie card in HTML on the page. Uses CSS grid to display information\n   * in three segments: trailer, descriptive info, and stream links.\n   */\n  render() {\n    const {\n      loading,\n      genres,\n      release,\n      title,\n      runtime,\n      credits,\n      images,\n      overview,\n      ratings,\n    } = this.state;\n    const { toggleModal } = this.props;\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    const directorList = credits.crew.filter(member => member.job === 'Director');\n    const directors =\n      directorList.length <= 0\n        ? ', No Director'\n        : directorList.reduce((dirs, member) => `${dirs}, ${member.name}`, '');\n\n    const backdropNum = Math.floor(Math.random() * images.backdrops.length);\n    const backdrop = images.backdrops[backdropNum];\n\n    const posterNum = Math.floor(Math.random() * images.posters.length);\n    const poster = images.posters[posterNum];\n\n    return (\n      <div className=\"movie-card\">\n        <div className=\"backdrop\">\n          {/* <div className=\"overlay\" /> */}\n          {backdrop ? <img src={backdrop.backdrop_url} alt=\"\" /> : ''}\n        </div>\n        <div className=\"info\">\n          <button type=\"button\" className=\"close-modal\" onClick={toggleModal()}>\n            &times;\n          </button>\n          <div className=\"heading\">\n            {poster ? <img className=\"poster\" alt={title} src={poster.poster_url} /> : ''}\n            <h1>{title}</h1>\n            <div id=\"line2\">\n              <h4>{`${release}${directors}`}</h4>\n              <RatingsView ratings={ratings} />\n            </div>\n            {runtime ? <span className=\"runtime\">{runtime} min</span> : ''}\n            <p className=\"genres\">{genres.join(', ')}</p>\n          </div>\n          <div className=\"description\">\n            <p>{overview || 'No plot summary available'}</p>\n          </div>\n          <StreamsView title={title} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n\n// ============================================================\n// ============================================================\n// Sub-components\n\n// ============================================================\n// Stream Links\n\n// TODO: remove this when this section is working again\n// eslint-disable-next-line react/prop-types\nconst StreamsView = ({ title }) => (\n  // const streamOptions = streams;\n  // const streamKeys = Object.keys(streamOptions);\n  <div id=\"streams\">\n    <h3>{`Watch Links for '${title}' Coming Soon!`}</h3>\n    {/* <ul>\n      {streamKeys.map(streamName => (\n        <li>\n          <a href={streamOptions[streamName]} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img\n              src=`/images/icon-${streamName}.png`\n              alt={`${streamName.charAt(0).toUpperCase()}${streamName.slice(1)}`}\n            />\n          </a>\n        </li>\n      ))}\n    </ul> */}\n  </div>\n);\n\n// ============================================================\n// Ratings\nconst RatingsView = ({ ratings }) => {\n  if (!ratings) {\n    return <div id=\"ratings\" />;\n  }\n  return (\n    <div id=\"ratings\">\n      {ratings.rotten_tomatoes ? (\n        <li>\n          <a\n            href=\"http://www.rottentomatoes.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src={`${process.env.PUBLIC_URL}/images/icon-rottentomatoes-${\n                ratings.rotten_tomatoes.value >= 60 ? 'fresh' : 'rotten'\n              }.png`}\n              alt=\"Rotten Tomatoes\"\n            />\n            {`${ratings.rotten_tomatoes.rate}`}\n          </a>\n        </li>\n      ) : (\n        ''\n      )}\n      {ratings.imdb ? (\n        <li>\n          <a href={ratings.imdb.url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={`${process.env.PUBLIC_URL}/images/icon-IMDb.png`} alt=\"IMDb\" />\n            {ratings.imdb.rate}\n          </a>\n        </li>\n      ) : (\n        ''\n      )}\n      {/* <li>\n      <img src=\"/images/icon-star.png\" alt=\"User Rating\" />\n      Users: 5/5\n    </li> */}\n    </div>\n  );\n};\n\nRatingsView.propTypes = {\n  ratings: PropTypes.shape({\n    internet_movie_database: PropTypes.object,\n    metacritic: PropTypes.object,\n    rotten_tomatoes: PropTypes.object,\n  }).isRequired,\n};\n\n// ============================================================\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { MovieCard, SearchBar } from '.';\nimport '../css/MovieList.css';\n\nconst serverLink = 'https://yamovie-server.herokuapp.com/api';\n\nclass MovieList extends Component {\n  /**\n   * Creates a movie list object and connects to the API\n   */\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      showGenreFilter: true,\n      isModalVisible: false,\n      selectedMovie: {},\n      searchInputValue: '',\n      genres: [],\n    };\n  }\n\n  // ===================== Extracts Get Requests ============================\n  // Makes each get request a function so they can be used with axios.all()\n\n  /**\n   * Gets all the movies, optionally filtered by genreId\n   * @param {String} [genreId]\n   * @returns An Axios promise with the movie data\n   */\n  getMovies = (genreId = 'all') => {\n    if (genreId !== 'all') {\n      return axios.get(`${serverLink}/movies/genre/${genreId}`);\n    }\n    return axios.get(`${serverLink}/movies/`);\n  };\n\n  /**\n   * Gets the data for a movie\n   * @param {String} [id]\n   * @returns An Axios promise with the movie data\n   */\n  getSingleMovie = id => axios.get(`${serverLink}/movies/${id}`);\n\n  /**\n   * Gets the list of all genre objects\n   * @returns An Axios promise with the genre data\n   */\n  getGenres = () => axios.get(`${serverLink}/genres/`);\n\n  // =================== Grabs Movie Data on Render =========================\n  // Sets the complete movie collection to state.\n\n  componentDidMount = () => {\n    const { showGenreFilter } = this.state;\n    if (showGenreFilter) {\n      axios.all([this.getGenres(), this.getMovies()]).then(\n        axios.spread((genreResp, movieResp) => {\n          this.setState({\n            genres: genreResp.data,\n            movies: movieResp.data.results,\n          });\n        }),\n      );\n    }\n  };\n\n  // ==================== Handles Filter Click ===============================\n  handleSendGenre = genreKey => {\n    this.getMovies(genreKey).then(response =>\n      this.setState({ movies: response.data.results }),\n    );\n  };\n\n  toggleModal = id => {\n    const { isModalVisible } = this.state;\n    if (isModalVisible) {\n      this.setState({ isModalVisible: false });\n    } else {\n      this.getSingleMovie(id)\n        .then(response =>\n          this.setState({ isModalVisible: true, selectedMovie: response.data }),\n        )\n        .catch(err => console.error(err));\n    }\n  };\n\n  toggleHover = () => {\n    this.setState(prevState => ({ hover: !prevState.hover }));\n  };\n\n  handleChange = event => {\n    this.setState({ searchInputValue: event.target.value });\n  };\n\n  // TODO: Factor this out into API call utils\n  handleSubmit = event => {\n    const { searchInputValue } = this.state;\n    console.log({searchInputValue});\n    event.preventDefault();\n    axios\n      .get('https://yamovie-server.herokuapp.com/api/movies/search', {\n        params: {\n          title: searchInputValue,\n        },\n      })\n      .then(response =>\n        this.setState({\n          movies: response.data.results,\n          searchInputValue: '',\n        }),\n      );\n  };\n\n  /**\n   * Renders the movie list in HTML on the page. Uses flexboxes to display\n   * the genre list, and to display a grid of MovieItems based on breakpoints.\n   */\n  render() {\n\n    const {\n      movies,\n      showGenreFilter,\n      isModalVisible,\n      selectedMovie,\n      searchInputValue,\n      genres,\n    } = this.state;\n\n    const imagesForAllMovies = movies\n      .map(movie => movie.images.posters)\n      .map(poster => poster.map(p => p.poster_url));\n\n\n    return (\n      <div id=\"movie-page\">\n        {isModalVisible && (\n          <MovieCard\n            toggleModal={() => this.toggleModal}\n            isModalVisible={isModalVisible}\n            movie={selectedMovie}\n            genres={genres}\n            showGenreFilter={showGenreFilter}\n          />\n        )}\n        <SearchBar\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          genres={genres}\n          searchInputValue={searchInputValue}\n          handleSendGenre={this.handleSendGenre}\n          showGenreFilter={showGenreFilter}\n        />\n        <div\n          id=\"yamovie-movie-list\"\n          className=\"container\"\n          style={{\n            opacity: isModalVisible ? 0.08 : '',\n          }}\n        >\n          <div id=\"list-all-movies\">\n            {imagesForAllMovies.map((moviePosters, i) => (\n              <div id=\"yamovie-movie-item\" key={movies[i].title}>\n                {/* TODO: Wrap this in a button for accessability and to make ESlint happy */}\n                <img\n                  src={moviePosters[0]}\n                  alt={movies[i].title}\n                  className=\"img-fluid\"\n                  onClick={() => this.toggleModal(movies[i]._id)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser, faHome, faSearch, faColumns, faAddressCard, faSignInAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nlibrary.add(faUser, faHome, faSearch, faColumns, faAddressCard, faSignInAlt, faUserPlus);\n\nexport { FontAwesomeIcon };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { slide as Menu } from 'react-burger-menu';\nimport { FontAwesomeIcon } from '../utils/fontAwesome';\nimport '../css/BurgerMenu.css';\n\n/**\n * JSX used to render the navbar on the page. Uses flexboxes to display information and links.\n * @returns JSX to create HTML navbar\n */\nclass Navbar extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      menuOpen: false,\n    }\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n  handleStateChange (state) {\n    this.setState({menuOpen: state.isOpen})\n  }\n  \n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu () {\n    this.setState({menuOpen: false})\n  }\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu () {\n    const { menuOpen } = this.state;\n    this.setState({menuOpen: !menuOpen})\n  }\n\n  render() {\n    const { menuOpen } = this.state;\n    const { user, handleLogout } = this.props;\n    return (\n      <div className=\"topnav\">\n        <NavLink to=\"/\">\n          <img src=\"/images/logo-v3-white-whitepopcorn.png\" alt=\"YaMovie\" id=\"main-logo\" />\n        </NavLink>\n        <Menu right isOpen={menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}>\n          <NavLink onClick={() => this.closeMenu()} to=\"/\" ><FontAwesomeIcon icon=\"home\" /> Home</NavLink>\n          <NavLink onClick={() => this.closeMenu()} to=\"/recommendations\"><FontAwesomeIcon icon=\"search\" /> Find YaMovie</NavLink>\n          <NavLink onClick={() => this.closeMenu()} to=\"/browse\"><FontAwesomeIcon icon=\"columns\" /> Browse</NavLink>\n          <NavLink onClick={() => this.closeMenu()} to=\"/about\"><FontAwesomeIcon icon=\"address-card\" /> About</NavLink>\n          {!user ? (\n            <div className=\"bm-div\">\n              <NavLink className=\"bm-item\" onClick={() => this.closeMenu()} to=\"/login\"><FontAwesomeIcon icon=\"sign-in-alt\" /> Login</NavLink>\n              <NavLink className=\"bm-item\" onClick={() => this.closeMenu()} to=\"/signup\"><FontAwesomeIcon icon=\"user-plus\" /> Signup</NavLink>\n            </div>\n          ) : (\n            <div className=\"bm-div\">\n              <NavLink className=\"bm-item\" onClick={() => this.closeMenu()} to=\"/account\"><FontAwesomeIcon icon=\"user\" /> My Account</NavLink>\n              <NavLink className=\"bm-item\" onClick={() => { handleLogout(); this.closeMenu()}} to=\"/\"><FontAwesomeIcon icon=\"sign-in-alt\" /> Logout</NavLink>\n            </div>\n          )}\n        </Menu>\n      </div>\n    );\n  }\n\n  // render() {\n  //   const { user, handleLogout } = this.props;\n  //   return (\n  //     <div className=\"navbar\">\n  //       <NavLink to=\"/\">\n  //         <img src=\"/images/logo-v3-white-whitepopcorn.png\" alt=\"YaMovie\" id=\"main-logo\" />\n  //       </NavLink>\n  //       <ul id=\"navbar-links\">\n  //         <li>\n  //           <NavLink to=\"/chat\">Find YaMovie</NavLink>\n  //         </li>\n  //         <li>\n  //           <NavLink to=\"/browse\">Browse</NavLink>\n  //         </li>\n  //         <li>\n  //           <NavLink to=\"/about\">About</NavLink>\n  //         </li>\n  //         {!user ? (\n  //           <div>\n  //             <li>\n  //               <NavLink to=\"/login\">Login</NavLink>\n  //             </li>\n  //             <li>\n  //               <NavLink to=\"/signup\">Signup</NavLink>\n  //             </li>\n  //           </div>\n  //         ) : (\n  //           <div>\n  //             <li>\n  //               <NavLink to=\"/account\">\n  //                 <FontAwesomeIcon icon=\"user\" />\n  //               </NavLink>\n  //             </li>\n  //             <li>\n  //               <NavLink onClick={handleLogout} to=\"/\">\n  //             Logout\n  //               </NavLink>\n  //             </li>\n  //           </div>\n  //         )}\n  //       </ul>\n  //     </div>\n  //   );\n  // }\n}\n\nexport default Navbar;\n\nNavbar.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    fullName: PropTypes.string,\n  }),\n  handleLogout: PropTypes.func.isRequired,\n};\n\nNavbar.defaultProps = {\n  user: null,\n};\n","import React from 'react';\n\nconst OAuth = () => (\n  <div>\n    <a href=\"https://yamovie-server.herokuapp.com/auth/google\" className=\"button\">\n      <div>\n        <span className=\"svgIcon t-popup-svg\">\n          <svg className=\"svgIcon-use\" width=\"25\" height=\"37\" viewBox=\"0 0 25 25\">\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <path\n                d=\"M20.66 12.693c0-.603-.054-1.182-.155-1.738H12.5v3.287h4.575a3.91 3.91 0 0 1-1.697 2.566v2.133h2.747c1.608-1.48 2.535-3.65 2.535-6.24z\"\n                fill=\"#4285F4\"\n              />\n              <path\n                d=\"M12.5 21c2.295 0 4.22-.76 5.625-2.06l-2.747-2.132c-.76.51-1.734.81-2.878.81-2.214 0-4.088-1.494-4.756-3.503h-2.84v2.202A8.498 8.498 0 0 0 12.5 21z\"\n                fill=\"#34A853\"\n              />\n              <path\n                d=\"M7.744 14.115c-.17-.51-.267-1.055-.267-1.615s.097-1.105.267-1.615V8.683h-2.84A8.488 8.488 0 0 0 4 12.5c0 1.372.328 2.67.904 3.817l2.84-2.202z\"\n                fill=\"#FBBC05\"\n              />\n              <path\n                d=\"M12.5 7.38c1.248 0 2.368.43 3.25 1.272l2.437-2.438C16.715 4.842 14.79 4 12.5 4a8.497 8.497 0 0 0-7.596 4.683l2.84 2.202c.668-2.01 2.542-3.504 4.756-3.504z\"\n                fill=\"#EA4335\"\n              />\n            </g>\n          </svg>\n        </span>\n        <span className=\"button-label\">Sign in with Google</span>\n      </div>\n    </a>\n  </div>\n);\n\nexport default OAuth;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport userServices from '../utils/userServices';\nimport { GoogleLogin } from '.';\nimport '../css/Signup.css';\n\nclass Signup extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      fullName: '',\n      pw: '',\n      pwConfirm: '',\n      message: '',\n    };\n  }\n\n  handleChange = (field, e) => {\n    this.setState({\n      [field]: e.target.value,\n    });\n  };\n\n  /**\n   * submit user information to signup\n   * if successful redirect to homepage\n   */\n  handleSubmit = e => {\n    const { handleSignup, history } = this.props;\n    e.preventDefault();\n    userServices\n      .signup(this.state)\n      .then(() => {\n        handleSignup();\n        history.push('/');\n      })\n      .catch(err => this.setState({ message: `${err}: Invalid Credentials!` }));\n  };\n\n  isFormInvalid() {\n    const { email, fullName, pw, pwConfirm } = this.state;\n    return !(fullName && email && pw === pwConfirm);\n  }\n\n  render() {\n    const { email, fullName, pw, pwConfirm, message } = this.state;\n    return (\n      <div className=\"signup-page\">\n        <div className=\"signup\">\n          <div className=\"form-container\">\n            <form onSubmit={this.handleSubmit}>\n              <img\n                className=\"popcorn-logo\"\n                src=\"/images/popcornKernal.png\"\n                alt=\"Broken\"\n              />\n              <header>Signup with YaMovie!</header>\n              <div className=\"input-container\">\n                <input\n                  className=\"signup-input\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={e => this.handleChange('email', e)}\n                />\n                <input\n                  className=\"signup-input\"\n                  type=\"name\"\n                  placeholder=\"First and Last Name\"\n                  value={fullName}\n                  onChange={e => this.handleChange('fullName', e)}\n                />\n                <input\n                  className=\"signup-input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={pw}\n                  onChange={e => this.handleChange('pw', e)}\n                />\n                <input\n                  className=\"signup-input\"\n                  type=\"password\"\n                  placeholder=\"Password Confirmation\"\n                  value={pwConfirm}\n                  onChange={e => this.handleChange('pwConfirm', e)}\n                />\n              </div>\n              <div className=\"button-container\">\n                <button\n                  className=\"signup-submit\"\n                  type=\"button\"\n                  onClick={this.handleSubmit}\n                >\n                  {' '}\n                  Signup{' '}\n                </button>\n                <Link className=\"signup-cancel\" to=\"/\">\n                  Cancel\n                </Link>\n              </div>\n            </form>\n          </div>\n          {message && <span>{message}</span>}\n          <GoogleLogin />\n        </div>\n      </div>\n    );\n  }\n}\n\nSignup.propTypes = {\n  handleSignup: PropTypes.func.isRequired,\n};\n\nexport default Signup;\n","import React, { Component } from 'react'\nimport PropTypes, { object } from 'prop-types'\nimport GenreList from \"./GenreList\";\n\nimport '../css/SearchBar.css';\n\nexport default class SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    searchInputValue: PropTypes.string,\n    genres: PropTypes.shape(object).isRequired,\n    showGenreFilter: PropTypes.bool.isRequired,\n    handleSendGenre: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    searchInputValue: '',\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hover: false,\n    }\n  }\n\n  toggleHover = () => {\n    const { hover } = this.state;\n    this.setState({\n      hover: !hover,\n    });\n  };\n\n  render() {\n    const {\n      onSubmit,\n      onChange,\n      genres,\n      searchInputValue,\n      showGenreFilter,\n      handleSendGenre\n    } = this.props;\n\n    // On hover function to display genre list through mega menu\n    let hoverStyle;\n    const { hover } = this.state;\n    if (hover) {\n      hoverStyle = { display: 'flex' };\n    } else {\n      hoverStyle = { display: 'none' };\n    }\n\n    return (\n      <div id=\"mega-search-genres\">\n        <form id=\"browse-search\" onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            value={searchInputValue}\n            onChange={onChange}\n            placeholder=\"Search Movies\"\n          />\n        </form>\n        <button type=\"button\" id=\"display-genre-button\" onClick={this.toggleHover}>\n              Display Genres\n        </button>\n        {showGenreFilter ? (\n          <GenreList\n            genres={genres}\n            style={hoverStyle}\n            toggleHover={this.toggleHover}\n            moviesByGenreId={handleSendGenre}\n          />\n        ) : (\n          ' '\n        )}\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { MovieList } from '../components';\nimport '../css/BrowsePage.css';\n\nconst BrowsePage = () => (\n  <div>\n    <MovieList />\n  </div>\n);\n\nexport default BrowsePage;\n","import React from 'react';\nimport { LloydChat } from '../components';\n\nconst FindMoviePage = () => (\n  <div>\n    <h1\n      style={{\n        color: 'var(--offwhite)',\n        textAlign: 'center',\n        textShadow: '1px 2px 1px var(--red)',\n        padding: '10px',\n      }}\n    >\n      Some recommendations will show up here.\n    </h1>\n    <LloydChat />\n  </div>\n);\n\nexport default FindMoviePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/HomePage.css';\n\nconst background = {\n  backgroundImage: \"url('/images/landing-bg-v1.jpg')\",\n};\n\nconst HomePage = () => (\n  <div className=\"landing-body\">\n    <section id=\"link-container\" style={background}>\n      <div id=\"landing-quote\">\n        <h3>We find your movie,</h3>\n        <h3>You bring the popcorn!</h3>\n      </div>\n      <div id=\"link-info\">\n        <Link to=\"/recommendations\">Find YaMovie!</Link>\n      </div>\n    </section>\n\n    <article id=\"overview\">\n      <img src=\"/images/logo-v3.png\" alt=\"YaMovie!\" />\n      <span id=\"movie-summary\">\n        Our technology intelligently takes your unique personality, viewing habits, and\n        diverse interests to curate the right movies for you!\n      </span>\n    </article>\n\n    <section id=\"info-container\">\n      <div className=\"info-card\">\n        <img src=\"/images/browsing-white.png\" alt=\"Browse\" />\n        <h2>Browse</h2>\n        <p>\n          Go through our collection of thousands of movies with up-to-date information,\n          including critic ratings and links to streaming sources.\n        </p>\n      </div>\n      <div className=\"info-card\">\n        <img src=\"/images/lloyd-white.png\" alt=\"Chatbot\" />\n        <h2>Chatbot</h2>\n        <p>\n          On our site, you will meet Lloyd our chatbot! He will ask you a set of\n          personalized questions to help you pinpoint the movie you are craving.\n        </p>\n      </div>\n      <div className=\"info-card\">\n        <img src=\"/images/account-white.png\" alt=\"Benefits\" />\n        <h2>Account Benefits</h2>\n        <p>\n          By signing up with YaMovie, we can save what you enjoy so it will be easier for\n          you and more accurate for us to curate movies for you in the future!\n        </p>\n      </div>\n    </section>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1\n      style={{\n        color: 'var(--offwhite)',\n        textAlign: 'center',\n        textShadow: '1px 2px 1px var(--red)',\n        padding: '10px',\n      }}\n    >\n      404: Page Not Found\n    </h1>\n  </div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst AccountNav = () => (\n  <aside className=\"account-nav\">\n    <ul>\n      <li>\n        <NavLink to=\"/account/\">Movie Preferences</NavLink>\n      </li>\n      {/* <li>\n        <NavLink to=\"/account/watchlist\">Watchlist</NavLink>\n      </li> */}\n    </ul>\n  </aside>\n);\n\nexport default AccountNav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ToggleSwitch = ({ labelName, handleChange, name, selectedValue }) => (\n  <>\n    { labelName ?\n      <span className=\"form-label switch-label\">{labelName}</span>\n      :\n      ''\n    }\n    <label className=\"switch\">\n      <input name={name} type=\"checkbox\" onChange={handleChange} checked={selectedValue} />\n      <span className=\"slider\" />\n    </label>\n  </>\n \n);\n\nToggleSwitch.propTypes = {\n  handleChange: PropTypes.func,\n  labelName: PropTypes.string,\n  name: PropTypes.string,\n  selectedValue: PropTypes.bool,\n};\n\n\nexport default ToggleSwitch;\n","import React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport GenreList from './GenreList';\nimport ToggleSwitch from './ToggleSwitch';\nimport { getUserFromToken } from '../utils/tokenServices';\n\nconst YearDropdown = ({ name, selectedMinYear, selectedMaxYear, handlePreferencesChange }) => {\n  const currentYear = new Date().getFullYear();\n  const oldestYear = 2018\n  const listOfYears = []\n\n  for (let year = currentYear; year >= oldestYear; year--) {\n    listOfYears.push(year)\n  }\n \n  return (\n    <>\n      <select name={name} onChange={handlePreferencesChange}>\n        {\n          selectedMinYear ? listOfYears.reverse().map(year =>\n            selectedMinYear === year ?\n              <option value={year} selected>{year}</option>\n              :\n              <option value={year}>{year}</option>\n          )\n            : listOfYears.map(year =>\n              selectedMaxYear === year ?\n                <option value={year} selected>{year}</option>\n                :\n                <option value={year}>{year}</option>\n            )\n        }\n      </select>\n    </>\n  );\n}\n\nclass UserPreferences extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape(Object).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      genres: [],\n      pageIsLoading: true,\n      prefUpdatesQueued: false,\n      preferences: {\n        genres: [],\n        rottenRating: 'N/A',\n        imdbRating: 'N/A',\n        certifications: [],\n        streamingServices: {\n          hulu: false,\n          netflix: false,\n        },\n        ratings: {\n          imdb: {\n            minRating: '',\n          },\n          rottenTomatoes: {\n            minRating: '',\n          },\n          metacritic: {\n            minRating: '',\n          },\n        },\n        release: {\n          minYear: '',\n          maxYear: '',\n        },\n      }\n    };\n\n    this.handlePreferencesChange = this.handlePreferencesChange.bind(this);\n  }\n\n  // =================== Grabs Genre List from API ==============\n\n  componentDidMount() {\n    const user = getUserFromToken();\n    const userId = user._id\n    const { preferences, genres, pageIsLoading} = this.state;\n    \n    if (!genres.length) {\n      axios\n        .get('https://yamovie-server.herokuapp.com/api/genres')\n        .then(response => this.setState({ genres: response.data, pageIsLoading: false }));\n    }\n    \n    if (pageIsLoading) {\n      axios\n        .get(`${process.env.REACT_APP_BASE_URL}preferences`, { params: {userId} })\n        .then(response => {\n          const updatedPreferences = {...preferences, ...response.data.preferences}\n\n          this.setState({preferences: updatedPreferences, pageIsLoading: false })\n        });\n    }\n  }\n\n  componentDidUpdate() {\n    const { preferences, prefUpdatesQueued } = this.state;\n    const user = getUserFromToken();\n    const userId = user._id\n    \n    if (prefUpdatesQueued) {\n      axios.patch(`${process.env.REACT_APP_BASE_URL}preferences/update`, { preferences, userId }, {headers: new Headers({ 'Content-Type': 'application/json' }) })\n        .then(() => this.setState({ prefUpdatesQueued: false }))\n    }\n  }\n\n  handlePreferencesChange(e, reset, passedProps) {\n    const { preferences} = this.state;\n    const updatedPreferences = {...preferences}\n    const formInput = e.target;\n\n    // Handle movie ratings change\n    if (formInput.id === 'rt-slider') {\n      updatedPreferences.ratings.rottenTomatoes.minRating = formInput.value;\n    } else if (formInput.id === 'imdb-slider') {\n      updatedPreferences.ratings.imdb.minRating = formInput.value;\n    }\n\n    // Handle streaming choices\n    else if (formInput.name === 'hulu' || formInput.name ===  'netflix' ) {\n      updatedPreferences.streamingServices[formInput.name] = formInput.checked;\n    }\n\n    // Handle min and max years for movie title preferences\n    else if (formInput.name === 'minYear' || formInput.name === 'maxYear' ) {\n      updatedPreferences.release[formInput.name] = formInput.value;\n    }\n\n    // Handle form reset for both genres and certifications\n    else if (reset) {\n      if (formInput.id === 'genrePreferencesForm') {\n        updatedPreferences.genres = [];\n      }\n      else if (formInput.id === 'certificationsForm') {\n        updatedPreferences.certifications = [];\n      }\n    }\n\n    // Handle the user's selected certifications\n    else if (formInput.name === 'certification') {\n      if (formInput.checked) {\n        updatedPreferences.certifications.push(formInput.value);\n      }\n      else if (!formInput.checked) {\n        updatedPreferences.certifications.forEach((certification, i) => {\n          if (certification === formInput.value) {\n            updatedPreferences.certifications.splice(i, 1);\n          }\n        })\n      }\n    }\n\n    // Handle the user's selected genres\n    else if (formInput.name === 'genre') {\n      if (formInput.checked) {\n        updatedPreferences.genres.push(formInput.value);\n      }\n      else if (!formInput.checked) {\n        updatedPreferences.genres.forEach((genre, i) => {\n          if (genre === formInput.value) {\n            updatedPreferences.genres.splice(i, 1);\n          }\n        })\n      }\n    }\n\n    \n    \n    // Updates preferences based on previous conditionals, and makes sure component did update will update\n    this.setState({ preferences: updatedPreferences, prefUpdatesQueued: true });\n  }\n\n  \n\n  render() {\n    const {\n      preferences: {\n        certifications,\n        streamingServices: {\n          hulu, netflix\n        },\n        ratings: {\n          imdb: {\n            minRating: imdbRating\n          },\n          rottenTomatoes: {\n            minRating: rottenRating\n          }\n        },\n        release,\n        genres: selectedGenres,\n      },\n      genres,\n      pageIsLoading,\n    } = this.state;\n\n    if (pageIsLoading) {\n      return <></>;\n    }\n\n    return (\n      <div className=\"account-page\">\n        <form className=\"preferences-form\">\n          <div>\n            <h1 className=\"account-title\">Movie preferences</h1>\n            <h3 className=\"account-sub-title\">Streaming Subscriptions (enable the once you have)</h3>\n            <div className=\"form-control\">\n              <ToggleSwitch labelName=\"Hulu\" handleChange={this.handlePreferencesChange} selectedValue={hulu} name=\"hulu\" />\n            </div>\n            <div className=\"form-control\">\n              <ToggleSwitch labelName=\"Netflix\" handleChange={this.handlePreferencesChange} selectedValue={netflix} name=\"netflix\" />\n            </div>\n            <div>\n              <h3 className=\"account-sub-title\">Release Year</h3>\n              <span className=\"white\">From </span>\n              <YearDropdown name=\"minYear\" selectedMinYear={release.minYear} handlePreferencesChange={this.handlePreferencesChange} />\n              <span className=\"white\">To </span>\n              <YearDropdown name=\"maxYear\" selectedMaxYear={release.maxYear} handlePreferencesChange={this.handlePreferencesChange} />\n            </div>\n            <div className=\"form-control\">\n              <h3 className=\"account-sub-title\">Filter movies by the genres you like (Leave blank for all genres)</h3>\n              <GenreList checkboxesVisible genres={genres} handleFormChange={this.handlePreferencesChange} selectedGenres={selectedGenres}  />\n            </div>\n            <div className=\"form-control\">\n              <h3 className=\"account-sub-title\">Filter movies by age/mpaa ratings (Leave blank for all ratings)</h3>\n              <GenreList checkboxesVisible showCertifications handleFormChange={this.handlePreferencesChange} selectedCertifications={certifications}/>\n            </div>\n      \n            <section className=\"ratings\">\n              <h3 className=\"account-sub-title\">Choose a minimum rating score (leave for any ratings)</h3>\n              <div className=\"form-control\">\n                <label className=\"form-label top-label\" htmlFor=\"rt-slider\">Rotten Tomatoes</label>\n                <input type=\"range\" min=\"0\" max=\"100\" defaultValue={rottenRating} onChange={this.handlePreferencesChange} id=\"rt-slider\" />\n                <span className=\"rating-display white\">{rottenRating}%</span>\n              </div>\n              <div className=\"form-control\">\n                <label className=\"form-label top-label\" htmlFor=\"imdb-slider\">IMDB</label>\n                <input type=\"range\" min=\"0\" max=\"10\" step=\"0.1\" defaultValue={imdbRating} onChange={this.handlePreferencesChange} id=\"imdb-slider\" />\n                <span className=\"rating-display white\">{imdbRating}/10</span>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UserPreferences;\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport '../css/main.css';\nimport '../css/UserDashboardPage.css';\nimport axios from 'axios';\nimport { Route } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport GenreList from '../components/GenreList';\nimport AccountNav from '../components/AccountNav';\nimport UserPreferences from '../components/UserPreferences';\nimport Watchlist from '../components/Watchlist';\n\nclass userDashboardPage extends Component {\n  render() {\n    const { match, user } = this.props;\n    return (\n      <div>\n        <div className=\"account-wrapper\">\n          <AccountNav />\n          \n          <Route exact path={`${match.url}`} render={({ props }) =>  <UserPreferences {...props} user={user} />} />\n          {/* \n          TO DO: implement watchlist\n           */}\n          {/* <Route path={`${match.url}/:watchlist`} component={Watchlist} /> */}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default userDashboardPage;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport '../css/Watchlist.css';\n\nconst WatchListMovies = () => {\n\n};\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showWatchedMovies: false,\n    };\n\n    this.toggleWatchedMovies = this.toggleWatchedMovies.bind(this);\n  }\n\n  toggleWatchedMovies(event) {\n    if (event.target.id === 'watched-btn') {\n      this.setState({ showWatchedMovies: true });\n    } else {\n      this.setState({ showWatchedMovies: false });\n    }\n  }\n\n  render() {\n    const { showWatchedMovies } = this.state;\n    const movies = [\n      {\n        title: 'The Mule',\n        image: 'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\n      },\n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'The Mule',\n        image: 'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\n      },\n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'The Mule',\n        image: 'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\n      },\n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n    ];\n\n    const watchedMovies = [\n     \n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n\n      {\n        title: 'The Mule',\n        image: 'https://image.tmdb.org/t/p/original/oeZh7yEz3PMnZLgBPhrafFHRbVz.jpg',\n      },\n      {\n        title: 'Bumblebee',\n        image: 'https://image.tmdb.org/t/p/original/fw02ONlDhrYjTSZV8XO6hhU3ds3.jpg',\n      },\n      {\n        title: 'Avengers - Infinity War',\n        image: 'https://image.tmdb.org/t/p/original/7WsyChQLEftFiDOVTGkv3hFpyyt.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n      {\n        title: 'Spider Man - Into the spider-verse',\n        image: 'https://image.tmdb.org/t/p/original/iiZZdoQBEYBv6id8su7ImL0oCbD.jpg',\n      },\n    ];\n\n    return (\n      <div className=\"account-page\">\n        <div className=\"watchlist-filter\">\n          <button className=\"white watchlist-filter-btn\" type=\"button\" id=\"watchlist-btn\" onClick={this.toggleWatchedMovies}>Watchlist</button>\n          <button className=\"white watchlist-filter-btn\" type=\"button\" id=\"watched-btn\" onClick={this.toggleWatchedMovies}>Watched</button>\n        </div>\n        {\n          <div className=\"watchlist-wrapper\">\n            {\n\n              showWatchedMovies ?\n                watchedMovies.map(movie => (\n                  <div className=\"watchlist-movie\">\n                    <img src={movie.image} className=\"img-fluid\" alt=\"movie\" />\n                    <div className=\"watchlist-buttons\">\n                      <button type=\"button\" className=\"watchlist-btn\">- Remove</button>\n                      <button type=\"button\" className=\"watchlist-btn\">+ Watched</button>\n                    </div>\n                  </div>\n                ))\n                :\n                movies.map(movie => (\n                  <div className=\"watchlist-movie\">\n                    <img src={movie.image} className=\"img-fluid\" alt=\"movie\" />\n                    <div className=\"watchlist-buttons\">\n                      <button type=\"button\" className=\"watchlist-btn\">- Remove</button>\n                      <button type=\"button\" className=\"watchlist-btn\">+ Watched</button>\n                    </div>\n                  </div>\n                ))\n            }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { HomePage, BrowsePage, AboutPage, FindMoviePage, NotFoundPage } from './pages';\nimport { ChatWindow, Login, Signup, Navbar } from './components';\nimport userServices from './utils/userServices';\nimport './css/main.css';\nimport UserDashboardPage from './pages/UserDashboardPage';\n\nrequire('dotenv').config();\n// import Watchlist from './components/Watchlist';\n\nclass App extends Component {\n  static propTypes = {\n    location: PropTypes.shape(Object).isRequired,\n    history: PropTypes.shape(Object).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    };\n  }\n\n  /**\n   * get token and set to local storage\n   */\n  componentWillMount() {\n    const { location, history } = this.props;\n    const query = queryString.parse(location.search);\n    if (query.token) {\n      window.localStorage.setItem('token', query.token);\n      history.push('/');\n    }\n  }\n\n  /**\n   * get user data from database\n   */\n  componentDidMount() {\n    const user = userServices.getUser();\n    if (user) {\n      this.setState({ user });\n    }\n  }\n\n  handleLogout = () => {\n    userServices.logout();\n    this.setState({ user: null });\n  };\n\n  handleLogin = () => {\n    this.setState({ user: userServices.getUser() });\n  };\n\n  handleSignup = () => {\n    this.setState({ user: userServices.getUser() });\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar user={user} handleLogout={this.handleLogout} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/browse\" component={BrowsePage} />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/chat\" component={ChatWindow} />\n          <Route path=\"/recommendations\" component={FindMoviePage} />\n          <Route\n            path=\"/login\"\n            render={props => <Login {...props} handleLogin={this.handleLogin} />}\n          />\n          <Route\n            path=\"/signup\"\n            render={props => <Signup {...props} handleSignup={this.handleSignup} />}\n          />\n          <Route path=\"/account\" render={({ match, props }) => <UserDashboardPage {...props} match={match} user={user} />} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><Route component={App} /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}