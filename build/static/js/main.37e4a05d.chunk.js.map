{"version":3,"sources":["components/Navbar.js","components/LloydChat.js","pages/HomePage.js","MovieApi.js","components/MovieCard.js","components/GenreList.js","components/MovieList.js","pages/BrowsePage.js","pages/AboutPage.js","components/MovieForm.js","components/ChatWindow.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","to","src","alt","id","LloydChat","Link","background","background-image","HomePage","components_Navbar","components_LloydChat","style","movieData","title","releaseYear","cast","director","tags","genres","moods","ratings","mpaa","rottenTomatoes","score","link","imdb","plot","media","posterUrl","trailerUrl","quotes","runtime","streams","theaters","MovieAPI","Object","classCallCheck","this","movies","genre","arguments","length","undefined","filter","movie","includes","mood","agerange","release","animated","isAnimated","foreign","isForeign","indie","isIndie","threshold","above","services","inclMovie","forEach","service","MovieCard","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","loading","movieApi","setState","_this$state","toggleModal","images","backdrops","url","type","onClick","posters","concat","release_date","substring","credits","crew","find","member","job","name","MovieCard_RatingsView","overview","MovieCard_StreamsView","Component","StreamsView","_ref","RatingsView","_ref2","rtRatingObj","obj","source","rtRating","value","imdbRatingObj","imdbRating","rtImg","href","target","rel","GenreList","_this2","axios","get","then","response","data","moviesByGenreKey","map","external_ids","tmdb_id","MovieList","componentDidMount","showGenreFilter","handleSendGenre","genreKey","isModalVisible","selectedMovie","catch","err","console","log","api","filteredGenre","imagesForAllMovies","poster","p","components_MovieCard","opacity","components_GenreList","moviePosters","i","key","_id","BrowsePage","components_MovieList","class","React","AboutPage","muted","autoPlay","loop","MovieForm","backToForm","event","preventDefault","displayForm","handleSubmit","formData","FormData","document","getElementById","age","getAll","streaming","htmlFor","defaultValue","defaultChecked","ChatWindow","botui","message","bot","content","delay","action","button","text","res","moodRes","ageRes","releaseRes","animatedRes","foreignRes","indieRes","ratingRes","bothRes","ratingsValue","rottenTomato","bothResp","rottenTomatoRes","imdbResp","lib_default","ref","cmp","App","Route","exact","path","component","Switch","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37e4a05d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../css/Navbar.css';\n\n/**\n * JSX used to render the navbar on the page. Uses flexboxes to display information and links.\n * @returns JSX to create HTML navbar\n */\nconst Navbar = () => (\n  <div className=\"navbar\">\n    <NavLink to=\"/\">\n      <img\n        src=\"/images/logo-v3-white-whitepopcorn.png\"\n        alt=\"YaMovie\"\n        id=\"main-logo\"\n      />\n    </NavLink>\n    <ul id=\"navbar-links\">\n      <li>\n        <NavLink to=\"/browse\">Browse</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/chat\">Find YaMovie</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/about\">About</NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/LloydChat.css';\n\nconst LloydChat = () => (\n  <div id=\"lloyd-outline\">\n    <Link to=\"/chat\">\n      <img\n        src=\"/images/Lloyd.png\"\n        alt=\"Talk to Lloyd!\"\n        id=\"chatbot-btn\"\n      />\n    </Link>\n  </div>\n);\n\nexport default LloydChat;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport LloydChat from '../components/LloydChat';\nimport '../css/HomePage.css';\n\nconst background = {\n  'background-image': 'url(\\'../../images/landing-bg-v1.jpg\\')',\n};\n\nconst HomePage = () => (\n  <div className=\"landing-body\">\n    <Navbar />\n    <LloydChat />\n    <section id=\"link-container\" style={background}>\n      <div id=\"landing-quote\">\n        <h3>We find your movie,</h3>\n        <h3>You bring the popcorn!</h3>\n      </div>\n      <div id=\"link-info\">\n        <Link to=\"/chat\">Find YaMovie!</Link>\n      </div>\n    </section>\n\n    <article id=\"overview\">\n      <img\n        src=\"/images/logo-v3.png\"\n        alt=\"YaMovie!\"\n      />\n      <span id=\"movie-summary\">\n        Our technology intelligently takes your unique personality, viewing\n        habits, and diverse interests to curate the right movies for you!\n      </span>\n    </article>\n\n    <section id=\"info-container\">\n      <div className=\"info-card\">\n        <img\n          src=\"/images/browsing-white.png\"\n          alt=\"Browse\"\n        />\n        <h2>Browse</h2>\n        <p>\n          Go through our collection of thousands of movies with up-to-date\n          information, including critic ratings and links to streaming sources.\n        </p>\n      </div>\n      <div className=\"info-card\">\n        <img\n          src=\"/images/lloyd-white.png\"\n          alt=\"Chatbot\"\n        />\n        <h2>Chatbot</h2>\n        <p>\n          On our site, you will meet Lloyd our chatbot! He will ask you a set of\n          personalized questions to help you pinpoint the movie you are craving.\n        </p>\n      </div>\n      <div className=\"info-card\">\n        <img\n          src=\"/images/account-white.png\"\n          alt=\"Benefits\"\n        />\n        <h2>Account Benefits</h2>\n        <p>\n          By signing up with YaMovie, we can save what you enjoy so it will be\n          easier for you and more accurate for us to curate movies for you in\n          the future!\n        </p>\n      </div>\n    </section>\n  </div>\n);\n\nexport default HomePage;\n","/** Movie data schema:\n * title: String\n * releaseYear: Number\n * cast: String array\n * director: String\n * tags: Object\n *    genres: String array\n *    moods: String array\n * ratings: Object\n *    mpaa: String\n *    rottenTomatoes: Object\n *      score: String\n *      link: String\n *    imdb: Object\n *      score: Number\n *      link: String\n * plot: String\n * media: Object\n *    posterUrl: String\n *    trailerUrl: String\n * quotes: String array\n * runtime: Number (in minutes)\n * streams: Object\n *    netflix: String\n *    hulu: String\n *    amazon: String\n *    youtube: String\n *    theaters: String\n */\nconst movieData = [\n  {\n    id: 1,\n    title: 'How to Train Your Dragon: The Hidden World',\n    releaseYear: 2019,\n    cast: ['Jay Baruchel'],\n    director: 'Dean Deblois',\n    tags: {\n      genres: ['Animation', 'Action', 'Adventure', 'Comedy', 'Family', 'Fantasy'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG',\n      rottenTomatoes: {\n        score: '92%',\n        link:\n          'https://www.rottentomatoes.com/m/how_to_train_your_dragon_the_hidden_world',\n      },\n      imdb: {\n        score: 7.9,\n        link: 'https://www.imdb.com/title/tt2386490',\n      },\n    },\n    plot:\n      \"As Hiccup fulfills his dream of creating a peaceful dragon utopia, Toothless' discovery of an untamed, elusive mate draws the Night Fury away. When danger mounts at home and Hiccup's reign as village chief is tested, both dragon and rider must make impossible decisions to save their kind.\",\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BMjIwMDIwNjAyOF5BMl5BanBnXkFtZTgwNDE1MDc2NTM@._V1_SY1000_CR0,0,631,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/SkcucKDrbOI',\n    },\n    quotes: [''],\n    runtime: 104,\n    streams: {\n      theaters:\n        'https://www.fandango.com/how-to-train-your-dragon-the-hidden-world-212232/movie-overview',\n    },\n  },\n  {\n    id: 2,\n    title: 'Alita: Battle Angel',\n    releaseYear: 2019,\n    cast: ['Rosa Salazar'],\n    director: 'Robert Rodriguez',\n    tags: {\n      genres: ['Action', 'Adventure', 'Romance', 'Sci-Fi', 'Thriller'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG-13',\n      rottenTomatoes: {\n        score: '59%',\n        link: 'https://www.rottentomatoes.com/m/alita_battle_angel',\n      },\n      imdb: {\n        score: 7.6,\n        link: 'https://www.imdb.com/title/tt0437086',\n      },\n    },\n    plot:\n      \"Alita is a creation from an age of despair. Found by the mysterious Dr. Ido while trolling for cyborg parts, Alita becomes a lethal, dangerous being. She cannot remember who she is, or where she came from. But to Dr. Ido, the truth is all too clear. She is the one being who can break the cycle of death and destruction left behind from Tiphares. But to accomplish her true purpose, she must fight and kill. And that is where Alita's true significance comes to bear. She is an angel from heaven. She is an angel of death.\",\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BNzVhMjcxYjYtOTVhOS00MzQ1LWFiNTAtZmY2ZmJjNjIxMjllXkEyXkFqcGdeQXVyNTc5OTMwOTQ@._V1_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/w7pYhpJaJW8',\n    },\n    quotes: [''],\n    runtime: 122,\n    streams: {\n      theaters: 'https://www.fandango.com/alita-battle-angel-208277/movie-overview',\n    },\n  },\n  {\n    id: 3,\n    title: 'The Lego Movie 2: The Second Part',\n    releaseYear: 2019,\n    cast: ['Chris Pratt'],\n    director: 'Mike Mitchell',\n    tags: {\n      genres: [\n        'Animation',\n        'Action',\n        'Adventure',\n        'Comedy',\n        'Family',\n        'Fantasy',\n        'Musical',\n      ],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG',\n      rottenTomatoes: {\n        score: '86%',\n        link: 'https://www.rottentomatoes.com/m/the_lego_movie_2_the_second_part',\n      },\n      imdb: {\n        score: 7.1,\n        link: 'https://www.imdb.com/title/tt3513498',\n      },\n    },\n    plot:\n      \"It's been five years since everything was awesome and the citizens are facing a huge new threat: Lego Duplo invaders from outer space, wrecking everything faster than they can rebuild.\",\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BMTkyOTkwNDc1N15BMl5BanBnXkFtZTgwNzkyMzk3NjM@._V1_SY1000_CR0,0,674,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/XvHSlHhh1gk',\n    },\n    quotes: [''],\n    runtime: 104,\n    streams: {\n      theaters:\n        'https://www.fandango.com/the-lego-movie-2-the-second-part-185756/movie-overview',\n    },\n  },\n\n  {\n    id: 4,\n    title: 'Fighting with My Family',\n    releaseYear: 2019,\n    cast: ['Dwayne Johnson'],\n    director: 'Stephen Merchant',\n    tags: {\n      genres: ['Biography', 'Comdey', 'Drama', 'Sport'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG-13',\n      rottenTomatoes: {\n        score: '91%',\n        link: 'https://www.rottentomatoes.com/m/fighting_with_my_family',\n      },\n      imdb: {\n        score: 7.8,\n        link: 'https://www.imdb.com/title/tt6513120',\n      },\n    },\n    plot:\n      'A former wrestler and his family make a living performing at small venues around the country while his kids dream of joining World Wrestling Entertainment.',\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BMjQ3MTk4Nzc1M15BMl5BanBnXkFtZTgwMTEwMDU5NjM@._V1_SY1000_CR0,0,675,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/WqF3VTv0cqU',\n    },\n    quotes: [''],\n    runtime: 108,\n    streams: {\n      theaters: 'https://www.fandango.com/fighting-with-my-family-215780/movie-overview',\n    },\n  },\n  {\n    id: 5,\n    title: \"Isn't It Romantic\",\n    releaseYear: 2019,\n    cast: ['Rebel Wilson'],\n    director: 'Todd Strauss-Schulson',\n    tags: {\n      genres: ['Comdey', 'Fantasy', 'Romance'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG-13',\n      rottenTomatoes: {\n        score: '69%',\n        link: 'https://www.rottentomatoes.com/m/isnt_it_romantic_2019',\n      },\n      imdb: {\n        score: 6.3,\n        link: 'https://www.imdb.com/title/tt2452244',\n      },\n    },\n    plot:\n      'A young woman disenchanted with love mysteriously finds herself trapped inside a romantic comedy.',\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BZGE1NGYxOWItODdmMy00NWNhLTgxZmMtYmVjYmViMGI0NTdmXkEyXkFqcGdeQXVyNzE2MTQyMzM@._V1_SY1000_CR0,0,674,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/8ZwgoVmILQU',\n    },\n    quotes: [''],\n    runtime: 88,\n    streams: {\n      theaters: 'https://www.fandango.com/isnt-it-romantic-215554/movie-overview',\n    },\n  },\n  {\n    id: 6,\n    title: 'What Men Want',\n    releaseYear: 2019,\n    cast: ['Taraji P. Henson'],\n    director: 'Adam Shankman',\n    tags: {\n      genres: ['Comdey', 'Fantasy', 'Romance'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'R',\n      rottenTomatoes: {\n        score: '46%',\n        link: 'https://www.rottentomatoes.com/m/what_men_want_2019',\n      },\n      imdb: {\n        score: 4.3,\n        link: 'https://www.imdb.com/title/tt7634968',\n      },\n    },\n    plot:\n      \"A woman is boxed out by the male sports agents in her profession, but gains an unexpected edge over them when she develops the ability to hear men's thoughts.\",\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BMTYxNjE2NjIwOF5BMl5BanBnXkFtZTgwMjE0MzkxNzM@._V1_SY1000_CR0,0,674,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/HeoLiTirRp4',\n    },\n    quotes: [''],\n    runtime: 117,\n    streams: {\n      theaters: 'https://www.fandango.com/what-men-want-213523/movie-overview',\n    },\n  },\n  {\n    id: 7,\n    title: 'Happy Death Day 2U',\n    releaseYear: 2019,\n    cast: ['Jessica Rothe'],\n    director: 'Christopher Landon',\n    tags: {\n      genres: ['Drama', 'Horror', 'Mystery', 'Sci-Fi', 'Thriller'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG-13',\n      rottenTomatoes: {\n        score: '68%',\n        link: 'https://www.rottentomatoes.com/m/happy_death_day_2u',\n      },\n      imdb: {\n        score: 6.7,\n        link: 'https://www.imdb.com/title/tt8155288',\n      },\n    },\n    plot:\n      \"Having survived the farcical but utterly life-threatening events in Happy Death Day (2017), the feisty sorority sister, Tree Gelbman, finds herself in the same college dorm, thankful to be alive. However, this time, it's Carter's roommate, Ryan, who claims that he is reliving the same paradoxical day over and over again, as a mysterious paranoid killer in a single-toothed baby-faced mask with a big kitchen knife has made a habit of murdering him. Under those circumstances, a valiant but vain attempt to face the challenge, once more, will send Tree back to square one, trapped in an all too familiar and blood-drenched time loop. How many deaths separate Tree from a truly happy birthday?\",\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BMTg0NzkwMzQyMV5BMl5BanBnXkFtZTgwNDcxMTMyNzM@._V1_SY1000_CR0,0,631,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/MT9MBytHuOI',\n    },\n    quotes: [''],\n    runtime: 100,\n    streams: {\n      theaters: 'https://www.fandango.com/happy-death-day-2u-215139/movie-overview',\n    },\n  },\n  {\n    id: 8,\n    title: 'Cold Pursuit',\n    releaseYear: 2019,\n    cast: ['Liam Neeson'],\n    director: 'Hans Petter Moland',\n    tags: {\n      genres: ['Action', 'Crime', 'Drama', 'Thriller'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'R',\n      rottenTomatoes: {\n        score: '70%',\n        link: 'https://www.rottentomatoes.com/m/cold_pursuit',\n      },\n      imdb: {\n        score: 6.6,\n        link: 'https://www.imdb.com/title/tt5719748',\n      },\n    },\n    plot:\n      'Quiet family man and hard-working snowplow driver Nels is the lifeblood of a glitzy resort town in the Rocky Mountains because he is the one who keeps the winter roads clear. He and his wife live in a comfortable cabin away from the tourists. The town has just awarded him \"Citizen of the Year.\" But Nels has to leave his quiet mountain life when his son is murdered by a powerful drug lord. As a man who has nothing to lose he is stoked by a drive for vengeance. This unlikely hero uses his hunting skills and transforms from an ordinary man into a skilled killer as he sets out to dismantle the cartel. Nels\\' actions ignite a turf war between a manically unpredictable gangster known as Viking and a rival gang boss. Justice is served in one final spectacular confrontation that will leave (almost) no one unscathed.',\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BM2YyYWI3NjItMWEwZS00MzhkLWJmZTMtZDAzYjRhODM0OTMzXkEyXkFqcGdeQXVyMjM4NTM5NDY@._V1_SY1000_CR0,0,648,1000_AL_.jpg',\n      trailerUrl: 'https://youtu.be/0phuNQQ_gHI',\n    },\n    quotes: [''],\n    runtime: 119,\n    streams: {\n      theaters: 'https://www.fandango.com/cold-pursuit-215413/movie-overview',\n    },\n  },\n  {\n    id: 9,\n    title: 'The Upside',\n    releaseYear: 2019,\n    cast: ['Kevin Hart'],\n    director: '',\n    tags: {\n      genres: ['Comedy', 'Drama'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG-13',\n      rottenTomatoes: {\n        score: '40%',\n        link: 'https://www.rottentomatoes.com/m/the_upside',\n      },\n      imdb: {\n        score: 6.3,\n        link: 'https://www.imdb.com/title/tt1987680',\n      },\n    },\n    plot:\n      'Philip is a disabled white billionaire, who feels that life is not worth living. To help him in his day to day routine, he hires Del, an African American parolee, trying to reconnect with his estranged wife. What begins as a professional relationship develops into a friendship as Del shows his grouchy charge that life is worth living.',\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BNzY3NzYyNjI0N15BMl5BanBnXkFtZTgwNjYzMDc0NjM@._V1_SY1000_CR0,0,674,1000_AL_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/EWw7rCHcduQ',\n    },\n    quotes: [''],\n    runtime: 126,\n    streams: {\n      theaters: 'https://www.fandango.com/the-upside-214774/movie-overview',\n    },\n  },\n  {\n    id: 10,\n    title: 'Run the Race',\n    releaseYear: 2019,\n    cast: ['Mykelti Williamson'],\n    director: 'Chris Downling',\n    tags: {\n      genres: ['Drama', 'Sport'],\n      moods: [''],\n    },\n    ratings: {\n      mpaa: 'PG',\n      rottenTomatoes: {\n        score: '40%',\n        link: 'https://www.rottentomatoes.com/m/run_the_race',\n      },\n      imdb: {\n        score: 6.3,\n        link: 'https://www.imdb.com/title/tt3201736',\n      },\n    },\n    plot:\n      'Against the backdrop of high school football and track, two brothers in a small Southern town face escalating problems with two different world views, straining - but ultimately strengthening - the bonds of brotherhood.',\n    media: {\n      posterUrl:\n        'https://m.media-amazon.com/images/M/MV5BODY5ZmIwYzItY2M0NS00NDBkLTk3OWQtNjgzN2MwNzc3ZmQzXkEyXkFqcGdeQXVyODUwNjMwOQ@@._V1_.jpg',\n      trailerUrl: 'https://www.youtube.com/embed/ebELWVvbUKo',\n    },\n    quotes: [''],\n    runtime: 101,\n    streams: {\n      theaters: 'https://www.fandango.com/run-the-race-216281/movie-overview',\n    },\n  },\n];\n\n/** MovieAPI */\nexport default class MovieAPI {\n  /**\n   * Contruct new MovieAPI instance\n   */\n  constructor() {\n    this.movies = movieData;\n  }\n\n  /**\n   * Return movie data\n   */\n  getMovies() {\n    return this.movies;\n  }\n\n  /**\n   * Filters movies by genre\n   * @param {string} genre\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByGenre(genre, movies = this.movies) {\n    return movies.filter(movie => movie.tags.genres.includes(genre));\n  }\n\n  /**\n   * Filters movies by mood\n   * @param {string} mood\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByMood(mood, movies = this.movies) {\n    return movies.filter(movie => movie.tags.moods.includes(mood));\n  }\n\n  /**\n   * Filters movies by age range, based on MPAA ratings\n   * @param {string} agerange\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByAge(agerange, movies = this.movies) {\n    if (agerange === '12under') {\n      return movies.filter(\n        movie => movie.ratings.mpaa === 'G' || movie.ratings.mpaa === 'PG',\n      );\n    }\n    if (agerange === '13to16') {\n      return movies.filter(\n        movie =>\n          // eslint-disable-next-line implicit-arrow-linebreak\n          movie.ratings.mpaa === 'G' ||\n          movie.ratings.mpaa === 'PG' ||\n          movie.ratings.mpaa === 'PG-13',\n      );\n    }\n    return movies;\n  }\n\n  /**\n   * Filters movies by release year\n   * @param {string} release Should be 'classic', 'modern', or 'in-between'\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByRelease(release, movies = this.movies) {\n    if (release === 'classic') {\n      return movies.filter(movie => movie.releaseYear <= 1990);\n    }\n    if (release === 'in-between') {\n      return movies.filter(movie => movie.releaseYear > 1990 && movie.releaseYear < 2010);\n    }\n    if (release === 'modern') {\n      return movies.filter(movie => movie.releaseYear >= 2010);\n    }\n    return movies;\n  }\n\n  /**\n   * Filters movies by animated or not\n   * @param {boolean} animated Should be true if animated, false otherwise\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByAnimated(animated, movies = this.movies) {\n    if (animated) {\n      return movies.filter(movie => movie.tags.isAnimated);\n    }\n    return movies.filter(movie => !movie.tags.isAnimated);\n  }\n\n  /**\n   * Filters movies by foreign or not\n   * @param {boolean} foreign Should be true if foreign, false otherwise\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByForeign(foreign, movies = this.movies) {\n    if (foreign) {\n      return movies.filter(movie => movie.tags.isForeign);\n    }\n    return movies.filter(movie => !movie.tags.isForeign);\n  }\n\n  /**\n   * Filters movies if they are independent or not\n   * @param {boolean} indie Should be true if independent, false otherwise\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByIndie(indie, movies = this.movies) {\n    if (indie) {\n      return movies.filter(movie => movie.tags.isIndie);\n    }\n    return movies.filter(movie => !movie.tags.isIndie);\n  }\n\n  /**\n   * Filters movies by Rotten Tomatoes rating\n   * @param {number} threshold Should be the threshold percentage\n   * @param {boolean} [above] Whether you want movies with ratings above (true) or\n   *                          below (false) the threshold\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByRTRatings(threshold, above = true, movies = this.movies) {\n    if (above) {\n      return movies.filter(movie => movie.ratings.rottenTomatoes > threshold);\n    }\n    return movies.filter(movie => movie.ratings.rottenTomatoes <= threshold);\n  }\n\n  /**\n   * Filters movies by IMDB rating\n   * @param {number} threshold Should be the threshold number\n   * @param {boolean} [above] Whether you want movies with ratings above (true) or\n   *                          below (false) the threshold\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByIMDBRatings(threshold, above = true, movies = this.movies) {\n    if (above) {\n      return movies.filter(movie => movie.ratings.imdb > threshold);\n    }\n    return movies.filter(movie => movie.ratings.imdb <= threshold);\n  }\n\n  /**\n   * Filters movies by streaming services\n   * @param {string[]} services List of the services to include\n   * @param {Object} [movies] Optional list of movies to filter\n   * @returns array of filtered movies\n   */\n  getMoviesByStreams(services, movies = this.movies) {\n    return movies.filter(movie => {\n      let inclMovie = false;\n      // go through each service in the list, this should be strings like \"netflix\", \"amazon\", etc\n      services.forEach(service => {\n        // for each service type we want, check if the current movie has a stream for that service\n        if (movie.streams[service]) {\n          // if it does have a stream for that, it can stay in the end result of the filter\n          inclMovie = true;\n        }\n      });\n      /* if movie has at least one of the requested streams, this will be true and so \n        movie will be included, but if it has none of the streams this will stay false */\n      return inclMovie;\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport MovieAPI from '../MovieApi.js';\nimport '../css/MovieCard.css';\n\nclass MovieCard extends Component {\n  /**\n   * Creates a new movie card element using a movie data object\n   * @param {object} [movie] the movie data to use to fill this card\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      loading: true,\n    };\n    this.movieApi = new MovieAPI();\n  }\n\n  componentDidMount() {\n    const { movie } = this.props;\n    this.setState({\n      movie,\n      loading: false,\n    });\n  }\n\n  /**\n   * Renders the movie card in HTML on the page. Uses CSS grid to display information\n   * in three segments: trailer, descriptive info, and stream links.\n   */\n  render() {\n    const { movie, loading } = this.state;\n    const { toggleModal } = this.props;\n\n    if (loading === true) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"movie-card\">\n        <div className=\"backdrop\">\n          {/* <div className=\"overlay\" /> */}\n          <img src={movie.images.backdrops[0].url} alt=\"\" />\n        </div>\n        <div className=\"info\">\n          <button type=\"button\" className=\"close-modal\" onClick={toggleModal()}>\n            &times;\n          </button>\n          <div className=\"heading\">\n            <img className=\"poster\" alt={movie.title} src={movie.images.posters[0].url} />\n            <h1>{movie.title}</h1>\n            <div id=\"line2\">\n              <h4>\n                {`${movie.release_date.substring(0, 4)}, ${\n                  movie.credits.crew.find(member => member.job === 'Director').name\n                }`}\n              </h4>\n              <RatingsView movie={movie} />\n            </div>\n            <span className=\"runtime\">{movie.runtime} min</span>\n            <p className=\"genres\">Some Genres</p>\n          </div>\n          <div className=\"description\">\n            <p>{movie.overview}</p>\n          </div>\n          <StreamsView movie={movie} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n\n// ============================================================\n// ============================================================\n// Sub-components\n\n// ============================================================\n// Stream Links\n// const streamOptions = movie.streams;\n// const streamKeys = Object.keys(streamOptions);\nconst StreamsView = ({ movie }) => (\n  <div id=\"streams\">\n    <h3>Watch Links Coming Soon!</h3>\n    {/* <ul>\n        {streamKeys.map(streamName => (\n          <li>\n            <a href={streamOptions[streamName]} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img\n                src=\"/images/icon-${streamName}.png\"\n                alt={`${streamName.charAt(0).toUpperCase()}${streamName.slice(1)}`}\n              />\n            </a>\n          </li>\n        ))}\n      </ul> */}\n  </div>\n)\n;\n\n// ============================================================\n// Ratings\nconst RatingsView = ({ movie }) => {\n  const rtRatingObj = movie.ratings.find(obj => obj.source === 'Rotten Tomatoes');\n  const rtRating = rtRatingObj ? rtRatingObj.value : '??';\n  const imdbRatingObj = movie.ratings.find(\n    obj => obj.source === 'Internet Movie Database',\n  );\n  const imdbRating = imdbRatingObj ? imdbRatingObj.value : '??';\n\n  const rtImg =\n    rtRating >= '60%'\n      ? 'icon-rottentomatoes-fresh.png'\n      : 'icon-rottentomatoes-rotten.png';\n  return (\n    <div id=\"ratings\">\n      <li>\n        <a href=\"http://www.rottentomatoes.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={`/images/${rtImg}`} alt=\"Rotten Tomatoes\" />\n          {rtRating}\n        </a>\n      </li>\n      <li>\n        <a href=\"http://www.imdb.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"/images/icon-IMDb.png\" alt=\"IMDb\" />\n          {imdbRating}\n        </a>\n      </li>\n      {/* <li>\n      <img src=\"/images/icon-star.png\" alt=\"User Rating\" />\n      Users: 5/5\n    </li> */}\n    </div>\n  );\n};\n\n// ============================================================\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass GenreList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      genres: [],\n    };\n  }\n\n  // =================== Grabs Genre List from API ==============\n\n  componentDidMount() {\n    axios\n      .get('https://yamovie-server.herokuapp.com/api/genres')\n      .then(response => this.setState({ genres: response.data }));\n  }\n\n  // Renders the genre list to the MovieList page. ==================\n\n  render() {\n    const { genres } = this.state;\n    const { moviesByGenreKey } = this.props;\n    return (\n      <div id=\"list-genres\">\n        <button className=\"single-genre\" type=\"button\" onClick={() => moviesByGenreKey('all')}>All</button>\n        {genres.map(genre => (\n          <button className=\"single-genre\" type=\"button\" onClick={() => moviesByGenreKey(genre.external_ids.tmdb_id)}>{genre.name}</button>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default GenreList;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport MovieAPI from '../MovieApi.js';\nimport MovieCard from './MovieCard';\nimport GenreList from './GenreList.js';\n\nclass MovieList extends Component {\n  /**\n   * Creates a movie list object and connects to the API\n   */\n  constructor() {\n    super();\n    this.api = new MovieAPI();\n    this.state = {\n      movies: [],\n      filteredGenre: null,\n      showGenreFilter: true,\n      isModalVisible: false,\n      selectedMovie: {},\n    };\n  }\n  // =================== Grabs Movie Data on Render =========================\n  // Sets the complete movie collection to state.\n\n  componentDidMount = () => {\n    const { showGenreFilter } = this.state;\n    if (showGenreFilter) {\n      axios\n        .get('https://yamovie-server.herokuapp.com/api/movies')\n        .then(response => this.setState({ movies: response.data }));\n    }\n  };\n\n  // ==================== Handles Filter Click ===============================\n\n  handleSendGenre = genreKey => {\n    if (genreKey === 'all') {\n      axios\n        .get('https://yamovie-server.herokuapp.com/api/movies')\n        .then(response => this.setState({ movies: response.data }));\n    } else {\n      axios\n        .get(`https://yamovie-server.herokuapp.com/api/movies/genre/${genreKey}`)\n        .then(response => this.setState({ movies: response.data }));\n    }\n  };\n\n  // handleAllMovies = () => {\n  //   axios\n  //     .get('https://yamovie-server.herokuapp.com/api/movies')\n  //     .then(response => this.setState({ movies: response.data }));\n  // }\n\n  toggleModal = id => {\n    // eslint-disable-next-line react/destructuring-assignment\n    if (this.state.isModalVisible) {\n      this.setState({ isModalVisible: false });\n    } else {\n      axios\n        .get(`https://yamovie-server.herokuapp.com/api/movies/${id}`)\n        .then(response =>\n          this.setState({\n            isModalVisible: true,\n            selectedMovie: response.data,\n          }),\n        )\n        .catch(err => console.log(err));\n    }\n  };\n\n  // Renders the movie list in HTML on the page. Uses flexboxes to display\n  // the genre list, and to display a grid of MovieItems based on breakpoints.\n\n  render() {\n    const {\n      movies,\n      showGenreFilter,\n      isModalVisible,\n      selectedMovie,\n      filteredGenre,\n    } = this.state;\n    const postersForAllMovies = movies.map(movie => movie.images.posters);\n\n    const imagesForAllMovies = postersForAllMovies.map(poster => poster.map(p => p.url));\n    // if (image && image[0] && image[0][0]) {\n    //   console.log(image[0][0]);\n    // }\n    console.log(imagesForAllMovies);\n\n    return (\n      <div id=\"movie-page\">\n        {isModalVisible && (\n          <MovieCard\n            toggleModal={() => this.toggleModal}\n            isModalVisible={isModalVisible}\n            movie={selectedMovie}\n          />\n        )}\n\n        <div\n          id=\"yamovie-movie-list\"\n          className=\"container\"\n          style={{ opacity: isModalVisible ? 0.08 : '' }}\n        >\n          {showGenreFilter ? <GenreList moviesByGenreKey={this.handleSendGenre} /> : ''}\n          <div id=\"list-all-movies\">\n            {// console.log(image);\n            // if (image && image[0]) {\n            imagesForAllMovies.map(\n              (moviePosters, i) => (\n                <div id=\"yamovie-movie-item\" key={movies[i].title}>\n                  {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events */}\n                  {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n                  {/* TODO: Wrap this in a button since it's an interactive element */}\n                  <img\n                    src={moviePosters[0]}\n                    alt={movies[i].title}\n                    className=\"img-fluid\"\n                    onClick={() => this.toggleModal(movies[i]._id)}\n                  />\n                </div>\n              ),\n              // }\n              // return (\n              //   <div id=\"yamovie-movie-loading\">\n              //   loading...\n              //   </div>\n              // );\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport MovieList from '../components/MovieList';\nimport Navbar from '../components/Navbar';\nimport '../css/BrowsePage.css';\n\n\nclass BrowsePage extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <MovieList class=\"container\" />\n      </div>\n    );\n  }\n}\n\nexport default BrowsePage;\n","import React from 'react';\nimport Navbar from '../components/Navbar';\nimport LloydChat from '../components/LloydChat';\nimport '../css/AboutPage.css';\n\nconst AboutPage = () => (\n  <div className=\"about-page\">\n    <Navbar />\n    <header>\n      <div className=\"overlay\" />\n      <video\n        src=\"/images/about-me-videooverlay.mp4\"\n        muted\n        autoPlay\n        loop\n      />\n      <div className=\"mission\">\n        <h1>Our Mission</h1>\n        <p>\n          Our mission is to transform how consumers choose which movies to watch. Our\n          technology intelligently curates a unique personal experience based on\n          personality, viewing habits, and diverse interests to help ensure that every\n          person loves the next movie more than the last.\n        </p>\n      </div>\n    </header>\n    <div className=\"info\">\n      <div className=\"info-panel\">\n        <img\n          src=\"/images/warning-sign.png\"\n          alt=\"warning\"\n          className=\"about-icon\"\n        />\n        <div>\n          <h3>The Problem</h3>\n          <p>\n            Over 500,000 movies available. It&apos;s hard to find a movie to watch with so\n            many options across mutiple platforms.\n            <br />\n            <br />\n            - 4,010 movies on Netflix 2018\n            <br />\n            - 18,405 movies on Amazon Prime 2016\n            <br />- Over 2,500 movies on Hulu 2018\n          </p>\n        </div>\n      </div>\n      <div className=\"info-panel\">\n        <img\n          src=\"/images/solution.png\"\n          alt=\"solution\"\n          className=\"about-icon\"\n        />\n        <div>\n          <h3>Solution</h3>\n          <p>\n            YaMovie offers a way to recieve personally curated movies all in one place and\n            provide info on where to watch them.\n          </p>\n        </div>\n      </div>\n      <div className=\"info-panel\">\n        <img\n          src=\"/images/book.png\"\n          alt=\"solution\"\n          className=\"about-icon\"\n        />\n        <div>\n          <h3>Story</h3>\n          <p>\n            Established in 2019 as part of the first Los Angeles cohort at TalentPath.\n            YaMovie was created by a team of software engineers who are passionate about\n            movies.\n          </p>\n        </div>\n      </div>\n    </div>\n    {/* <div className=\"lloyd-image\">\n          <img src={`/images/Lloyd.png`} />\n        </div>\n        <div className=\"lloyd\">\n          <h2>Lloyd</h2>\n          <p>Chatbot, AI Assistant, the Mastermind Behind YaMovie.</p>\n        </div> */}\n    <div className=\"avatar-section\">\n      <h2 className=\"avatar-header\">Meet The Team</h2>\n      <div className=\"avatar-list\">\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/ivy.png\"\n              alt=\"Ivy Lim\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Ivy</h3>\n          <h5 className=\"avatar-role\">Project Manager / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movies: Star Wars</p>\n          <p className=\"avatar-show\">Favorite Show: Game of Thrones</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/sam.png\"\n              alt=\"Sam Saks-Fithian\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Sam</h3>\n          <h5 className=\"avatar-role\">Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: Black Panther </p>\n          <p className=\"avatar-show\">Favorite Show: The Good Place</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Action Comedy</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/kevin.png\"\n              alt=\"Kevin Baktiar\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Kevin</h3>\n          <h5 className=\"avatar-role\">Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: The Matrix</p>\n          <p className=\"avatar-show\">Favorite Show: New Girl</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Sci-Fi</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/hans.png\"\n              alt=\"Hans Hanken\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Hans</h3>\n          <h5 className=\"avatar-role\">Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movies: Lord of the Rings</p>\n          <p className=\"avatar-show\">Favorite Show: Brooklyn Nine Nine</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Adventure</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/will.png\"\n              alt=\"Will Dale\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Will</h3>\n          <h5 className=\"avatar-role\">Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: The Producers</p>\n          <p className=\"avatar-show\">Favorite Show: The Wire</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Historical Drama</p>\n        </div>\n        <div className=\"avatar-container\">\n          <div className=\"avatar-item\">\n            <img\n              src=\"/images/glen.png\"\n              alt=\"Glen Paul Florendo\"\n              className=\"avatar-image\"\n            />\n          </div>\n          <h3 className=\"avatar-name\">Glen</h3>\n          <h5 className=\"avatar-role\">Back-End / Software Engineer</h5>\n          <p className=\"avatar-movie\">Favorite Movie: Spider-Man: Into the Spider-Verse</p>\n          <p className=\"avatar-show\">Favorite Show: The Office</p>\n          <p className=\"avatar-genre\"> Favorite Genre: Action</p>\n        </div>\n      </div>\n    </div>\n    <LloydChat />\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport MovieList from './MovieList';\nimport Navbar from './Navbar';\nimport '../css/MovieForm.css';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayForm: true,\n    };\n  }\n\n  /**\n   * Handles back button event. Sets displayForm (state) = true which toggles the html form\n   * and unmounts the Movielist component.\n   * @param {Event} event Clicking the back button\n   */\n  backToForm = event => {\n    event.preventDefault();\n    this.setState({ displayForm: true });\n  };\n\n  /**\n   * Handles submit event. Sets displayForm (state) = false\n   * which toggles the html form and mounts the MovieList\n   * component. Sets values in state equal to the parsed form data\n   * and passes them down as props to MovieList\n   * component so that it can utilize them to display movie results.\n   * @param {Event} event The triggering submit event\n   */\n  handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(document.getElementById('question-form'));\n    const mood = formData.get('q-mood');\n    const age = formData.get('q-age');\n    const release = formData.get('q-release');\n    const ratings = formData.getAll('q-ratings');\n    const animated = formData.get('q-animated');\n    const foreign = formData.get('q-foreign');\n    const indie = formData.get('q-indie');\n    const streaming = formData.getAll('q-streaming');\n\n    this.setState({\n      displayForm: false,\n      mood,\n      age,\n      release,\n      ratings,\n      animated,\n      foreign,\n      indie,\n      streaming,\n    });\n  };\n\n  render() {\n    const {\n      displayForm,\n      mood,\n      age,\n      release,\n      ratings,\n      animated,\n      foreign,\n      indie,\n      streaming,\n    } = this.state;\n    return (\n      <div>\n        <Navbar />\n        <div className=\"movie-form\">\n          {/* Ternary to either display the form or the results */}\n          {displayForm ? (\n            <div>\n              <h1>Movie Questionnaire!</h1>\n              <form className=\"form\" id=\"question-form\">\n                <ul className=\"odds\">\n                  <h3>What kind of movie are you in the mood for?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"funny\" name=\"q-mood\">\n                      Funny\n                      <input type=\"radio\" name=\"q-mood\" value=\"funny\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"sad\">\n                      Sad\n                      <input type=\"radio\" name=\"q-mood\" value=\"sad\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"dramatic\">\n                      Dramatic\n                      <input type=\"radio\" name=\"q-mood\" value=\"dramatic\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"scary\">\n                      Scary\n                      <input type=\"radio\" name=\"q-mood\" value=\"scary\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"action-packed\">\n                      Action Packed\n                      <input type=\"radio\" name=\"q-mood\" value=\"action-packed\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"romantic\">\n                      Romantic\n                      <input type=\"radio\" name=\"q-mood\" value=\"romantic\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"evens\">\n                  <h3>What is your age range?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"12under\">\n                      12 and Under\n                      <input type=\"radio\" name=\"q-age\" value=\"12under\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"13to18\">\n                      13 - 16\n                      <input type=\"radio\" name=\"q-age\" value=\"13to16\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"19to29\">\n                      17 - 29\n                      <input type=\"radio\" name=\"q-age\" value=\"17to29\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"30to40\">\n                      30 - 40\n                      <input type=\"radio\" name=\"q-age\" value=\"30to40\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"41to54\">\n                      41 - 54\n                      <input type=\"radio\" name=\"q-age\" value=\"41to54\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"55plus\">\n                      55+\n                      <input type=\"radio\" name=\"q-age\" value=\"55plus\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"odds\">\n                  <h3>Do you want to watch a classic or modern movie?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"classic\">\n                      Classic\n                      <input type=\"radio\" name=\"q-release\" value=\"classic\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"modern\">\n                      Modern\n                      <input type=\"radio\" name=\"q-release\" value=\"modern\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"in-between\">\n                      In between\n                      <input type=\"radio\" name=\"q-release\" value=\"in-between\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"evens\">\n                  <h3>Do you like animated films?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"yes-animated\">\n                      Yes\n                      <input type=\"radio\" name=\"q-animated\" value=\"yes-animated\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"no-animated\">\n                      No\n                      <input type=\"radio\" name=\"q-animated\" value=\"no-animated\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"odds\">\n                  <h3>Do you like foreign films?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"yes-foreign\">\n                      Yes\n                      <input type=\"radio\" name=\"q-foreign\" value=\"yes-foreign\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"no-foreign\">\n                      No\n                      <input type=\"radio\" name=\"q-foreign\" value=\"no-foreign\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"evens\">\n                  <h3>Do you like independent films?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"yes-indie\">\n                      Yes\n                      <input type=\"radio\" name=\"q-indie\" value=\"yes-indie\" />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"no-indie\">\n                      No\n                      <input type=\"radio\" name=\"q-indie\" value=\"no-indie\" />\n                    </label>\n                  </li>\n                </ul>\n                <ul className=\"odds\">\n                  <h3>What ratings do you care about?</h3>\n                  <li className=\"form-group\">\n                    {/* eslint-disable */}\n                    <label htmlFor=\"q-ratings\">\n                      Rotten Tomatoes\n                      <select name=\"q-ratings\">\n                        <option value=\"dont-care\" defaultValue=\"dont-care\">\n                          Do not Care\n                        </option>\n                        <option value=\">75\">Only &gt; 75%</option>\n                        <option value=\">60\">Only &gt; 60%</option>\n                      </select>\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"q-ratings\">\n                      IMDB\n                      <select name=\"q-ratings\">\n                        <option value=\"dont-care\" defaultValue=\"dont-care\">\n                          Do not Care\n                        </option>\n                        <option value=\">7\">Only &gt; 7/10</option>\n                        <option value=\">5\">Only &gt; 5/10</option>\n                      </select>\n                    </label>\n                  </li>\n                </ul>\n                {/* eslint-enable */}\n                <ul className=\"evens\">\n                  <h3>What movie services do you have access to?</h3>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"netflix\">\n                      Netflix\n                      <input\n                        type=\"checkbox\"\n                        name=\"q-streaming\"\n                        value=\"netflix\"\n                        defaultChecked\n                      />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"hulu\">\n                      Hulu\n                      <input\n                        type=\"checkbox\"\n                        name=\"q-streaming\"\n                        value=\"hulu\"\n                        defaultChecked\n                      />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"amazon\">\n                      Amazon Prime\n                      <input\n                        type=\"checkbox\"\n                        name=\"q-streaming\"\n                        value=\"amazon\"\n                        defaultChecked\n                      />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"youtube\">\n                      YouTube\n                      <input\n                        type=\"checkbox\"\n                        name=\"q-streaming\"\n                        value=\"youtube\"\n                        defaultChecked\n                      />\n                    </label>\n                  </li>\n                  <li className=\"form-group\">\n                    <label htmlFor=\"theaters\">\n                      Theaters\n                      <input\n                        type=\"checkbox\"\n                        name=\"q-streaming\"\n                        value=\"theaters\"\n                        defaultChecked\n                      />\n                    </label>\n                  </li>\n                </ul>\n                <button type=\"submit\" onClick={this.handleSubmit}>\n                  Submit\n                </button>\n              </form>\n            </div>\n          ) : (\n            <div>\n              {\n                <MovieList\n                  age={age}\n                  animated={animated}\n                  foreign={foreign}\n                  indie={indie}\n                  mood={mood}\n                  ratings={ratings}\n                  release={release}\n                  streaming={streaming}\n                  showGenreFilter={false}\n                />\n              }\n              <button type=\"submit\" onClick={this.backToForm}>\n                Back to Form\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport Botui from 'botui-react';\nimport '../css/ChatWindow.css';\nimport Navbar from './Navbar';\n\n\nclass ChatWindow extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     mood: 'funny',\n  //     age: '12under',\n  //     release: 'modern',\n  //     ratings: 'dont-care',\n  //     ratingsValue: {\n  //      rottenTomato: 0,\n  //      imdb: 0,\n  //     },\n  //     animated: true,\n  //     foreign: true,\n  //     indie: true\n  //   } \n  // }\n\n  componentDidMount() {\n    this.botui.message.bot({\n      content: 'Hello, My name is Lloyd!',\n      delay: 1000,\n    });\n    this.botui.message.bot({\n      content: 'Do you need help finding a movie?',\n      delay: 2000,\n    });\n    this.botui.action.button({\n      action: [\n        { value: true, text: 'Yes' },\n        { value: false, text: 'No' },\n      ],\n      delay: 3000,\n    }).then(res => { \n      if (res.value) {\n        this.botui.message.bot({\n          content: 'Okay, What kind of movie are you in the mood for?',\n          delay: 1000,\n        });\n        this.botui.action.button({\n          action: [\n            { value: 'funny', text: 'Funny' },\n            { value: 'sad', text: 'Sad' },\n            { value: 'dramatic', text: 'Dramatic' },\n            { value: 'scary', text: 'Scary' },\n            { value: 'action-packed', text: 'Action Packed' },\n            { value: 'romantic', text: 'Romantic' },\n          ],\n          delay: 3000,\n        }).then(moodRes => {\n          this.setState({ mood: moodRes.value });\n          if (moodRes.value) {\n            this.botui.message.bot({\n              content: 'Awesome!',\n              delay: 1000,\n            });\n            this.botui.message.bot({\n              content: 'What is your age range?',\n              delay: 2000,\n            });\n            this.botui.action.button({\n              action: [\n                { value: '12under', text: '12 and Under' },\n                { value: '13to17', text: '13 - 17' },\n                { value: '18to29', text: '18 - 29' },\n                { value: '30to40', text: '30 - 40' },\n                { value: '41to54', text: '41 - 54' },\n                { value: '55plus', text: '55+' },\n              ], \n              delay: 2000,\n            }).then(ageRes => {\n              this.setState({ age: ageRes.value });\n              if (ageRes.value) {\n                this.botui.message.bot({\n                  content: 'Thanks!',\n                  delay: 1000,\n                });\n                this.botui.message.bot({\n                  content: 'Do you want to watch a classic or modern movie?',\n                  delay: 2000,\n                });\n                this.botui.action.button({\n                  action: [\n                    { value: 'classic', text: 'Classic' },\n                    { value: 'modern', text: 'Modern' },\n                    { value: 'in-between', text: 'In Between' },\n                  ], \n                  delay: 3000,\n                }).then(releaseRes => {\n                  // this.setState({ release: 'releaseRes.value' })\n                  if (releaseRes.value) {\n                    this.botui.message.bot({\n                      content: 'Me too!',\n                      delay: 1000,\n                    });\n                    this.botui.message.bot({\n                      content: 'Do you like animated films?',\n                      delay: 2000,\n                    });\n                    this.botui.action.button({\n                      action: [\n                        { value: true, text: 'Yes' },\n                        { value: false, text: 'No' },\n                      ],\n                      delay: 3000,\n                    }).then(animatedRes => {\n                      this.setState({ animated: animatedRes.value })\n                      if (animatedRes) {\n                        this.botui.message.bot({\n                          content: 'How about foreign films?',\n                          delay: 1000,\n                        });\n                        this.botui.action.button({\n                          action: [\n                            { value: true, text: 'Yes' },\n                            { value: false, text: 'No' },\n                          ],\n                          delay: 2000,\n                        }).then(foreignRes => {\n                          this.setState({ foreign: foreignRes.value })\n                          if (foreignRes) {\n                            this.botui.message.bot({\n                              content: 'Great!',\n                              delay: 1000,\n                            });\n                            this.botui.message.bot({\n                              content: 'Do you like independent films?',\n                              delay: 2000,\n                            });\n                            this.botui.action.button({\n                              action: [\n                                { value: true, text: 'Yes' },\n                                { value: false, text: 'No' },\n                              ],\n                              delay: 3000,\n                            }).then(indieRes => {\n                              this.setState({ indie: indieRes.value })\n                              if (indieRes) {\n                                this.botui.message.bot({\n                                  content: 'You have good taste!',\n                                  delay: 1000,\n                                });\n                                this.botui.message.bot({\n                                  content: 'What ratings do you care about?',\n                                  delay: 2000,\n                                });\n                                this.botui.action.button({\n                                  action: [\n                                    { value: 'rotten-tomato', text: 'Rotten Tomato' },\n                                    { value: 'imdb', text: 'IMDB' },\n                                    { value: 'dont-care', text: 'I Dont Care' },\n                                    { value: 'both', text: 'Both' },\n                                  ],\n                                  delay: 3000,\n                                }).then(ratingRes => {\n                                  this.setState({ ratings: ratingRes.value })\n                                  if (ratingRes.value === 'both') {\n                                    this.botui.message.bot({\n                                      content: 'Minimum Rotten Tomato rating?',\n                                      delay: 1000,\n                                    });\n                                    this.botui.action.button({\n                                      action: [\n                                        { value: 60, text: '60%' },\n                                        { value: 75, text: '75%' },\n                                        { value: 0, text: 'No Minimum' },\n                                      ],\n                                      delay: 2000,\n                                    }).then(bothRes => {\n                                      this.setState({ ratingsValue: { rottenTomato: bothRes.value } })\n                                      this.botui.message.bot({\n                                        content: 'Minimum IMDB rating?',\n                                        delay: 1000,\n                                      });\n                                      this.botui.action.button({\n                                        action: [\n                                          { value: 5, text: '5/10' },\n                                          { value: 7, text: '7/10' },\n                                          { value: 0, text: 'No Minimum' },\n                                        ],\n                                        delay: 2000,\n                                      }).then(bothResp => {\n                                        this.setState({ ratingsValue: { imdb: bothResp.value } })\n                                        this.botui.message.bot({\n                                          loading: true,\n                                          content: 'Getting results now!',\n                                          delay: 1000,\n                                        });\n                                      });\n                                    });\n                                  }\n                                  if (ratingRes.value === 'rotten-tomato') {\n                                    this.botui.message.bot({\n                                      content: 'Minimum Rotten Tomato rating?',\n                                      delay: 1000,\n                                    });\n                                    this.botui.action.button({\n                                      action: [\n                                        { value: 60, text: '60%' },\n                                        { value: 75, text: '75%' },\n                                        { value: 0, text: 'No Minimum' },\n                                      ],\n                                      delay: 2000,\n                                    }).then(rottenTomatoRes => {\n                                      this.setState({ \n                                        ratingsValue: { \n                                          rottenTomato: rottenTomatoRes.value,\n                                        },\n                                      });\n                                      this.botui.message.bot({\n                                        loading: true,\n                                        content: 'Getting results now!',\n                                        delay: 1000,\n                                      });\n                                    });\n                                  }\n                                  if (ratingRes.value === 'imdb') {\n                                    this.botui.message.bot({\n                                      content: 'Minimum IMDB rating?',\n                                      delay: 1000,\n                                    });\n                                    this.botui.action.button({\n                                      action: [\n                                        { value: 5, text: '5/10' },\n                                        { value: 7, text: '7/10' },\n                                        { value: 0, text: 'No Minimum' },\n                                      ],\n                                      delay: 2000,\n                                    }).then(imdbResp => {\n                                      this.setState({ ratingsValue: { imdb: imdbResp.value } })\n                                      this.botui.message.bot({\n                                        loading: true,\n                                        content: 'Getting results now!',\n                                        delay: 1000,\n                                      });\n                                    });\n                                  } \n                                  if (ratingRes.value === 'dont-care') {\n                                    this.botui.message.bot({\n                                      loading: true,\n                                      content: 'Getting results now!',\n                                      delay: 1000,\n                                    });\n                                  }\n                                });                                \n                              }\n                            });\n                          }\n                        });\n                      }\n                    });\n                  }\n                });\n              }\n            });\n          }\n        });\n      } else {\n        this.botui.message.bot({\n          content: 'Okay, goodbye',\n          delay: 1000,\n        });\n      }\n    });\n    // .then...\n  }\n\n  render() {\n    return (\n      // eslint-disable-next-line react/jsx-no-comment-textnodes\n      <div className=\"chat-window\">\n        <Navbar />\n        <Botui ref={cmp => this.botui = cmp} />\n      </div>\n    );\n  }\n}\n\nexport default ChatWindow;\n\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport BrowsePage from './pages/BrowsePage';\nimport AboutPage from './pages/AboutPage';\nimport MovieForm from './components/MovieForm';\nimport ChatWindow from './components/ChatWindow';\nimport './css/main.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Route exact path=\"/\" component={HomePage}>\n      Home\n    </Route>\n    <Switch>\n      <Route path=\"/browse\" component={BrowsePage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/movieform\" component={MovieForm} />\n      <Route path=\"/chat\" component={ChatWindow} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><Route component={App} /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}